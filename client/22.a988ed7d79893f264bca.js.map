{"version":3,"sources":["webpack:///./components/password_reset_send_link/password_reset_send_link.js","webpack:///./components/password_reset_send_link/index.js","webpack:///./components/common/back_button.jsx"],"names":["PasswordResetSendLink","React","PureComponent","[object Object]","args","super","_defineProperty","this","error","updateText","createRef","async","e","preventDefault","input","emailInput","current","email","value","trim","toLowerCase","isEmail","setState","react_default","a","createElement","index_es","id","defaultMessage","data","props","actions","sendPasswordResetEmail","className","resetForm","hidden","message","update_text","render","state","formClass","back_button","onSubmit","handleSendLink","ref","localized_input","type","name","placeholder","t","spellCheck","autoFocus","PropTypes","shape","func","isRequired","connect","dispatch","bindActionCreators","BackButton","react__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","onClick","to","url","react_intl__WEBPACK_IMPORTED_MODULE_2__","title","string"],"mappings":"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","file":"22.a988ed7d79893f264bca.js","sourcesContent":["// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport BackButton from 'components/common/back_button';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nexport default class PasswordResetSendLink extends React.PureComponent {\n    static propTypes = {\n        actions: PropTypes.shape({\n            sendPasswordResetEmail: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    state = {\n        error: null,\n        updateText: null,\n    };\n    resetForm = React.createRef();\n    emailInput = React.createRef();\n\n    handleSendLink = async (e) => {\n        e.preventDefault();\n\n        const input = this.emailInput.current && this.emailInput.current.input.current;\n        const email = input && input.value.trim().toLowerCase();\n        if (!email || !isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id={'password_send.error'}\n                        defaultMessage={'Please enter a valid email address.'}\n                    />\n                ),\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({error: null});\n\n        const {data, error} = await this.props.actions.sendPasswordResetEmail(email);\n        if (data) {\n            this.setState({\n                error: null,\n                updateText: (\n                    <div\n                        id='passwordResetEmailSent'\n                        className='reset-form alert alert-success'\n                    >\n                        <FormattedMessage\n                            id='password_send.link'\n                            defaultMessage='If the account exists, a password reset email will be sent to:'\n                        />\n                        <div>\n                            <b>{email}</b>\n                        </div>\n                        <br/>\n                        <FormattedMessage\n                            id='password_send.checkInbox'\n                            defaultMessage='Please check your inbox.'\n                        />\n                    </div>\n                ),\n            });\n            if (this.resetForm.current) {\n                this.resetForm.current.hidden = true;\n            }\n        } else if (error) {\n            this.setState({\n                error: error.message,\n                update_text: null,\n            });\n        }\n    }\n\n    render() {\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>{this.state.error}</label>\n                </div>\n            );\n        }\n\n        let formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='password_send.title'\n                                defaultMessage='Password Reset'\n                            />\n                        </h3>\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref={this.resetForm}\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <LocalizedInput\n                                    id='passwordResetEmailInput'\n                                    type='email'\n                                    className='form-control'\n                                    name='email'\n                                    placeholder={{id: t('password_send.email'), defaultMessage: 'Email'}}\n                                    ref={this.emailInput}\n                                    spellCheck='false'\n                                    autoFocus={true}\n                                />\n                            </div>\n                            {error}\n                            <button\n                                id='passwordResetButton'\n                                type='submit'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {sendPasswordResetEmail} from 'mattermost-redux/actions/users';\n\nimport PasswordResetSendLink from './password_reset_send_link';\n\nconst mapDispatchToProps = (dispatch) => ({\n    actions: bindActionCreators({\n        sendPasswordResetEmail,\n    }, dispatch),\n});\n\nexport default connect(null, mapDispatchToProps)(PasswordResetSendLink);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}