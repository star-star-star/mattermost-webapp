{"version":3,"sources":["webpack:///./components/signup/signup_controller/signup_controller.jsx","webpack:///./components/signup/signup_controller/index.js","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png"],"names":["SignupController","React","Component","constructor","props","super","_defineProperty","this","async","token","inviteId","data","team","error","actions","addUserToTeamFromInvite","browserHistory","push","name","concat","Constants","DEFAULT_CHANNEL","handleInvalidInvite","getTeamInviteInfo","setState","serverError","loading","err","server_error_id","message","react_default","a","createElement","index_es","id","defaultMessage","noOpenServerError","formatMessage","context","intl","signupControls","enableSignUpWithEmail","react_router_dom","className","key","to","window","location","search","title","enableSignUpWithGitLab","href","Client4","getOAuthRoute","isLicensed","enableSignUpWithGoogle","enableSignUpWithOffice365","enableLDAP","params","URLSearchParams","append","query","toString","LDAPText","ldapLoginFieldName","enableSAML","samlLoginButtonText","length","signupDisabledError","form_error","margin","usedBefore","get","loggedIn","enableOpenServer","noAccounts","state","componentDidMount","removeGlobalItem","userLoggedIn","getInviteInfo","GlobalActions","render","loading_screen","renderSignupControls","announcement_bar","back_button","alt","src","logoImage","siteName","PropTypes","object","bool","isRequired","string","shape","func","intlShape","connect","ownProps","license","getLicense","config","getConfig","IsLicensed","EnableOpenServer","NoAccounts","EnableSignUpWithEmail","EnableSignUpWithGitLab","EnableSignUpWithGoogle","EnableSignUpWithOffice365","EnableLdap","EnableSaml","SamlLoginButtonText","LdapLoginFieldName","SiteName","getGlobalItem","Boolean","getCurrentUserId","dispatch","bindActionCreators","BackButton","PureComponent","react__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","onClick","url","react_intl__WEBPACK_IMPORTED_MODULE_2__","module","exports","__webpack_require__","p"],"mappings":"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","file":"17.8fc8798dc4dddc069909.js","sourcesContent":["// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {browserHistory} from 'utils/browser_history';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport logoImage from 'images/logo.png';\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport FormError from 'components/form_error.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport {Constants} from 'utils/constants.jsx';\n\nexport default class SignupController extends React.Component {\n    static propTypes = {\n        location: PropTypes.object,\n        loggedIn: PropTypes.bool.isRequired,\n        isLicensed: PropTypes.bool.isRequired,\n        enableOpenServer: PropTypes.bool.isRequired,\n        noAccounts: PropTypes.bool.isRequired,\n        enableSignUpWithEmail: PropTypes.bool.isRequired,\n        enableSignUpWithGitLab: PropTypes.bool.isRequired,\n        enableSignUpWithGoogle: PropTypes.bool.isRequired,\n        enableSignUpWithOffice365: PropTypes.bool.isRequired,\n        enableLDAP: PropTypes.bool.isRequired,\n        enableSAML: PropTypes.bool.isRequired,\n        samlLoginButtonText: PropTypes.string,\n        siteName: PropTypes.string,\n        usedBefore: PropTypes.string,\n        ldapLoginFieldName: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            removeGlobalItem: PropTypes.func.isRequired,\n            getTeamInviteInfo: PropTypes.func.isRequired,\n            addUserToTeamFromInvite: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        let loading = false;\n        let serverError = '';\n        let noOpenServerError = false;\n        let usedBefore = false;\n\n        if (this.props.location.search) {\n            const params = new URLSearchParams(this.props.location.search);\n            let token = params.get('t');\n            if (token == null) {\n                token = '';\n            }\n            let inviteId = params.get('id');\n            if (inviteId == null) {\n                inviteId = '';\n            }\n\n            if (inviteId) {\n                loading = true;\n            } else if (!this.props.loggedIn) {\n                usedBefore = props.usedBefore;\n            } else if (!inviteId && !this.props.enableOpenServer && !this.props.noAccounts) {\n                noOpenServerError = true;\n                serverError = (\n                    <FormattedMessage\n                        id='signup_user_completed.no_open_server'\n                        defaultMessage='This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\n                    />\n                );\n            }\n        }\n\n        this.state = {\n            loading,\n            serverError,\n            noOpenServerError,\n            usedBefore,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.removeGlobalItem('team');\n        if (this.props.location.search) {\n            const params = new URLSearchParams(this.props.location.search);\n            const token = params.get('t') || '';\n            const inviteId = params.get('id') || '';\n\n            const userLoggedIn = this.props.loggedIn;\n\n            if ((inviteId || token) && userLoggedIn) {\n                this.addUserToTeamFromInvite(token, inviteId);\n            } else if (inviteId) {\n                this.getInviteInfo(inviteId);\n            } else if (userLoggedIn) {\n                GlobalActions.redirectUserToDefaultTeam();\n            }\n        }\n    }\n\n    addUserToTeamFromInvite = async (token, inviteId) => {\n        const {data: team, error} = await this.props.actions.addUserToTeamFromInvite(token, inviteId);\n        if (team) {\n            browserHistory.push('/' + team.name + `/channels/${Constants.DEFAULT_CHANNEL}`);\n        } else if (error) {\n            this.handleInvalidInvite(error);\n        }\n    }\n\n    getInviteInfo = async (inviteId) => {\n        const {data, error} = await this.props.actions.getTeamInviteInfo(inviteId);\n        if (data) {\n            this.setState({\n                serverError: '',\n                loading: false,\n            });\n        } else if (error) {\n            this.handleInvalidInvite(error);\n        }\n    }\n\n    handleInvalidInvite = (err) => {\n        let serverError;\n        if (err.server_error_id === 'store.sql_user.save.max_accounts.app_error') {\n            serverError = err.message;\n        } else {\n            serverError = (\n                <FormattedMessage\n                    id='signup_user_completed.invalid_invite'\n                    defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                />\n            );\n        }\n\n        this.setState({\n            noOpenServerError: true,\n            loading: false,\n            serverError,\n        });\n    }\n\n    renderSignupControls = () => {\n        const {formatMessage} = this.context.intl;\n        let signupControls = [];\n\n        if (this.props.enableSignUpWithEmail) {\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full email'\n                    key='email'\n                    to={'/signup_email' + window.location.search}\n                >\n                    <span>\n                        <span\n                            className='icon fa fa-envelope'\n                            title={formatMessage({id: 'signup.email.icon', defaultMessage: 'Email Icon'})}\n                        />\n                        <FormattedMessage\n                            id='signup.email'\n                            defaultMessage='Email and Password'\n                        />\n                    </span>\n                </Link>\n            );\n        }\n\n        if (this.props.enableSignUpWithGitLab) {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full gitlab'\n                    key='gitlab'\n                    href={Client4.getOAuthRoute() + '/gitlab/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.gitlab'\n                                defaultMessage='GitLab Single Sign-On'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (this.props.isLicensed && this.props.enableSignUpWithGoogle) {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full google'\n                    key='google'\n                    href={Client4.getOAuthRoute() + '/google/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.google'\n                                defaultMessage='Google Account'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (this.props.isLicensed && this.props.enableSignUpWithOffice365) {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full office365'\n                    key='office365'\n                    href={Client4.getOAuthRoute() + '/office365/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.office365'\n                                defaultMessage='Office 365'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (this.props.isLicensed && this.props.enableLDAP) {\n            const params = new URLSearchParams(this.props.location.search);\n            params.append('extra', 'create_ldap');\n            const query = '?' + params.toString();\n\n            let LDAPText = (\n                <FormattedMessage\n                    id='signup.ldap'\n                    defaultMessage='AD/LDAP Credentials'\n                />\n            );\n            if (this.props.ldapLoginFieldName) {\n                LDAPText = this.props.ldapLoginFieldName;\n            }\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full ldap'\n                    key='ldap'\n                    to={'/login' + query}\n                >\n                    <span>\n                        <span\n                            className='icon fa fa-folder-open fa--margin-top'\n                            title={formatMessage({id: 'signup.ldap.icon', defaultMessage: 'AD/LDAP Icon'})}\n                        />\n                        <span>\n                            {LDAPText}\n                        </span>\n                    </span>\n                </Link>\n            );\n        }\n\n        if (this.props.isLicensed && this.props.enableSAML) {\n            let query = '';\n            if (window.location.search) {\n                query = '&action=signup';\n            } else {\n                query = '?action=signup';\n            }\n\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full saml'\n                    key='saml'\n                    to={'/login/sso/saml' + window.location.search + query}\n                >\n                    <span>\n                        <span\n                            className='icon fa fa-lock fa--margin-top'\n                            title={formatMessage({id: 'signup.saml.icon', defaultMessage: 'SAML Icon'})}\n                        />\n                        <span>\n                            {this.props.samlLoginButtonText}\n                        </span>\n                    </span>\n                </Link>\n            );\n        }\n\n        if (signupControls.length === 0) {\n            const signupDisabledError = (\n                <FormattedMessage\n                    id='signup_user_completed.none'\n                    defaultMessage='No user creation method has been enabled. Please contact an administrator for access.'\n                />\n            );\n            signupControls = (\n                <FormError\n                    error={signupDisabledError}\n                    margin={true}\n                />\n            );\n        } else if (signupControls.length === 1) {\n            if (this.props.enableSignUpWithEmail) {\n                return browserHistory.push('/signup_email' + window.location.search);\n            } else if (this.props.isLicensed && this.props.enableLDAP) {\n                return browserHistory.push('/login' + window.location.search);\n            }\n        }\n\n        return signupControls;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        if (this.state.usedBefore) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='signup_user_completed.expired'\n                        defaultMessage=\"You've already completed the signup process for this invitation or this invitation has expired.\"\n                    />\n                </div>\n            );\n        }\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className={'form-group has-error'}>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        let signupControls;\n        if (this.state.noOpenServerError || this.state.usedBefore) {\n            signupControls = null;\n        } else {\n            signupControls = this.renderSignupControls();\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <img\n                            alt={'signup team logo'}\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <div className='signup__content'>\n                            <h1>{this.props.siteName}</h1>\n                            <h4 className='color--light'>\n                                <FormattedMessage\n                                    id='web.root.signup_info'\n                                />\n                            </h4>\n                            <div className='margin--extra'>\n                                <h5><strong>\n                                    <FormattedMessage\n                                        id='signup.title'\n                                        defaultMessage='Create an account with:'\n                                    />\n                                </strong></h5>\n                            </div>\n                            {signupControls}\n                            {serverError}\n                        </div>\n                        <span className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                to={'/login' + this.props.location.search}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getTeamInviteInfo} from 'mattermost-redux/actions/teams';\n\nimport {getGlobalItem} from 'selectors/storage';\nimport {removeGlobalItem} from 'actions/storage';\nimport {addUserToTeamFromInvite} from 'actions/team_actions';\n\nimport SignupController from './signup_controller.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    const isLicensed = license && license.IsLicensed === 'true';\n    const enableOpenServer = config.EnableOpenServer === 'true';\n    const noAccounts = config.NoAccounts === 'true';\n    const enableSignUpWithEmail = config.EnableSignUpWithEmail === 'true';\n    const enableSignUpWithGitLab = config.EnableSignUpWithGitLab === 'true';\n    const enableSignUpWithGoogle = config.EnableSignUpWithGoogle === 'true';\n    const enableSignUpWithOffice365 = config.EnableSignUpWithOffice365 === 'true';\n    const enableLDAP = config.EnableLdap === 'true';\n    const enableSAML = config.EnableSaml === 'true';\n    const samlLoginButtonText = config.SamlLoginButtonText;\n    const ldapLoginFieldName = config.LdapLoginFieldName;\n    const siteName = config.SiteName;\n\n    let usedBefore;\n    if (ownProps.location.search) {\n        const params = new URLSearchParams(ownProps.location.search);\n        let token = params.get('t');\n        if (token == null) {\n            token = '';\n        }\n        usedBefore = getGlobalItem(state, token, null);\n    }\n\n    return {\n        loggedIn: Boolean(getCurrentUserId(state)),\n        isLicensed,\n        enableOpenServer,\n        noAccounts,\n        enableSignUpWithEmail,\n        enableSignUpWithGitLab,\n        enableSignUpWithGoogle,\n        enableSignUpWithOffice365,\n        enableLDAP,\n        enableSAML,\n        samlLoginButtonText,\n        ldapLoginFieldName,\n        siteName,\n        usedBefore,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            removeGlobalItem,\n            getTeamInviteInfo,\n            addUserToTeamFromInvite,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupController);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/a03442cd2c7f4902febc7202b961fad9.png\";"],"sourceRoot":""}