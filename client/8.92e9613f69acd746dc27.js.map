{"version":3,"sources":["webpack:///./node_modules/mattermost-redux/selectors/entities/bots.js","webpack:///./node_modules/mattermost-redux/actions/bots.js","webpack:///./images/bot_default_icon.png","webpack:///./images/incoming_webhook.jpg","webpack:///./images/oauth_icon.png","webpack:///./images/outgoing_webhook.jpg","webpack:///./images/slash_command_icon.jpg","webpack:///./components/widgets/icons/fa_search_icon.jsx","webpack:///./components/backstage/components/backstage_list.jsx","webpack:///./components/integrations/bots/bot.jsx","webpack:///./components/integrations/bots/bots.jsx","webpack:///./components/integrations/bots/index.js","webpack:///./components/backstage/components/backstage_header.jsx","webpack:///./components/integrations/bots/add_bot/add_bot.jsx","webpack:///./components/integrations/bots/add_bot/index.js","webpack:///./components/integrations/integration_option.jsx","webpack:///./components/integrations/index.js","webpack:///./components/integrations/integrations.jsx","webpack:///./components/permissions_gates/any_team_permission_gate/any_team_permission_gate.jsx","webpack:///./components/permissions_gates/any_team_permission_gate/index.js","webpack:///./components/delete_modal_trigger.jsx","webpack:///./components/emoji/delete_emoji_modal.jsx","webpack:///./components/emoji/emoji_list_item/emoji_list_item.jsx","webpack:///./components/emoji/emoji_list_item/index.js","webpack:///./components/emoji/emoji_list/emoji_list.jsx","webpack:///./components/emoji/emoji_list/index.js","webpack:///./components/emoji/emoji_page.jsx","webpack:///./components/emoji/index.js","webpack:///./components/emoji/add_emoji/add_emoji.jsx","webpack:///./components/emoji/add_emoji/index.js","webpack:///./actions/integration_actions.jsx","webpack:///./components/copy_text.jsx","webpack:///./components/integrations/delete_integration.jsx","webpack:///./components/integrations/installed_incoming_webhook.jsx","webpack:///./components/integrations/installed_incoming_webhooks/installed_incoming_webhooks.jsx","webpack:///./components/integrations/installed_incoming_webhooks/index.js","webpack:///./components/channel_select/index.js","webpack:///./components/channel_select/channel_select.jsx","webpack:///./components/integrations/abstract_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/add_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/index.js","webpack:///./components/integrations/edit_incoming_webhook/edit_incoming_webhook.jsx","webpack:///./components/integrations/edit_incoming_webhook/index.js","webpack:///./components/integrations/installed_outgoing_webhook.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/installed_outgoing_webhooks.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/index.js","webpack:///./components/integrations/abstract_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/add_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/index.js","webpack:///./components/integrations/edit_outgoing_webhook/edit_outgoing_webhook.jsx","webpack:///./components/integrations/edit_outgoing_webhook/index.js","webpack:///./components/integrations/installed_oauth_app/installed_oauth_app.jsx","webpack:///./components/integrations/installed_oauth_app/index.js","webpack:///./components/integrations/installed_oauth_apps/installed_oauth_apps.jsx","webpack:///./components/integrations/installed_oauth_apps/index.js","webpack:///./components/integrations/abstract_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/add_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/index.js","webpack:///./components/integrations/edit_oauth_app/edit_oauth_app.jsx","webpack:///./components/integrations/edit_oauth_app/index.js","webpack:///./components/integrations/installed_command.jsx","webpack:///./components/integrations/installed_commands/installed_commands.jsx","webpack:///./components/integrations/installed_commands/index.js","webpack:///./components/integrations/abstract_command.jsx","webpack:///./components/integrations/add_command/add_command.jsx","webpack:///./components/integrations/add_command/index.js","webpack:///./components/integrations/edit_command/edit_command.jsx","webpack:///./components/integrations/edit_command/index.js","webpack:///./components/integrations/confirm_integration/index.js","webpack:///./components/integrations/confirm_integration/confirm_integration.jsx","webpack:///./components/integrations/commands_container/commands_container.jsx","webpack:///./components/integrations/commands_container/index.js","webpack:///./components/backstage/components/backstage_category.jsx","webpack:///./components/backstage/components/backstage_section.jsx","webpack:///./components/backstage/components/backstage_sidebar.jsx","webpack:///./components/backstage/components/backstage_navbar.jsx","webpack:///./components/backstage/backstage_controller.jsx","webpack:///./components/backstage/index.js","webpack:///./components/widgets/icons/fa_next_icon.jsx","webpack:///./components/widgets/icons/fa_previous_icon.jsx","webpack:///./node_modules/mattermost-redux/selectors/entities/integrations.js"],"names":["Object","defineProperty","exports","value","getBotAccounts","state","entities","bots","accounts","createBot","bot","_helpers","bindClientFunc","clientFunc","_client","Client4","onSuccess","_action_types","BotTypes","RECEIVED_BOT_ACCOUNT","params","patchBot","botUserId","botPatch","loadBot","getBot","loadBots","page","perPage","BOTS_PER_PAGE_DEFAULT","getBotsIncludeDeleted","RECEIVED_BOT_ACCOUNTS","disableBot","enableBot","assignBot","newOwnerId","__webpack_require__","module","p","SearchIcon","React","PureComponent","render","react_default","a","createElement","index_es","id","defaultMessage","title","className","BackstageList","Component","constructor","props","super","_defineProperty","this","e","setState","filter","target","toLowerCase","children","loading","loading_screen","hasChildren","Children","map","child","cloneElement","length","emptyTextSearch","values","searchTerm","emptyText","addLink","addText","react_router_dom","to","type","addButtonId","header","fa_search_icon_SearchIcon","placeholder","searchPlaceholder","onChange","updateFilter","style","search","helpText","PropTypes","oneOfType","node","func","isRequired","string","bool","Utils","flexGrow","flexShrink","matchesFilter","owner","username","description","displayName","display_name","ownerUsername","indexOf","Bot","bot_defineProperty","actions","user_id","enableUserAccessToken","disableUserAccessToken","confirmingId","revokeUserAccessToken","closeConfirm","creatingTokenState","token","assign","async","preventDefault","error","data","createUserAccessToken","message","tokenList","options","accessTokens","forEach","activeLink","disabledText","disableClass","is_active","name","href","onClick","push","key","confirmRevokeToken","openCreateToken","concat","team","delete_at","onSubmit","handleCreateToken","autoFocus","maxLength","handleUpdateDescription","save_button","btnClass","savingMessage","saving","closeCreateToken","fa_warning_icon","additionalClassName","imageURL","alt","src","markdown","confirm_modal","confirmButtonText","show","onConfirm","revokeTokenConfirmed","onCancel","object","shape","Bots","bots_defineProperty","bot_Bot","owners","sort","b","localeCompare","match","enabledBots","botToJSX","disabledBots","EnabledSection","DisabledSection","hasDisabled","componentDidMount","Constants","Integrations","START_PAGE_NUM","PAGE_SIZE","then","result","promises","getUser","owner_id","getUserAccessTokensForUser","Promise","all","botsToDisplay","Fragment","backstage_list_BackstageList","createBots","formatted_markdown_message","botAccounts","rel","connect","getConfig","EnableBotAccountCreation","reduce","UserSelectors","admin","userAccessTokensByUser","dispatch","bindActionCreators","BackstageHeader","propTypes","formatMessage","context","intl","index","intlShape","roleOptionSystemAdmin","roleOptionMember","AddBot","add_bot_defineProperty","role","postAll","checked","postChannels","files","pictureFile","previewBlob","URL","createObjectURL","reader","FileReader","onload","e2","orientation","FileUtils","orientationStyles","image","readAsArrayBuffer","BotDefaultIcon","roles","General","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","rolesResult","updateUserRoles","adding","AcceptedProfileImageTypes","includes","size","maxFileSize","uploadProfileImage","setDefaultProfileImage","updateRoles","browserHistory","usernameError","tokenResult","UserUtils","subtitle","buttonText","buttonActiveText","removeImageIcon","OverlayTrigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","Tooltip","setDefault","imageStyles","backstage_header_BackstageHeader","handleSubmit","htmlFor","updateUsername","accept","updatePicture","updateDisplayName","updateDescription","disabled","editingUserHasManageSystem","updateRole","updatePostAll","updatePostChannels","form_error","errors","spinner_button","spinning","spinningText","number","ownProps","config","botId","URLSearchParams","location","get","user","getUsers","parseInt","MaxFileSize","haveISystemPermission","permission","Permissions","MANAGE_SYSTEM","IntegrationOption","link","siteName","SiteName","enableIncomingWebhooks","EnableIncomingWebhooks","enableOutgoingWebhooks","EnableOutgoingWebhooks","enableCommands","EnableCommands","enableOAuthServiceProvider","EnableOAuthServiceProvider","[object Object]","args","integrations_defineProperty","currentSiteName","document","updateTitle","team_permission_gate","teamId","permissions","MANAGE_INCOMING_WEBHOOKS","integration_option_IntegrationOption","IncomingWebhookIcon","MANAGE_OUTGOING_WEBHOOKS","OutgoingWebhookIcon","MANAGE_SLASH_COMMANDS","SlashCommandIcon","system_permission_gate","MANAGE_OAUTH","OAuthIcon","BotAccountsIcon","appDirectory","AnyTeamPermissionGate","hasPermission","invert","arrayOf","teams","getMyTeams","haveITeamPermission","DeleteModalTrigger","delete_modal_trigger_defineProperty","showDeleteModal","onDelete","KeyCodes","ENTER","handleConfirm","TypeError","handleOpenModal","triggerTitle","modalTitle","modalMessage","modalConfirmButton","handleCancel","onKeyDown","handleKeyDown","DeleteEmoji","EmojiListItem","emoji_list_item_defineProperty","emoji","deleteCustomEmoji","creatorUsername","creatorDisplayName","deleteButton","creator_id","currentUserId","any_team_permission_gate","DELETE_EMOJIS","delete_emoji_modal_DeleteEmoji","handleDelete","DELETE_OTHERS_EMOJIS","backgroundImage","getCustomEmojiImageUrl","currentTeam","emojis","customEmoji","emojiId","creator","getDisplayNameByUser","getCurrentUserId","getCurrentTeam","EMOJI_PER_PAGE","EMOJI_SEARCH_DELAY_MILLISECONDS","EmojiList","emoji_list_defineProperty","next","nextLoading","getCustomEmojis","Emoji","SORT_BY_NAME","missingPages","scrollToTop","term","clearTimeout","searchTimeout","setTimeout","trim","searchEmojis","searchCustomEmojis","em","newSearchEmojis","splice","nextButton","previousButton","colSpan","emojiIds","emoji_list_item","deleteFromSearch","pageStart","pageEnd","slice","buttonContents","fa_next_icon","extraClasses","nextPage","previousPage","fa_previous_icon","localized_input","t","onSearchChange","getCustomEmojiIdsSortedByName","EmojiPage","emoji_page_defineProperty","teamDisplayName","loadRolesIfNeeded","UNSAFE_componentWillReceiveProps","nextProps","CREATE_EMOJIS","teamName","emoji_list","general","AddEmoji","add_emoji_defineProperty","emojiMap","startsWith","endsWith","substring","test","hasSystemEmoji","createCustomEmoji","imageUrl","readAsDataURL","filename","preview","updateName","multiple","updateImage","localizeMessage","router","getEmojiMap","DEFAULT_PAGE_SIZE","loadIncomingHooksAndProfilesForTeam","IntegrationActions","hooks","getState","profilesToLoad","i","hook","list","keys","getProfilesByIds","loadProfilesForIncomingHooks","loadOutgoingHooksAndProfilesForTeam","loadProfilesForOutgoingHooks","loadCommandsAndProfilesForTeam","commands","command","loadProfilesForCommands","loadOAuthAppsAndProfiles","apps","app","loadProfilesForOAuthApps","CopyText","copy_text_defineProperty","copyToClipboard","defaultProps","idMessage","queryCommandSupported","tooltip","copyText","DeleteIntegration","messageId","incomingWebhook","channel","channel_id","InstalledIncomingWebhook","installed_incoming_webhook_defineProperty","canChange","delete_integration_DeleteIntegration","incomingWebhookId","getSiteURL","url","copy_text_CopyText","createAt","create_at","InstalledIncomingWebhooks","installed_incoming_webhooks_defineProperty","removeIncomingHook","displayNameA","channelA","channels","displayNameB","incomingWebhooks","incomingWebhookCompare","canManageOthersWebhooks","installed_incoming_webhook_InstalledIncomingWebhook","deleteIncomingWebhook","users","buildYourOwn","array","getCurrentTeamId","MANAGE_OTHERS_INCOMING_WEBHOOKS","incomingHooks","getIncomingHooks","team_id","getAllChannels","Actions","getMyChannelsSorted","createSelector","getMyChannels","getCurrentUserLocale","locale","sortChannelsByTypeAndDisplayName","bind","selectOpen","selectPrivate","selectDm","channelName","OPEN_CHANNEL","PRIVATE_CHANNEL","DM_CHANNEL","AbstractIncomingWebhook","abstract_incoming_webhook_defineProperty","channelId","channelLocked","channel_locked","iconURL","icon_url","serverError","clientError","action","getStateFromHook","initialHook","headerToRender","footerToRender","footer","channel_select","updateChannelId","updateChannelLocked","enablePostUsernameOverride","enablePostIconOverride","updateIconURL","HEADER","FOOTER","LOADING","AddIncomingWebhook","add_incoming_webhook_defineProperty","createIncomingHook","createIncomingHookRequest","abstract_incoming_webhook_AbstractIncomingWebhook","addIncomingHook","EnablePostUsernameOverride","EnablePostIconOverride","requests","integrations","EditIncomingWebhook","edit_incoming_webhook_defineProperty","newHook","submitHook","updateIncomingHook","updateIncomingHookRequest","showConfirmModal","getIncomingHook","hookId","editIncomingHook","outgoingWebhook","trigger_words","triggerWords","triggerWord","InstalledOutgoingWebhook","installed_outgoing_webhook_defineProperty","onRegenToken","makeDisplayName","join","urls","callback_urls","triggerWhen","trigger_when","handleRegenToken","contentType","content_type","InstalledOutgoingWebhooks","installed_outgoing_webhooks_defineProperty","regenOutgoingHookToken","removeOutgoingHook","channelB","outgoingWebhooks","outgoingWebhookCompare","installed_outgoing_webhook_InstalledOutgoingWebhook","regenOutgoingWebhookToken","MANAGE_OTHERS_OUTGOING_WEBHOOKS","outgoingHooks","getOutgoingHooks","AbstractOutgoingWebhook","abstract_outgoing_webhook_defineProperty","callbackUrls","split","callbackUrl","renderExtra","updateContentType","rows","updateTriggerWords","updateTriggerWhen","updateCallbackUrls","AddOutgoingWebhook","add_outgoing_webhook_defineProperty","createOutgoingHook","createOutgoingHookRequest","abstract_outgoing_webhook_AbstractOutgoingWebhook","addOutgoingHook","EditOutgoingWebhook","edit_outgoing_webhook_defineProperty","triggerWordsSame","every","v","callbackUrlsSame","handleConfirmModal","updateOutgoingHook","updateOutgoingHookRequest","confirmButton","confirmTitle","confirmMessage","confirmModalDismissed","getOutgoingHook","editOutgoingHook","FAKE_SECRET","oauthApp","InstalledOAuthApp","installed_oauth_app_defineProperty","clientSecret","client_secret","onRegenerateSecret","regenOAuthAppSecretRequest","handleShowClientSecret","creatorName","isTrusted","showHide","is_trusted","handleHideClientSecret","regen","handleRegenerate","icon","clientId","InstalledOAuthApps","installed_oauth_apps_defineProperty","deleteOAuthApp","oauthApps","oauthAppCompare","installed_oauth_app","regenOAuthAppSecret","nameA","nameB","canManageOauth","oauthApplications","getOAuthApps","updateOAuthApp","AbstractOAuthApp","abstract_oauth_app_defineProperty","homepage","has_icon","Boolean","refs","Image","imageLoaded","getStateFromApp","initialApp","trusted","updateTrusted","updateHomepage","ref","updateIconUrl","AddOAuthApp","add_oauth_app_defineProperty","addOAuthApp","addOAuthAppRequest","abstract_oauth_app_AbstractOAuthApp","EditOAuthApp","edit_oauth_app_defineProperty","newApp","submitOAuthApp","editOAuthApp","getOAuthApp","oauthAppId","trigger","InstalledCommand","installed_command_defineProperty","auto_complete","auto_complete_hint","commandToken","InstalledCommands","installed_commands_defineProperty","regenCommandToken","deleteCommand","commandCompare","canManageOthersSlashCommands","installed_command_InstalledCommand","MANAGE_OTHERS_SLASH_COMMANDS","REQUEST_POST","REQUEST_GET","AbstractCommand","abstract_command_defineProperty","method","iconUrl","autocomplete","autocompleteHint","autocompleteDescription","auto_complete_desc","substr","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","min","max","getStateFromCommand","initialCommand","updateAutocompleteHint","updateAutocompleteDescription","updateTrigger","updateUrl","updateMethod","updateAutocomplete","AddCommand","add_command_defineProperty","addCommand","abstract_command_AbstractCommand","EditCommand","edit_command_defineProperty","newCommand","originalCommand","submitCommand","editCommand","getCustomTeamCommands","commandId","getCommands","confirm_integration_defineProperty","window","addEventListener","handleKeyPress","componentWillUnmount","removeEventListener","headerText","tokenText","incomingHook","outgoingHook","COMMAND","INCOMING_WEBHOOK","incomingHookToken","OUTGOING_WEBHOOK","outgoingHookToken","OAUTH_APP","oauthAppToken","oauthAppSecret","secret","BOT","replace","ErrorPageTypes","PAGE_NOT_FOUND","botToken","botname","CommandRoute","_ref","component","extraProps","rest","_objectWithoutProperties","react_router","CommandsContainer","exact","path","ConfirmIntegration","BackstageCategory","parentLink","element","contextTypes","activeClassName","BackstageSection","subsection","getLink","clonedChildren","BackstageSidebar","enableCustomEmoji","canCreateOrDeleteCustomEmoji","renderCustomEmoji","backstage_category_BackstageCategory","renderIntegrations","backstage_section_BackstageSection","BackstageNavbar","fa_back_icon","BackstageRoute","backstage_controller_objectWithoutProperties","BackstageController","backstage_controller_defineProperty","listRef","scrollTop","announcement_bar","system_notice","backstage_navbar_BackstageNavbar","pluggable","pluggableName","setListRef","backstage_sidebar_BackstageSidebar","AddIncomingWehook","InstalledOauthApps","AddOauthApp","EditOauthApp","withRouter","getCurrentUser","EnableCustomEmoji","NextIcon","react__WEBPACK_IMPORTED_MODULE_1___default","react_intl__WEBPACK_IMPORTED_MODULE_2__","PreviousIcon","react__WEBPACK_IMPORTED_MODULE_0___default","react_intl__WEBPACK_IMPORTED_MODULE_1__","getSystemCommands","getAutocompleteCommandsList","getAllCommands","getOutgoingHooksInCurrentTeam","_reselect","_teams","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","obj","configurable","writable","systemCommands","o","arguments","source","getOwnPropertyDescriptors","defineProperties","_objectSpread","currentTeamId"],"mappings":"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","file":"8.92e9613f69acd746dc27.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBotAccounts = getBotAccounts;\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction getBotAccounts(state) {\n  return state.entities.bots.accounts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBot = createBot;\nexports.patchBot = patchBot;\nexports.loadBot = loadBot;\nexports.loadBots = loadBots;\nexports.disableBot = disableBot;\nexports.enableBot = enableBot;\nexports.assignBot = assignBot;\n\nvar _client = require(\"../client\");\n\nvar _action_types = require(\"../action_types\");\n\nvar _helpers = require(\"./helpers\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nconst BOTS_PER_PAGE_DEFAULT = 20;\n\nfunction createBot(bot) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [bot]\n  });\n}\n\nfunction patchBot(botUserId, botPatch) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.patchBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, botPatch]\n  });\n}\n\nfunction loadBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction loadBots(page = 0, perPage = BOTS_PER_PAGE_DEFAULT) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBotsIncludeDeleted,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNTS,\n    params: [page, perPage]\n  });\n}\n\nfunction disableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.disableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction enableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.enableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction assignBot(botUserId, newOwnerId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.assignBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, newOwnerId]\n  });\n}","module.exports = __webpack_public_path__ + \"files/28bca753280d57721ab26bcbe0ec3ca5.png\";","module.exports = __webpack_public_path__ + \"files/fd69f7891f867c2aa14011da92b728ac.jpg\";","module.exports = __webpack_public_path__ + \"files/e18dcc703feb7046e3b49f91eeebb0e2.png\";","module.exports = __webpack_public_path__ + \"files/2aa264fb1956b8be41f2047d428a1a1e.jpg\";","module.exports = __webpack_public_path__ + \"files/d184fcdb23c1e24bfd7132950ceb4f68.jpg\";","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SearchIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.search'\n                defaultMessage='Search Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-search'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport SearchIcon from 'components/widgets/icons/fa_search_icon';\n\nexport default class BackstageList extends React.Component {\n    static propTypes = {\n        children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n        header: PropTypes.node.isRequired,\n        addLink: PropTypes.string,\n        addText: PropTypes.node,\n        addButtonId: PropTypes.string,\n        emptyText: PropTypes.node,\n        emptyTextSearch: PropTypes.node,\n        helpText: PropTypes.node,\n        loading: PropTypes.bool.isRequired,\n        searchPlaceholder: PropTypes.string,\n    }\n\n    static defaultProps = {\n        searchPlaceholder: Utils.localizeMessage('backstage_list.search', 'Search'),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: '',\n        };\n    }\n\n    updateFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n        });\n    }\n\n    render() {\n        const filter = this.state.filter.toLowerCase();\n\n        let children;\n        if (this.props.loading) {\n            children = <LoadingScreen/>;\n        } else {\n            children = this.props.children;\n            let hasChildren = true;\n            if (typeof children === 'function') {\n                [children, hasChildren] = children(filter);\n            }\n            children = React.Children.map(children, (child) => {\n                return React.cloneElement(child, {filter});\n            });\n            if (children.length === 0 || !hasChildren) {\n                if (!filter) {\n                    if (this.props.emptyText) {\n                        children = (\n                            <span className='backstage-list__item backstage-list__empty'>\n                                {this.props.emptyText}\n                            </span>\n                        );\n                    }\n                } else if (this.props.emptyTextSearch) {\n                    children = (\n                        <span\n                            className='backstage-list__item backstage-list__empty'\n                            id='emptySearchResultsMessage'\n                        >\n                            {React.cloneElement(this.props.emptyTextSearch, {values: {searchTerm: filter}})}\n                        </span>\n                    );\n                }\n            }\n        }\n\n        let addLink = null;\n\n        if (this.props.addLink && this.props.addText) {\n            addLink = (\n                <Link\n                    className='add-link'\n                    to={this.props.addLink}\n                >\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        id={this.props.addButtonId}\n                    >\n                        <span>\n                            {this.props.addText}\n                        </span>\n                    </button>\n                </Link>\n            );\n        }\n\n        return (\n            <div className='backstage-content'>\n                <div className='backstage-header'>\n                    <h1>\n                        {this.props.header}\n                    </h1>\n                    {addLink}\n                </div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <SearchIcon/>\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={this.props.searchPlaceholder}\n                            value={this.state.filter}\n                            onChange={this.updateFilter}\n                            style={style.search}\n                            id='searchInput'\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    {this.props.helpText}\n                </span>\n                <div className='backstage-list'>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport Markdown from 'components/markdown';\nimport SaveButton from 'components/save_button.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\nimport * as Utils from 'utils/utils.jsx';\n\nexport function matchesFilter(bot, filter, owner) {\n    if (!filter) {\n        return true;\n    }\n    const username = bot.username || '';\n    const description = bot.description || '';\n    const displayName = bot.display_name || '';\n\n    let ownerUsername = 'plugin';\n    if (owner && owner.username) {\n        ownerUsername = owner.username;\n    }\n    return !(username.toLowerCase().indexOf(filter) === -1 &&\n        displayName.toLowerCase().indexOf(filter) === -1 &&\n        description.toLowerCase().indexOf(filter) === -1 &&\n        ownerUsername.toLowerCase().indexOf(filter) === -1);\n}\n\nexport default class Bot extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Bot that we are displaying\n        */\n        bot: PropTypes.object.isRequired,\n\n        /**\n        * Owner of the bot we are displaying\n        */\n        owner: PropTypes.object,\n\n        /**\n        * The access tokens of the bot user\n        */\n        accessTokens: PropTypes.object.isRequired,\n\n        /**\n        * String used for filtering bot items\n        */\n        filter: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Disable a bot\n            */\n            disableBot: PropTypes.func.isRequired,\n\n            /**\n            * Enable a bot\n            */\n            enableBot: PropTypes.func.isRequired,\n\n            /**\n            * Access token managment\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n            revokeUserAccessToken: PropTypes.func.isRequired,\n            enableUserAccessToken: PropTypes.func.isRequired,\n            disableUserAccessToken: PropTypes.func.isRequired,\n        }),\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            confirmingId: '',\n            creatingTokenState: 'CLOSED',\n            token: {},\n            error: '',\n        };\n    }\n\n    enableBot = () => {\n        this.props.actions.enableBot(this.props.bot.user_id);\n    }\n\n    disableBot = () => {\n        this.props.actions.disableBot(this.props.bot.user_id);\n    }\n\n    enableUserAccessToken = (id) => {\n        this.props.actions.enableUserAccessToken(id);\n    }\n\n    disableUserAccessToken = (id) => {\n        this.props.actions.disableUserAccessToken(id);\n    }\n\n    confirmRevokeToken = (id) => {\n        this.setState({confirmingId: id});\n    }\n\n    revokeTokenConfirmed = () => {\n        this.props.actions.revokeUserAccessToken(this.state.confirmingId);\n        this.closeConfirm();\n    }\n\n    closeConfirm = () => {\n        this.setState({confirmingId: ''});\n    }\n\n    openCreateToken = () => {\n        this.setState({\n            creatingTokenState: 'OPEN',\n            token: {\n                description: '',\n            },\n        });\n    }\n\n    closeCreateToken = () => {\n        this.setState({\n            creatingTokenState: 'CLOSED',\n            token: {\n                description: '',\n            },\n        });\n    }\n\n    handleUpdateDescription = (e) => {\n        this.setState({\n            token: Object.assign({}, this.state.token, {description: e.target.value}),\n        });\n    }\n\n    handleCreateToken = async (e) => {\n        e.preventDefault();\n\n        if (this.state.token.description === '') {\n            this.setState({error: (\n                <FormattedMessage\n                    id='bot.token.error.description'\n                    defaultMessage='Please enter a description.'\n                />\n            )});\n            return;\n        }\n\n        const {data, error} = await this.props.actions.createUserAccessToken(this.props.bot.user_id, this.state.token.description);\n        if (data) {\n            this.setState({creatingTokenState: 'CREATED', token: data});\n        } else if (error) {\n            this.setState({error: error.message});\n        }\n    }\n\n    render() {\n        const username = this.props.bot.username || '';\n        const description = this.props.bot.description || '';\n        const displayName = this.props.bot.display_name || '';\n\n        let ownerUsername = 'plugin';\n        if (this.props.owner && this.props.owner.username) {\n            ownerUsername = this.props.owner.username;\n        }\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        if (!matchesFilter(this.props.bot, filter, this.props.owner)) {\n            return null;\n        }\n\n        const tokenList = [];\n        Object.values(this.props.accessTokens).forEach((token) => {\n            let activeLink;\n            let disableClass = '';\n            let disabledText;\n\n            if (token.is_active) {\n                activeLink = (\n                    <a\n                        name={token.id + '_deactivate'}\n                        href='#'\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.disableUserAccessToken(token.id);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='user.settings.tokens.deactivate'\n                            defaultMessage='Disable'\n                        />\n                    </a>);\n            } else {\n                disableClass = 'light';\n                disabledText = (\n                    <span className='margin-right light'>\n                        <FormattedMessage\n                            id='user.settings.tokens.deactivatedWarning'\n                            defaultMessage='(Disabled)'\n                        />\n                    </span>\n                );\n                activeLink = (\n                    <a\n                        name={token.id + '_activate'}\n                        href='#'\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.enableUserAccessToken(token.id);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='user.settings.tokens.activate'\n                            defaultMessage='Enable'\n                        />\n                    </a>\n                );\n            }\n\n            tokenList.push(\n                <div\n                    key={token.id}\n                    className='bot-list__item'\n                >\n                    <div className='item-details__row d-flex justify-content-between'>\n                        <div className={disableClass}>\n                            <div className='whitespace--nowrap overflow--ellipsis'>\n                                <b>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.tokenDesc'\n                                        defaultMessage='Token Description: '\n                                    />\n                                </b>\n                                {token.description}\n                            </div>\n                            <div className='setting-box__token-id whitespace--nowrap overflow--ellipsis'>\n                                <b>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.tokenId'\n                                        defaultMessage='Token ID: '\n                                    />\n                                </b>\n                                {token.id}\n                            </div>\n                        </div>\n                        <div>\n                            {disabledText}\n                            {activeLink}\n                            {' - '}\n                            <a\n                                name={token.id + '_delete'}\n                                href='#'\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    this.confirmRevokeToken(token.id);\n                                }}\n                            >\n                                <FormattedMessage\n                                    id='user.settings.tokens.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n\n        let options;\n        if (ownerUsername !== 'plugin') {\n            options = (\n                <div className='item-actions'>\n                    <button\n                        id='createToken'\n                        className='style--none color--link'\n                        onClick={this.openCreateToken}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.create_token'\n                            defaultMessage='Create New Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/bots/edit?id=${this.props.bot.user_id}`}>\n                        <FormattedMessage\n                            id='bots.manage.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <button\n                        className='style--none color--link'\n                        onClick={this.disableBot}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.disable'\n                            defaultMessage='Disable'\n                        />\n                    </button>\n                </div>\n            );\n        }\n        if (this.props.bot.delete_at !== 0) {\n            options = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.enableBot}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.enable'\n                            defaultMessage='Enable'\n                        />\n                    </button>\n                </div>\n            );\n        }\n\n        if (this.state.creatingTokenState === 'OPEN') {\n            tokenList.push(\n                <div\n                    key={'create'}\n                    className='bot-list__item'\n                >\n                    <div key={'create'}>\n                        <form\n                            className='form-horizontal'\n                            onSubmit={this.handleCreateToken}\n                        >\n                            <div className='row'>\n                                <label className='col-sm-auto control-label'>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.name'\n                                        defaultMessage='Token Description: '\n                                    />\n                                </label>\n                                <div className='col-sm-4'>\n                                    <input\n                                        autoFocus={true}\n                                        className='form-control form-sm'\n                                        type='text'\n                                        maxLength={64}\n                                        value={this.state.token.description}\n                                        onChange={this.handleUpdateDescription}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className='padding-top padding-bottom'>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.nameHelp'\n                                        defaultMessage='Enter a description for your token to remember what it does.'\n                                    />\n                                </div>\n                                <label\n                                    id='clientError'\n                                    className='has-error is-empty'\n                                >\n                                    {this.state.error}\n                                </label>\n                                <div className='margin-top'>\n                                    <SaveButton\n                                        btnClass='btn-sm btn-primary'\n                                        savingMessage={\n                                            <FormattedMessage\n                                                id='user.settings.tokens.save'\n                                                defaultMessage='Save'\n                                            />\n                                        }\n                                        saving={false}\n                                    />\n                                    <button\n                                        className='btn btn-sm btn-link'\n                                        onClick={this.closeCreateToken}\n                                    >\n                                        <FormattedMessage\n                                            id='user.settings.tokens.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            );\n        } else if (this.state.creatingTokenState === 'CREATED') {\n            tokenList.push(\n                <div\n                    key={'created'}\n                    className='bot-list__item alert alert-warning'\n                >\n                    <div className='margin-bottom'>\n                        <WarningIcon additionalClassName='margin-right'/>\n                        <FormattedMessage\n                            id='user.settings.tokens.copy'\n                            defaultMessage=\"Please copy the access token below. You won't be able to see it again!\"\n                        />\n                    </div>\n                    <div className='whitespace--nowrap overflow--ellipsis'>\n                        <FormattedMessage\n                            id='user.settings.tokens.name'\n                            defaultMessage='Token Description: '\n                        />\n                        {this.state.token.description}\n                    </div>\n                    <div className='whitespace--nowrap overflow--ellipsis'>\n                        <FormattedMessage\n                            id='user.settings.tokens.id'\n                            defaultMessage='Token ID: '\n                        />\n                        {this.state.token.id}\n                    </div>\n                    <strong className='word-break--all'>\n                        <FormattedMessage\n                            id='user.settings.tokens.token'\n                            defaultMessage='Access Token: '\n                        />\n                        {this.state.token.token}\n                    </strong>\n                    <div className='margin-top'>\n                        <button\n                            className='btn btn-sm btn-primary'\n                            onClick={this.closeCreateToken}\n                        >\n                            <FormattedMessage\n                                id='bot.create_token.close'\n                                defaultMessage='Close'\n                            />\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n\n        const imageURL = Utils.imageURLForUser(this.props.bot.user_id);\n\n        return (\n            <div className='backstage-list__item'>\n                <div className={'bot-list-img-container'}>\n                    <img\n                        className={'bot-list-img'}\n                        alt={'bot image'}\n                        src={imageURL}\n                    />\n                </div>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName + ' (@' + username + ')'}\n                        </strong>\n                        {options}\n                    </div>\n                    <div className='bot-details__description'>\n                        <Markdown message={description}/>\n                    </div>\n                    <div className='light small'>\n                        <FormattedMessage\n                            id='bots.managed_by'\n                            defaultMessage='Managed by '\n                        />\n                        {ownerUsername}\n                    </div>\n                    <div className='bot-list is-empty'>\n                        {tokenList}\n                    </div>\n                </div>\n                <ConfirmModal\n                    title={\n                        <FormattedMessage\n                            id='bots.token.delete'\n                            defaultMessage='Delete Token'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='bots.token.confirm_text'\n                            defaultMessage='Are you sure you want to delete the token?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='bots.token.confirm'\n                            defaultMessage='Delete'\n                        />\n                    }\n                    show={this.state.confirmingId !== ''}\n                    onConfirm={this.revokeTokenConfirmed}\n                    onCancel={this.closeConfirm}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport Constants from 'utils/constants.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport Bot, {matchesFilter} from './bot.jsx';\n\nexport default class Bots extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Map from botUserId to bot.\n        */\n        bots: PropTypes.object.isRequired,\n\n        /**\n        *  Map from botUserId to accessTokens.\n        */\n        accessTokens: PropTypes.object.isRequired,\n\n        /**\n        *  Map from botUserId to owner.\n        */\n        owners: PropTypes.object.isRequired,\n\n        createBots: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Ensure we have bot accounts\n            */\n            loadBots: PropTypes.func.isRequired,\n\n            /**\n            * Load access tokens for bot accounts\n            */\n            getUserAccessTokensForUser: PropTypes.func.isRequired,\n\n            /**\n            * Access token managment\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n            revokeUserAccessToken: PropTypes.func.isRequired,\n            enableUserAccessToken: PropTypes.func.isRequired,\n            disableUserAccessToken: PropTypes.func.isRequired,\n\n            /**\n            * Load owner of bot account\n            */\n            getUser: PropTypes.func.isRequired,\n\n            /**\n            * Disable a bot\n            */\n            disableBot: PropTypes.func.isRequired,\n\n            /**\n            * Enable a bot\n            */\n            enableBot: PropTypes.func.isRequired,\n        }),\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.loadBots(\n            Constants.Integrations.START_PAGE_NUM,\n            Constants.Integrations.PAGE_SIZE\n        ).then(\n            (result) => {\n                if (result.data) {\n                    const promises = [];\n\n                    for (const bot of result.data) {\n                        // We don't need to wait for this and we need to accept failure in the case where bot.owner_id is a plugin id\n                        this.props.actions.getUser(bot.owner_id);\n\n                        // We want to wait for these.\n                        promises.push(this.props.actions.getUser(bot.user_id));\n                        promises.push(this.props.actions.getUserAccessTokensForUser(bot.user_id));\n                    }\n\n                    Promise.all(promises).then(() => {\n                        this.setState({loading: false});\n                    });\n                }\n            }\n        );\n    }\n\n    DisabledSection(props) {\n        if (!props.hasDisabled) {\n            return null;\n        }\n        const botsToDisplay = React.Children.map(props.disabledBots, (child) => {\n            return React.cloneElement(child, {filter: props.filter});\n        });\n        return (\n            <React.Fragment>\n                <div className='bot-disabled'>\n                    <FormattedMessage\n                        id='bots.disabled'\n                        defaultMessage='Disabled'\n                    />\n                </div>\n                <div className='bot-list__disabled'>\n                    {botsToDisplay}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    EnabledSection(props) {\n        const botsToDisplay = React.Children.map(props.enabledBots, (child) => {\n            return React.cloneElement(child, {filter: props.filter});\n        });\n        return (\n            <div>\n                {botsToDisplay}\n            </div>\n        );\n    }\n\n    botToJSX = (bot) => {\n        return (\n            <Bot\n                key={bot.user_id}\n                bot={bot}\n                owner={this.props.owners[bot.user_id]}\n                accessTokens={this.props.accessTokens[bot.user_id] || {}}\n                actions={this.props.actions}\n                team={this.props.team}\n            />\n        );\n    };\n\n    bots = (filter) => {\n        const bots = Object.values(this.props.bots).sort((a, b) => a.username.localeCompare(b.username));\n        const match = (bot) => matchesFilter(bot, filter, this.props.owners[bot.user_id]);\n        const enabledBots = bots.filter((bot) => bot.delete_at === 0).filter(match).map(this.botToJSX);\n        const disabledBots = bots.filter((bot) => bot.delete_at > 0).filter(match).map(this.botToJSX);\n        const sections = (\n            <div key='sections'>\n                <this.EnabledSection\n                    enabledBots={enabledBots}\n                />\n                <this.DisabledSection\n                    hasDisabled={disabledBots.length > 0}\n                    disabledBots={disabledBots}\n                />\n            </div>\n        );\n\n        return [sections, enabledBots.length > 0 || disabledBots.length > 0];\n    }\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='bots.manage.header'\n                        defaultMessage='Bot Accounts'\n                    />\n                }\n                addText={this.props.createBots &&\n                    <FormattedMessage\n                        id='bots.manage.add'\n                        defaultMessage='Add Bot Account'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/bots/add'}\n                addButtonId='addBotAccount'\n                emptyText={\n                    <FormattedMessage\n                        id='bots.manage.empty'\n                        defaultMessage='No bot accounts found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='bots.manage.emptySearch'\n                        defaultMessage='No bot accounts match **{searchTerm}**'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='bots.manage.help'\n                        defaultMessage='Use {botAccounts} to integrate with Vue through plugins or the API. Bot accounts are available to everyone on your server.'\n                        values={{\n                            botAccounts: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://mattermost.com/pl/default-bot-accounts'\n                                >\n                                    <FormattedMessage\n                                        id='bots.manage.bot_accounts'\n                                        defaultMessage='Bot Accounts'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('bots.manage.search', 'Search Bot Accounts')}\n                loading={this.state.loading}\n            >\n                {this.bots}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {loadBots, disableBot, enableBot} from 'mattermost-redux/actions/bots';\nimport {createUserAccessToken, revokeUserAccessToken, enableUserAccessToken, disableUserAccessToken, getUserAccessTokensForUser, getUser} from 'mattermost-redux/actions/users';\nimport * as UserSelectors from 'mattermost-redux/selectors/entities/users';\n\nimport Bots from './bots.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const createBots = config.EnableBotAccountCreation === 'true';\n    const bots = getBotAccounts(state);\n    const owners = Object.values(bots).\n        reduce((result, bot) => {\n            result[bot.user_id] = UserSelectors.getUser(state, bot.owner_id);\n            return result;\n        }, {});\n    return {\n        createBots,\n        bots,\n        accessTokens: state.entities.admin.userAccessTokensByUser,\n        owners,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadBots,\n            getUserAccessTokensForUser,\n            createUserAccessToken,\n            revokeUserAccessToken,\n            enableUserAccessToken,\n            disableUserAccessToken,\n            getUser,\n            disableBot,\n            enableBot,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bots);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {intlShape} from 'react-intl';\n\nexport default class BackstageHeader extends React.Component {\n    static get propTypes() {\n        return {\n            children: PropTypes.node,\n        };\n    }\n    static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    render() {\n        const children = [];\n        const {formatMessage} = this.context.intl;\n\n        React.Children.forEach(this.props.children, (child, index) => {\n            if (index !== 0) {\n                children.push(\n                    <span\n                        key={'divider' + index}\n                        className='backstage-header__divider'\n                    >\n                        <i\n                            className='fa fa-angle-right'\n                            title={formatMessage({id: 'generic_icons.breadcrumb', defaultMessage: 'Breadcrumb Icon'})}\n                        />\n                    </span>\n                );\n            }\n\n            children.push(child);\n        });\n\n        return (\n            <div className='backstage-header'>\n                <h1>\n                    {children}\n                </h1>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\nimport {General} from 'mattermost-redux/constants';\n\nimport BotDefaultIcon from 'images/bot_default_icon.png';\n\nimport {browserHistory} from 'utils/browser_history';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport FormError from 'components/form_error.jsx';\nimport {AcceptedProfileImageTypes, OVERLAY_TIME_DELAY} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport * as FileUtils from 'utils/file_utils.jsx';\n\nconst roleOptionSystemAdmin = 'System Admin';\nconst roleOptionMember = 'Member';\n\nexport default class AddBot extends React.Component {\n    static propTypes = {\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Bot to edit (if editing)\n        */\n        bot: PropTypes.object,\n\n        /**\n        *  Roles of the bot to edit (if editing)\n        */\n        roles: PropTypes.string,\n\n        /**\n        * Maximum upload file size (for bot account profile picture)\n        */\n        maxFileSize: PropTypes.number.isRequired,\n\n        /**\n         * Editing user has the MANAGE_SYSTEM permission\n        */\n        editingUserHasManageSystem: PropTypes.bool.isRequired,\n\n        /**\n        * Bot to edit\n        */\n        actions: PropTypes.shape({\n\n            /**\n            * Creates a new bot account.\n            */\n            createBot: PropTypes.func.isRequired,\n\n            /**\n            * Patches an existing bot account.\n            */\n            patchBot: PropTypes.func.isRequired,\n\n            /**\n            * Uploads a user profile image\n            */\n            uploadProfileImage: PropTypes.func.isRequired,\n\n            /**\n            * Set profile image to default\n            */\n            setDefaultProfileImage: PropTypes.func.isRequired,\n\n            /**\n            * For creating default access token\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n\n            /**\n            * For creating setting bot to system admin or special posting permissions\n            */\n            updateUserRoles: PropTypes.func.isRequired,\n        }),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: '',\n            username: '',\n            displayName: '',\n            description: '',\n            adding: false,\n            image: BotDefaultIcon,\n            role: roleOptionMember,\n            postAll: false,\n            postChannels: false,\n        };\n\n        if (this.props.bot) {\n            this.state.username = this.props.bot.username;\n            this.state.displayName = this.props.bot.display_name;\n            this.state.description = this.props.bot.description;\n            this.state.role = UserUtils.isSystemAdmin(this.props.roles || '') ? roleOptionSystemAdmin : roleOptionMember;\n            this.state.postAll = UserUtils.hasPostAllRole(this.props.roles || '');\n            this.state.postChannels = UserUtils.hasPostAllPublicRole(this.props.roles || '');\n        }\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateRole = (e) => {\n        this.setState({\n            role: e.target.value,\n        });\n    }\n\n    updatePostAll = (e) => {\n        this.setState({\n            postAll: e.target.checked,\n        });\n    }\n\n    updatePostChannels = (e) => {\n        this.setState({\n            postChannels: e.target.checked,\n        });\n    }\n\n    updatePicture = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            const pictureFile = e.target.files[0];\n            this.previewBlob = URL.createObjectURL(pictureFile);\n\n            var reader = new FileReader();\n            reader.onload = (e2) => {\n                const orientation = FileUtils.getExifOrientation(e2.target.result);\n                const orientationStyles = FileUtils.getOrientationStyles(orientation);\n\n                this.setState({\n                    image: this.previewBlob,\n                    orientationStyles,\n                });\n            };\n            reader.readAsArrayBuffer(pictureFile);\n            e.target.value = null;\n            this.setState({pictureFile});\n        } else {\n            this.setState({pictureFile: null, image: null});\n        }\n    }\n\n    setDefault = () => {\n        this.setState({pictureFile: 'default', image: BotDefaultIcon});\n    }\n\n    updateRoles = async (data) => {\n        let roles = General.SYSTEM_USER_ROLE;\n\n        if (this.state.role === roleOptionSystemAdmin) {\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\n        } else if (this.state.postAll) {\n            roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\n        } else if (this.state.postChannels) {\n            roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\n        }\n\n        const rolesResult = await this.props.actions.updateUserRoles(data.user_id, roles);\n        if (rolesResult) {\n            return rolesResult.error;\n        }\n\n        return null;\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (this.state.adding) {\n            return;\n        }\n\n        if (!this.state.username || this.state.username.length < 3) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='bots.manage.add.invalid_username'\n                        defaultMessage='Usernames have to begin with a lowercase letter and be 3-22 characters long. You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (this.state.pictureFile) {\n            if (!AcceptedProfileImageTypes.includes(this.state.pictureFile.type)) {\n                this.setState({\n                    error: (\n                        <FormattedMessage\n                            id='user.settings.general.validImage'\n                            defaultMessage='Only BMP, JPG or PNG images may be used for profile pictures'\n                        />\n                    ),\n                });\n            } else if (this.state.pictureFile.size > this.props.maxFileSize) {\n                this.setState({\n                    error: (\n                        <FormattedMessage\n                            id='user.settings.general.imageTooLarge'\n                            defaultMessage='Unable to upload profile image. File is too large.'\n                        />\n                    ),\n                });\n            }\n        }\n\n        this.setState({\n            adding: true,\n            error: '',\n        });\n\n        const bot = {\n            username: this.state.username.toLowerCase(),\n            display_name: this.state.displayName,\n            description: this.state.description,\n        };\n\n        let data;\n        let error;\n        if (this.props.bot) {\n            const result = await this.props.actions.patchBot(this.props.bot.user_id, bot);\n            if (result) {\n                data = result.data;\n                error = result.error;\n            } else {\n                error = Utils.localizeMessage('bot.edit_failed', 'Failed to edit bot');\n            }\n\n            if (!error) {\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\n                    const imageResult = await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\n                    error = imageResult.error;\n                } else if (this.state.pictureFile && this.state.pictureFile === 'default') {\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\n                }\n            }\n\n            if (!error && data) {\n                error = this.updateRoles(data);\n            }\n\n            if (data) {\n                browserHistory.push(`/${this.props.team.name}/integrations/bots`);\n                return;\n            }\n        } else {\n            const usernameError = Utils.isValidUsername(bot.username);\n            if (usernameError) {\n                this.setState({\n                    adding: false,\n                    error: usernameError,\n                });\n                return;\n            }\n\n            const result = await this.props.actions.createBot(bot);\n            if (result) {\n                data = result.data;\n                error = result.error;\n            } else {\n                error = Utils.localizeMessage('bot.create_failed', 'Failed to create bot');\n            }\n\n            let token = '';\n            if (!error) {\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\n                    await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\n                } else {\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\n                }\n                const tokenResult = await this.props.actions.createUserAccessToken(data.user_id,\n                    Utils.localizeMessage('bot.token.default.description', 'Default Token')\n                );\n\n                // On error just skip the confirmation because we have a bot without a token.\n                if (!tokenResult || tokenResult.error) {\n                    browserHistory.push(`/${this.props.team.name}/integrations/bots`);\n                    return;\n                }\n\n                token = tokenResult.data.token;\n            }\n\n            if (!error && data) {\n                error = this.updateRoles(data);\n            }\n\n            if (data) {\n                browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=bots&id=${data.user_id}&token=${token}`);\n                return;\n            }\n        }\n\n        this.setState({\n            adding: false,\n        });\n\n        if (error) {\n            this.setState({\n                error: error.message,\n            });\n        }\n    }\n\n    render() {\n        let subtitle = (\n            <FormattedMessage\n                id='bots.manage.add'\n                defaultMessage='Add'\n            />\n        );\n        let buttonText = (\n            <FormattedMessage\n                id='bots.manage.add.create'\n                defaultMessage='Create Bot Account'\n            />\n        );\n        let buttonActiveText = (\n            <FormattedMessage\n                id='bots.manage.add.creating'\n                defaultMessage='Creating...'\n            />\n        );\n\n        // If we are editing\n        if (this.props.bot) {\n            subtitle = (\n                <FormattedMessage\n                    id='bots.manage.edit'\n                    defaultMessage='Edit'\n                />\n            );\n            buttonText = (\n                <FormattedMessage\n                    id='bots.manage.edit.title'\n                    defaultMessage='Update'\n                />\n            );\n            buttonActiveText = (\n                <FormattedMessage\n                    id='bots.manage.edit.editing'\n                    defaultMessage='Updating...'\n                />\n            );\n        }\n\n        let imageURL = '';\n        let removeImageIcon = (\n            <OverlayTrigger\n                delayShow={OVERLAY_TIME_DELAY}\n                placement='right'\n                overlay={(\n                    <Tooltip id='removeIcon'>\n                        <FormattedMessage\n                            id='bot.remove_profile_picture'\n                            defaultMessage='Remove Bot Icon'\n                        />\n                    </Tooltip>\n                )}\n            >\n                <a\n                    className={'bot-profile__remove'}\n                    onClick={this.setDefault}\n                >\n                    <span>{'×'}</span>\n                </a>\n            </OverlayTrigger>\n        );\n        let imageStyles = null;\n        if (this.props.bot && !this.state.pictureFile) {\n            imageURL = Utils.imageURLForUser(this.props.bot.user_id);\n        } else {\n            imageURL = this.state.image;\n            imageStyles = this.state.orientationStyles;\n            if (this.state.image === BotDefaultIcon) {\n                removeImageIcon = null;\n            }\n        }\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/bots`}>\n                        <FormattedMessage\n                            id='bots.manage.header'\n                            defaultMessage='Bot Accounts'\n                        />\n                    </Link>\n                    {subtitle}\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.username'\n                                    defaultMessage='Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='username'\n                                    type='text'\n                                    maxLength='22'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.username.help'\n                                        defaultMessage='You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='boticon'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.icon'\n                                    defaultMessage='Bot Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div className={'bot-img-container'}>\n                                    <img\n                                        className={'bot-img'}\n                                        alt={'bot image'}\n                                        src={imageURL}\n                                        style={imageStyles}\n                                    />\n                                    {removeImageIcon}\n                                </div>\n                                <div\n                                    className='btn btn-sm btn-primary btn-file sel-btn'\n                                >\n                                    <FormattedMessage\n                                        id='bots.image.upload'\n                                        defaultMessage='Upload an image'\n                                    />\n                                    <input\n                                        accept='.jpg,.png,.bmp'\n                                        type='file'\n                                        onChange={this.updatePicture}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.displayName'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.display_name.help'\n                                        defaultMessage={'(Optional) You can choose to display your bot\\'s full name rather than its username.'}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.description.help'\n                                        defaultMessage='(Optional) Let others know what this bot does.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='role'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.role'\n                                    defaultMessage='Role'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.role}\n                                    disabled={!this.props.editingUserHasManageSystem}\n                                    onChange={this.updateRole}\n                                >\n                                    <option\n                                        value={roleOptionMember}\n                                    >\n                                        {roleOptionMember}\n                                    </option>\n                                    <option\n                                        value={roleOptionSystemAdmin}\n                                    >\n                                        {roleOptionSystemAdmin}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.role.help'\n                                        defaultMessage='Choose what role the bot should have.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row bot-profile__section'>\n                            <div className='col-md-5 col-sm-8 col-sm-offset-4'>\n                                <FormattedMarkdownMessage\n                                    id='admin.manage_roles.additionalRoles'\n                                    defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://about.vueteams.com/default-permissions).'\n                                />\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='postAll'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.post_all'\n                                    defaultMessage='post:all'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <div className='checkbox no-padding'>\n                                    <label htmlFor='postAll'>\n                                        <input\n                                            id='postAll'\n                                            type='checkbox'\n                                            checked={this.state.postAll || this.state.role === roleOptionSystemAdmin}\n                                            onChange={this.updatePostAll}\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin}\n                                        />\n                                        <FormattedMessage\n                                            id='bot.add.post_all.enabled'\n                                            defaultMessage='Enabled'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.post_all.help'\n                                        defaultMessage='Bot will have access to post to all Vue channels including direct messages.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='postChannels'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.post_channels'\n                                    defaultMessage='post:channels'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <div className='checkbox no-padding'>\n                                    <label htmlFor='postChannels'>\n                                        <input\n                                            id='postChannels'\n                                            type='checkbox'\n                                            checked={this.state.postChannels || this.state.role === roleOptionSystemAdmin || this.state.postAll}\n                                            onChange={this.updatePostChannels}\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin || this.state.postAll}\n                                        />\n                                        <FormattedMessage\n                                            id='bot.add.post_channels.enabled'\n                                            defaultMessage='Enabled'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.post_channels.help'\n                                        defaultMessage='Bot will have access to post to all Vue public channels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.state.error]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/bots`}\n                            >\n                                <FormattedMessage\n                                    id='bots.manage.add.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.adding}\n                                spinningText={buttonActiveText}\n                                onClick={this.handleSubmit}\n                                id='saveBot'\n                            >\n                                {buttonText}\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateUserRoles, uploadProfileImage, setDefaultProfileImage, createUserAccessToken} from 'mattermost-redux/actions/users';\nimport {createBot, patchBot} from 'mattermost-redux/actions/bots';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getUsers} from 'mattermost-redux/selectors/entities/common';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport AddBot from './add_bot.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const botId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const bots = getBotAccounts(state);\n    const bot = bots ? bots[botId] : null;\n    const user = bot ? getUsers(state)[bot.user_id] : null;\n    const roles = user ? user.roles : null;\n    return {\n        maxFileSize: parseInt(config.MaxFileSize, 10),\n        bot,\n        roles,\n        editingUserHasManageSystem: haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM}),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createBot,\n            patchBot,\n            uploadProfileImage,\n            setDefaultProfileImage,\n            createUserAccessToken,\n            updateUserRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBot);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class IntegrationOption extends React.Component {\n    static get propTypes() {\n        return {\n            image: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            description: PropTypes.node.isRequired,\n            link: PropTypes.string.isRequired,\n        };\n    }\n\n    render() {\n        const {image, title, description, link} = this.props;\n\n        return (\n            <Link\n                to={link}\n                className='integration-option'\n            >\n                <img\n                    alt={'integration image'}\n                    className='integration-option__image'\n                    src={image}\n                />\n                <div className='integration-option__title'>\n                    {title}\n                </div>\n                <div className='integration-option__description'>\n                    {description}\n                </div>\n            </Link>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Integrations from './integrations.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        siteName,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n    };\n}\n\nexport default connect(mapStateToProps)(Integrations);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BotAccountsIcon from 'images/bot_default_icon.png';\n\nimport * as Utils from 'utils/utils.jsx';\nimport IncomingWebhookIcon from 'images/incoming_webhook.jpg';\nimport OAuthIcon from 'images/oauth_icon.png';\nimport OutgoingWebhookIcon from 'images/outgoing_webhook.jpg';\nimport SlashCommandIcon from 'images/slash_command_icon.jpg';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport IntegrationOption from './integration_option.jsx';\n\nexport default class Integrations extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            user: PropTypes.object,\n            siteName: PropTypes.string,\n            enableIncomingWebhooks: PropTypes.bool,\n            enableOutgoingWebhooks: PropTypes.bool,\n            enableCommands: PropTypes.bool,\n            enableOAuthServiceProvider: PropTypes.bool,\n        };\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n    }\n\n    updateTitle = () => {\n        const currentSiteName = this.props.siteName || '';\n        document.title = Utils.localizeMessage('admin.sidebar.integrations', 'Integrations') + ' - ' + this.props.team.display_name + ' ' + currentSiteName;\n    }\n\n    render() {\n        const options = [];\n\n        if (this.props.enableIncomingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\n                    key='incomingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='incomingWebhook'\n                        image={IncomingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.title'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.description'\n                                defaultMessage='Incoming webhooks allow external integrations to send messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/incoming_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOutgoingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\n                    key='outgoingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='outgoingWebhook'\n                        image={OutgoingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.title'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.description'\n                                defaultMessage='Outgoing webhooks allow external integrations to receive and respond to messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/outgoing_webhooks'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableCommands) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    key='commandPermission'\n                >\n                    <IntegrationOption\n                        key='command'\n                        image={SlashCommandIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.command.title'\n                                defaultMessage='Slash Commands'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.command.description'\n                                defaultMessage='Slash commands send events to an external integration'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/commands'}\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        if (this.props.enableOAuthServiceProvider) {\n            options.push(\n                <SystemPermissionGate\n                    permissions={[Permissions.MANAGE_OAUTH]}\n                    key='oauth2AppsPermission'\n                >\n                    <IntegrationOption\n                        key='oauth2Apps'\n                        image={OAuthIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.oauthApps.title'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.oauthApps.description'\n                                defaultMessage='Auth 2.0 allows external applications to make authorized requests to the Vue API'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/oauth2-apps'}\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        options.push(\n            <SystemPermissionGate\n                permissions={['manage_bots']}\n                key='botsPermissions'\n            >\n                <IntegrationOption\n                    image={BotAccountsIcon}\n                    title={\n                        <FormattedMessage\n                            id='bots.manage.header'\n                            defaultMessage='Bot Accounts'\n                        />\n                    }\n                    description={\n                        <FormattedMessage\n                            id='bots.manage.description'\n                            defaultMessage='Use bot accounts to integrate with Vue through plugins or the API'\n                        />\n                    }\n                    link={'/' + this.props.team.name + '/integrations/bots'}\n                />\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content row'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='integrations.header'\n                            defaultMessage='Integrations'\n                        />\n                    </h1>\n                </div>\n                <div className='backstage-list__help'>\n                    <FormattedMessage\n                        id='integrations.help'\n                        defaultMessage='Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Vue.'\n                        values={{\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.vueteams.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='integrations.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                </div>\n                <div className='integrations-list d-flex flex-wrap'>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class AnyTeamPermissionGate extends React.Component {\n    static defaultProps = {\n        invert: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Permissions enough to pass the gate (binary OR)\n         */\n        permissions: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Has permission\n         */\n        hasPermission: PropTypes.bool.isRequired,\n\n        /**\n         * Invert the permission (used for else)\n         */\n        invert: PropTypes.bool.isRequired,\n\n        /**\n         * Content protected by the permissions gate\n         */\n        children: PropTypes.node.isRequired,\n    };\n\n    render() {\n        if (this.props.hasPermission && !this.props.invert) {\n            return this.props.children;\n        }\n        if (!this.props.hasPermission && this.props.invert) {\n            return this.props.children;\n        }\n        return null;\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport AnyTeamPermissionGate from './any_team_permission_gate.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const teams = getMyTeams(state);\n    for (const team of teams) {\n        for (const permission of ownProps.permissions) {\n            if (haveITeamPermission(state, {team: team.id, permission})) {\n                return {hasPermission: true};\n            }\n        }\n    }\n\n    return {hasPermission: false};\n}\n\nexport default connect(mapStateToProps)(AnyTeamPermissionGate);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ConfirmModal from './confirm_modal.jsx';\n\nexport default class DeleteModalTrigger extends React.PureComponent {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        if (this.constructor === DeleteModalTrigger) {\n            throw new TypeError('Can not construct abstract class.');\n        }\n\n        this.state = {\n            showDeleteModal: false,\n        };\n    }\n\n    handleOpenModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showDeleteModal: true,\n        });\n    }\n\n    handleConfirm = () => {\n        this.props.onDelete();\n    }\n\n    handleCancel = () => {\n        this.setState({\n            showDeleteModal: false,\n        });\n    }\n\n    handleKeyDown = (e) => {\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\n            this.handleConfirm(e);\n        }\n    }\n\n    render() {\n        return (\n            <span>\n                <button\n                    className='color--link style--none'\n                    onClick={this.handleOpenModal}\n                >\n                    { this.triggerTitle }\n                </button>\n                <ConfirmModal\n                    show={this.state.showDeleteModal}\n                    title={this.modalTitle}\n                    message={this.modalMessage}\n                    confirmButtonText={this.modalConfirmButton}\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.handleCancel}\n                    onKeyDown={this.handleKeyDown}\n                />\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nexport default class DeleteEmoji extends DeleteModalTrigger {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.title'\n                defaultMessage='Delete Custom Emoji'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <WarningIcon additionalClassName='fa-margin--right'/>\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.msg'\n                    defaultMessage='This action permanently deletes the custom emoji. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport {Client4} from 'mattermost-redux/client';\n\nimport DeleteEmoji from 'components/emoji/delete_emoji_modal.jsx';\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\n\nexport default class EmojiListItem extends React.Component {\n    static propTypes = {\n        emoji: PropTypes.object.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        creatorDisplayName: PropTypes.string.isRequired,\n        creatorUsername: PropTypes.string,\n        currentTeam: PropTypes.object,\n        onDelete: PropTypes.func,\n        actions: PropTypes.shape({\n            deleteCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        emoji: {},\n        currentUserId: '',\n        currentTeam: {},\n        creatorDisplayName: '',\n    }\n\n    handleDelete = () => {\n        if (this.props.onDelete) {\n            this.props.onDelete(this.props.emoji.id);\n        }\n\n        this.props.actions.deleteCustomEmoji(this.props.emoji.id);\n    }\n\n    render() {\n        const emoji = this.props.emoji;\n        const creatorUsername = this.props.creatorUsername;\n        let creatorDisplayName = this.props.creatorDisplayName;\n\n        if (creatorUsername && creatorUsername !== creatorDisplayName) {\n            creatorDisplayName += ' (@' + creatorUsername + ')';\n        }\n\n        let deleteButton = null;\n        if (emoji.creator_id === this.props.currentUserId) {\n            deleteButton = (\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\n                    <DeleteEmoji onDelete={this.handleDelete}/>\n                </AnyTeamPermissionGate>\n            );\n        } else {\n            deleteButton = (\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\n                    <AnyTeamPermissionGate permissions={[Permissions.DELETE_OTHERS_EMOJIS]}>\n                        <DeleteEmoji onDelete={this.handleDelete}/>\n                    </AnyTeamPermissionGate>\n                </AnyTeamPermissionGate>\n            );\n        }\n\n        return (\n            <tr className='backstage-list__item'>\n                <td className='emoji-list__name'>\n                    {':' + emoji.name + ':'}\n                </td>\n                <td className='emoji-list__image'>\n                    <span\n                        className='emoticon'\n                        style={{backgroundImage: 'url(' + Client4.getCustomEmojiImageUrl(emoji.id) + ')'}}\n                    />\n                </td>\n                <td className='emoji-list__creator'>\n                    {creatorDisplayName}\n                </td>\n                <td className='emoji-list-item_actions'>\n                    {deleteButton}\n                </td>\n            </tr>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getDisplayNameByUser} from 'utils/utils.jsx';\n\nimport EmojiListItem from './emoji_list_item.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const emoji = state.entities.emojis.customEmoji[ownProps.emojiId];\n    const creator = getUser(state, emoji.creator_id);\n\n    return {\n        emoji,\n        creatorDisplayName: getDisplayNameByUser(creator),\n        creatorUsername: creator ? creator.username : '',\n        currentUserId: getCurrentUserId(state),\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiListItem);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Emoji} from 'mattermost-redux/constants';\n\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport SaveButton from 'components/save_button.jsx';\nimport EmojiListItem from 'components/emoji/emoji_list_item';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport SearchIcon from 'components/widgets/icons/fa_search_icon';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nconst EMOJI_PER_PAGE = 50;\nconst EMOJI_SEARCH_DELAY_MILLISECONDS = 200;\n\nexport default class EmojiList extends React.Component {\n    static propTypes = {\n\n        /**\n         * Custom emojis on the system.\n         */\n        emojiIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Function to scroll list to top.\n         */\n        scrollToTop: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Get pages of custom emojis.\n             */\n            getCustomEmojis: PropTypes.func.isRequired,\n\n            /**\n             * Search custom emojis.\n             */\n            searchCustomEmojis: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeout = null;\n\n        this.state = {\n            loading: true,\n            page: 0,\n            nextLoading: false,\n            searchEmojis: null,\n            missingPages: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getCustomEmojis(0, EMOJI_PER_PAGE + 1, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({loading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n        });\n    }\n\n    nextPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const next = this.state.page + 1;\n        this.setState({nextLoading: true});\n        this.props.actions.getCustomEmojis(next, EMOJI_PER_PAGE, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({page: next, nextLoading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n\n            this.props.scrollToTop();\n        });\n    }\n\n    previousPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({page: this.state.page - 1, nextLoading: false});\n        this.props.scrollToTop();\n    }\n\n    onSearchChange = (e) => {\n        if (!e || !e.target) {\n            return;\n        }\n\n        const term = e.target.value || '';\n\n        clearTimeout(this.searchTimeout);\n\n        this.searchTimeout = setTimeout(async () => {\n            if (term.trim() === '') {\n                this.setState({searchEmojis: null, page: 0});\n                return;\n            }\n\n            this.setState({loading: true});\n\n            const {data} = await this.props.actions.searchCustomEmojis(term, {}, true);\n\n            if (data) {\n                this.setState({searchEmojis: data.map((em) => em.id), loading: false});\n            } else {\n                this.setState({searchEmojis: [], loading: false});\n            }\n        }, EMOJI_SEARCH_DELAY_MILLISECONDS);\n    }\n\n    deleteFromSearch = (emojiId) => {\n        if (!this.state.searchEmojis) {\n            return;\n        }\n\n        const index = this.state.searchEmojis.indexOf(emojiId);\n\n        if (index < 0) {\n            return;\n        }\n\n        const newSearchEmojis = [...this.state.searchEmojis];\n        newSearchEmojis.splice(index, 1);\n        this.setState({searchEmojis: newSearchEmojis});\n    }\n\n    render() {\n        const searchEmojis = this.state.searchEmojis;\n        const emojis = [];\n        let nextButton;\n        let previousButton;\n\n        if (this.state.loading) {\n            emojis.push(\n                <tr\n                    key='loading'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <LoadingScreen key='loading'/>\n                    </td>\n                </tr>\n            );\n        } else if (this.props.emojiIds.length === 0 || (searchEmojis && searchEmojis.length === 0)) {\n            emojis.push(\n                <tr\n                    key='empty'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <FormattedMessage\n                            id='emoji_list.empty'\n                            defaultMessage='No custom emoji found'\n                        />\n                    </td>\n                </tr>\n            );\n        } else if (searchEmojis) {\n            searchEmojis.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_search_item' + emojiId}\n                        emojiId={emojiId}\n                        onDelete={this.deleteFromSearch}\n                    />\n                );\n            });\n        } else {\n            const pageStart = this.state.page * EMOJI_PER_PAGE;\n            const pageEnd = pageStart + EMOJI_PER_PAGE;\n            const emojisToDisplay = this.props.emojiIds.slice(pageStart, pageEnd);\n\n            emojisToDisplay.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_list_item' + emojiId}\n                        emojiId={emojiId}\n                    />\n                );\n            });\n\n            if (this.state.missingPages) {\n                const buttonContents = (\n                    <span>\n                        <FormattedMessage\n                            id='filtered_user_list.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon additionalClassName='margin-left'/>\n                    </span>\n                );\n\n                nextButton = (\n                    <SaveButton\n                        btnClass='btn-link'\n                        extraClasses='pull-right'\n                        onClick={this.nextPage}\n                        saving={this.state.nextLoading}\n                        disabled={this.state.nextLoading}\n                        defaultMessage={buttonContents}\n                        savingMessage={buttonContents}\n                    />\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-link'\n                        onClick={this.previousPage}\n                    >\n                        <PreviousIcon additionalClassName='margin-right'/>\n                        <FormattedMessage\n                            id='filtered_user_list.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <SearchIcon/>\n                        <LocalizedInput\n                            type='search'\n                            className='form-control'\n                            placeholder={{id: t('emoji_list.search'), defaultMessage: 'Search Custom Emoji'}}\n                            onChange={this.onSearchChange}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help'\n                            defaultMessage=\"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help2'\n                            defaultMessage=\"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.\"\n                        />\n                    </p>\n                </span>\n                <div className='backstage-list'>\n                    <table className='emoji-list__table'>\n                        <thead>\n                            <tr className='backstage-list__item emoji-list__table-header'>\n                                <th className='emoji-list__name'>\n                                    <FormattedMessage\n                                        id='emoji_list.name'\n                                        defaultMessage='Name'\n                                    />\n                                </th>\n                                <th className='emoji-list__image'>\n                                    <FormattedMessage\n                                        id='emoji_list.image'\n                                        defaultMessage='Image'\n                                    />\n                                </th>\n                                <th className='emoji-list__creator'>\n                                    <FormattedMessage\n                                        id='emoji_list.creator'\n                                        defaultMessage='Creator'\n                                    />\n                                </th>\n                                <th className='emoji-list_actions'>\n                                    <FormattedMessage\n                                        id='emoji_list.actions'\n                                        defaultMessage='Actions'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {emojis}\n                        </tbody>\n                    </table>\n                </div>\n                <div className='filter-controls padding-top x2'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCustomEmojiIdsSortedByName} from 'mattermost-redux/selectors/entities/emojis';\n\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\n\nimport EmojiList from './emoji_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiIds: getCustomEmojiIdsSortedByName(state) || [],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomEmojis,\n            searchCustomEmojis,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiList);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport * as Utils from 'utils/utils.jsx';\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\n\nimport EmojiList from './emoji_list';\n\nexport default class EmojiPage extends React.Component {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        teamName: PropTypes.string.isRequired,\n        teamDisplayName: PropTypes.string.isRequired,\n        siteName: PropTypes.string,\n        scrollToTop: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        teamName: '',\n        teamDisplayName: '',\n        siteName: '',\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n        this.props.actions.loadRolesIfNeeded(['system_admin', 'team_admin', 'system_user', 'team_user']);\n    }\n\n    updateTitle = (props = this.props) => {\n        document.title = Utils.localizeMessage('custom_emoji.header', 'Custom Emoji') + ' - ' + props.teamDisplayName + ' ' + props.siteName;\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.siteName !== nextProps.siteName) {\n            this.updateTitle(nextProps);\n        }\n    }\n\n    render() {\n        return (\n            <div className='backstage-content emoji-list'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </h1>\n                    <AnyTeamPermissionGate permissions={[Permissions.CREATE_EMOJIS]}>\n                        <Link\n                            className='add-link'\n                            to={'/' + this.props.teamName + '/emoji/add'}\n                        >\n                            <button\n                                type='button'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='emoji_list.add'\n                                    defaultMessage='Add Custom Emoji'\n                                />\n                            </button>\n                        </Link>\n                    </AnyTeamPermissionGate>\n                </div>\n                <EmojiList scrollToTop={this.props.scrollToTop}/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\n\nimport EmojiPage from './emoji_page.jsx';\n\nfunction mapStateToProps(state) {\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        teamId: team.id,\n        teamName: team.name,\n        teamDisplayName: team.display_name,\n        siteName: state.entities.general.config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPage);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport {browserHistory} from 'utils/browser_history';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class AddEmoji extends React.Component {\n    static propTypes = {\n        actions: PropTypes.shape({\n            createCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n        emojiMap: PropTypes.object.isRequired,\n        team: PropTypes.object,\n        user: PropTypes.object,\n    };\n\n    static contextTypes = {\n        router: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            image: null,\n            imageUrl: '',\n            saving: false,\n            error: null,\n        };\n    }\n\n    handleSubmit = async (e) => {\n        const {actions, emojiMap, user, team} = this.props;\n        const {image, name, saving} = this.state;\n\n        e.preventDefault();\n\n        if (saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            error: null,\n        });\n\n        const emoji = {\n            creator_id: user.id,\n            name: name.trim().toLowerCase(),\n        };\n\n        // trim surrounding colons if the user accidentally included them in the name\n        if (emoji.name.startsWith(':') && emoji.name.endsWith(':')) {\n            emoji.name = emoji.name.substring(1, emoji.name.length - 1);\n        }\n\n        if (!emoji.name) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameRequired'\n                        defaultMessage='A name is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        } else if ((/[^a-z0-9_-]/).test(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameInvalid'\n                        defaultMessage=\"An emoji's name can only contain lowercase letters, numbers, and the symbols '-' and '_'.\"\n                    />\n                ),\n            });\n\n            return;\n        } else if (emojiMap.hasSystemEmoji(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameTaken'\n                        defaultMessage='This name is already in use by a system emoji. Please choose another name.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!image) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.imageRequired'\n                        defaultMessage='An image is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const {error} = await actions.createCustomEmoji(emoji, image);\n        if (error) {\n            this.setState({\n                saving: false,\n                error: error.message,\n            });\n            return;\n        }\n\n        browserHistory.push('/' + team.name + '/emoji');\n    };\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    };\n\n    updateImage = (e) => {\n        if (e.target.files.length === 0) {\n            this.setState({\n                image: null,\n                imageUrl: '',\n            });\n\n            return;\n        }\n\n        const image = e.target.files[0];\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({\n                image,\n                imageUrl: reader.result,\n            });\n        };\n        reader.readAsDataURL(image);\n    };\n\n    render() {\n        let filename = null;\n        if (this.state.image) {\n            filename = (\n                <span className='add-emoji__filename'>\n                    {this.state.image.name}\n                </span>\n            );\n        }\n\n        let preview = null;\n        if (this.state.imageUrl) {\n            preview = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='preview'\n                    >\n                        <FormattedMessage\n                            id='add_emoji.preview'\n                            defaultMessage='Preview'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8 add-emoji__preview'>\n                        <FormattedMessage\n                            id='add_emoji.preview.sentence'\n                            defaultMessage='This is a sentence with {image} in it.'\n                            values={{\n                                image: (\n                                    <span\n                                        className='emoticon'\n                                        style={{backgroundImage: 'url(' + this.state.imageUrl + ')'}}\n                                    />\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/emoji'}>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id='add_emoji.header'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.name'\n                                    defaultMessage='Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_emoji.name.help'\n                                        defaultMessage=\"Choose a name for your emoji made of up to 64 characters consisting of lowercase letters, numbers, and the symbols '-' and '_'.\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='image'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.image'\n                                    defaultMessage='Image'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div>\n                                    <div className='add-emoji__upload'>\n                                        <button className='btn btn-primary'>\n                                            <FormattedMessage\n                                                id='add_emoji.image.button'\n                                                defaultMessage='Select'\n                                            />\n                                        </button>\n                                        <input\n                                            id='select-emoji'\n                                            type='file'\n                                            accept='.jpg,.png,.gif'\n                                            multiple={false}\n                                            onChange={this.updateImage}\n                                        />\n                                    </div>\n                                    {filename}\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_emoji.image.help'\n                                            defaultMessage='Choose the image for your emoji. The image can be a gif, png, or jpeg file with a max size of 64 KB and dimensions up to 128 by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {preview}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                error={this.state.error}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={'/' + this.props.team.name + '/emoji'}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage('add_emoji.saving', 'Saving...')}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.save'\n                                    defaultMessage='Save'\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {createCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getEmojiMap} from 'selectors/emojis';\n\nimport AddEmoji from './add_emoji.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiMap: getEmojiMap(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEmoji);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport request from 'superagent';\nimport * as IntegrationActions from 'mattermost-redux/actions/integrations';\nimport {getProfilesByIds} from 'mattermost-redux/actions/users';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\n\nconst DEFAULT_PAGE_SIZE = 100;\n\nexport function loadIncomingHooksAndProfilesForTeam(teamId, page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getIncomingHooks(teamId, page, perPage));\n        if (data) {\n            dispatch(loadProfilesForIncomingHooks(data));\n        }\n    };\n}\n\nexport function loadProfilesForIncomingHooks(hooks) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            if (!getUser(state, hook.user_id)) {\n                profilesToLoad[hook.user_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadOutgoingHooksAndProfilesForTeam(teamId, page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getOutgoingHooks('', teamId, page, perPage));\n        if (data) {\n            dispatch(loadProfilesForOutgoingHooks(data));\n        }\n    };\n}\n\nexport function loadProfilesForOutgoingHooks(hooks) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            if (!getUser(state, hook.creator_id)) {\n                profilesToLoad[hook.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadCommandsAndProfilesForTeam(teamId) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getCustomTeamCommands(teamId));\n        if (data) {\n            dispatch(loadProfilesForCommands(data));\n        }\n    };\n}\n\nexport function loadProfilesForCommands(commands) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < commands.length; i++) {\n            const command = commands[i];\n            if (!getUser(state, command.creator_id)) {\n                profilesToLoad[command.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadOAuthAppsAndProfiles(page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getOAuthApps(page, perPage));\n        if (data) {\n            dispatch(loadProfilesForOAuthApps(data));\n        }\n    };\n}\n\nexport function loadProfilesForOAuthApps(apps) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < apps.length; i++) {\n            const app = apps[i];\n            if (!getUser(state, app.creator_id)) {\n                profilesToLoad[app.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function getYoutubeVideoInfo(googleKey, videoId, success, error) {\n    request.get('https://www.googleapis.com/youtube/v3/videos').\n        query({part: 'snippet', id: videoId, key: googleKey}).\n        end((err, res) => {\n            if (err) {\n                return error(err);\n            }\n\n            if (!res.body) {\n                console.error('Missing response body for getYoutubeVideoInfo'); // eslint-disable-line no-console\n            }\n\n            return success(res.body);\n        });\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport Constants from 'utils/constants.jsx';\nimport {copyToClipboard} from 'utils/utils.jsx';\n\nexport default class CopyText extends React.PureComponent {\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n\n        defaultMessage: PropTypes.string,\n\n        idMessage: PropTypes.string,\n    };\n\n    static get defaultProps() {\n        return {\n            idMessage: 'integrations.copy',\n            defaultMessage: 'Copy',\n        };\n    }\n\n    copyText = (e) => {\n        e.preventDefault();\n        copyToClipboard(this.props.value);\n    };\n\n    render() {\n        if (!document.queryCommandSupported('copy')) {\n            return null;\n        }\n\n        const tooltip = (\n            <Tooltip id='copy'>\n                <FormattedMessage\n                    id={this.props.idMessage}\n                    defaultMessage={this.props.defaultMessage}\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                overlay={tooltip}\n            >\n                <a\n                    href='#'\n                    className='fa fa-copy margin-left'\n                    onClick={this.copyText}\n                />\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nexport default class DeleteIntegration extends DeleteModalTrigger {\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='installed_integrations.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.title'\n                defaultMessage='Delete Integration'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <WarningIcon additionalClassName='fa-margin--right'/>\n                <FormattedMessage\n                    id={this.props.messageId}\n                    defaultMessage='This action permanently deletes the integration and breaks any integrations using it. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n\nDeleteIntegration.propTypes = {\n    messageId: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {getSiteURL} from 'utils/url.jsx';\nimport {t} from 'utils/i18n';\n\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(incomingWebhook, channel, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    if (incomingWebhook.display_name.toLowerCase().indexOf(filter) !== -1 ||\n        incomingWebhook.description.toLowerCase().indexOf(filter) !== -1) {\n        return true;\n    }\n\n    if (incomingWebhook.channel_id) {\n        if (channel && channel.name.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class InstalledIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        incomingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhook based on filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.incomingWebhook);\n    }\n\n    render() {\n        const incomingWebhook = this.props.incomingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!matchesFilter(incomingWebhook, channel, filter)) {\n            return null;\n        }\n\n        let displayName;\n        if (incomingWebhook.display_name) {\n            displayName = incomingWebhook.display_name;\n        } else if (channel) {\n            displayName = channel.display_name;\n        } else {\n            displayName = (\n                <FormattedMessage\n                    id='installed_incoming_webhooks.unknown_channel'\n                    defaultMessage='A Private Webhook'\n                />\n            );\n        }\n\n        let description = null;\n        if (incomingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {incomingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks/edit?id=${incomingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_incoming_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const incomingWebhookId = getSiteURL() + '/hooks/' + incomingWebhook.id;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <strong className='item-details__name'>\n                            {displayName}\n                        </strong>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url'>\n                            <FormattedMessage\n                                id='installed_integrations.url'\n                                defaultMessage='URL: {url}'\n                                values={{\n                                    url: incomingWebhookId,\n                                }}\n                            />\n                            <span>\n                                <CopyText\n                                    value={incomingWebhookId}\n                                />\n                            </span>\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: incomingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledIncomingWebhook, {matchesFilter} from 'components/integrations/installed_incoming_webhook.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledIncomingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        incomingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n\n        teamId: PropTypes.string,\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing incomingWebhook\n            */\n            removeIncomingHook: PropTypes.func,\n\n            /**\n            * The function to call for incomingWebhook List and for the status of api\n            */\n            loadIncomingHooksAndProfilesForTeam: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.loadIncomingHooksAndProfilesForTeam(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteIncomingWebhook = (incomingWebhook) => {\n        this.props.actions.removeIncomingHook(incomingWebhook.id);\n    }\n\n    incomingWebhookCompare = (a, b) => {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_incoming_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        const displayNameB = b.display_name;\n\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    incomingWebhooks = (filter) => this.props.incomingWebhooks.\n        sort(this.incomingWebhookCompare).\n        filter((incomingWebhook) => matchesFilter(incomingWebhook, this.props.channels[incomingWebhook.channel_id], filter)).\n        map((incomingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === incomingWebhook.user_id;\n            const channel = this.props.channels[incomingWebhook.channel_id];\n            return (\n                <InstalledIncomingWebhook\n                    key={incomingWebhook.id}\n                    incomingWebhook={incomingWebhook}\n                    onDelete={this.deleteIncomingWebhook}\n                    creator={this.props.users[incomingWebhook.user_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.header'\n                        defaultMessage='Installed Incoming Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.add'\n                        defaultMessage='Add Incoming Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/incoming_webhooks/add'}\n                addButtonId='addIncomingWebhook'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.empty'\n                        defaultMessage='No incoming webhooks found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_incoming_webhooks.emptySearch'\n                        defaultMessage='No incoming webhooks match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.help'\n                        defaultMessage='Use incoming webhooks to connect external tools to Vue. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs..vueteams.com/developer/webhooks-incoming.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.vueteams.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_incoming_webhooks.search', 'Search Incoming Webhooks')}\n                loading={this.state.loading}\n            >\n                {(filter) => {\n                    const children = this.incomingWebhooks(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getIncomingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadIncomingHooksAndProfilesForTeam} from 'actions/integration_actions';\n\nimport InstalledIncomingWebhooks from './installed_incoming_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_INCOMING_WEBHOOKS});\n    const incomingHooks = getIncomingHooks(state);\n    const incomingWebhooks = Object.keys(incomingHooks).\n        map((key) => incomingHooks[key]).\n        filter((incomingWebhook) => incomingWebhook.team_id === teamId);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n\n    return {\n        incomingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableIncomingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadIncomingHooksAndProfilesForTeam,\n            removeIncomingHook: Actions.removeIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledIncomingWebhooks);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\n\nimport {getMyChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserLocale} from 'mattermost-redux/selectors/entities/i18n';\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\n\nimport ChannelSelect from './channel_select.jsx';\n\nconst getMyChannelsSorted = createSelector(\n    getMyChannels,\n    getCurrentUserLocale,\n    (channels, locale) => {\n        return [...channels].sort(sortChannelsByTypeAndDisplayName.bind(null, locale));\n    }\n);\n\nfunction mapStateToProps(state) {\n    return {\n        channels: getMyChannelsSorted(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelSelect);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ChannelSelect extends React.PureComponent {\n    static get propTypes() {\n        return {\n            channels: PropTypes.array.isRequired,\n            onChange: PropTypes.func,\n            value: PropTypes.string,\n            selectOpen: PropTypes.bool.isRequired,\n            selectPrivate: PropTypes.bool.isRequired,\n            selectDm: PropTypes.bool.isRequired,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            selectOpen: false,\n            selectPrivate: false,\n            selectDm: false,\n        };\n    }\n\n    render() {\n        const options = [\n            <option\n                key=''\n                value=''\n            >\n                {Utils.localizeMessage('channel_select.placeholder', '--- Select a channel ---')}\n            </option>,\n        ];\n\n        this.props.channels.forEach((channel) => {\n            const channelName = channel.display_name || channel.name;\n            if (channel.type === Constants.OPEN_CHANNEL && this.props.selectOpen) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            } else if (channel.type === Constants.PRIVATE_CHANNEL && this.props.selectPrivate) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            } else if (channel.type === Constants.DM_CHANNEL && this.props.selectDm) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>\n                );\n            }\n        });\n\n        return (\n            <select\n                className='form-control'\n                value={this.props.value}\n                onChange={this.props.onChange}\n                id='channelSelect'\n            >\n                {options}\n            </select>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class AbstractIncomingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The hook used to set the initial state\n        */\n        initialHook: PropTypes.object,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            channelId: hook.channel_id || '',\n            channelLocked: hook.channel_locked || false,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n            saving: false,\n            serverError: '',\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: '',\n            clientError: '',\n        });\n\n        if (!this.state.channelId) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_incoming_webhook.channelRequired'\n                        defaultMessage='A valid channel is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            channel_id: this.state.channelId,\n            channel_locked: this.state.channelLocked,\n            display_name: this.state.displayName,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateChannelLocked = (e) => {\n        this.setState({\n            channelLocked: e.target.checked,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks`}>\n                        <FormattedMessage\n                            id='installed_incoming_webhooks.header'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                    selectPrivate={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channel.help'\n                                        defaultMessage='The default public or private channel that receives the webhook payloads. You must belong to the private channel when setting up the webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelLocked'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channelLocked'\n                                    defaultMessage='Lock to this channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='channelLocked'\n                                    type='checkbox'\n                                    checked={this.state.channelLocked}\n                                    onChange={this.updateChannelLocked}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channelLocked.help'\n                                        defaultMessage='If set, the incoming webhook can only post to the channel selected above.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        { this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        { this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/incoming_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveWebhook'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_incoming_webhook.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_incoming_webhook.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The request state for createIncomingHook action. Contains status and error\n        */\n        createIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add a new incoming webhook\n            */\n            createIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addIncomingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createIncomingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=incoming_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createIncomingHookRequest.error) {\n            this.setState({serverError: this.props.createIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.addIncomingHook}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddIncomingWebhook from './add_incoming_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        createIncomingHookRequest: state.requests.integrations.createIncomingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIncomingWebhook);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('update_incoming_webhook.update'), defaultMessage: 'Update'};\nconst LOADING = {id: t('update_incoming_webhook.updating'), defaultMessage: 'Updating...'};\n\nexport default class EditIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The incoming webhook to edit\n        */\n        hook: PropTypes.object,\n\n        /**\n        * The id of the incoming webhook to edit\n        */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n        * The request state for updateIncomingHook action. Contains status and error\n        */\n        updateIncomingHookRequest: PropTypes.object.isRequired,\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to update an incoming webhook\n            */\n            updateIncomingHook: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to get an incoming webhook\n            */\n            getIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHook(this.props.hookId);\n        }\n    }\n\n    editIncomingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        await this.submitHook();\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateIncomingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/incoming_webhooks`);\n            return;\n        }\n\n        if (this.props.updateIncomingHookRequest.error) {\n            this.setState({serverError: this.props.updateIncomingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.editIncomingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getIncomingHook, updateIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditIncomingWebhook from './edit_incoming_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n\n    return {\n        hookId,\n        hook: state.entities.integrations.incomingHooks[hookId],\n        updateIncomingHookRequest: state.requests.integrations.updateIncomingHook,\n        enableIncomingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateIncomingHook,\n            getIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditIncomingWebhook);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(outgoingWebhook, channel, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    const {\n        display_name: displayName,\n        description,\n        trigger_words: triggerWords,\n    } = outgoingWebhook;\n\n    if (\n        (displayName && displayName.toLowerCase().indexOf(filter) !== -1) ||\n        (description && description.toLowerCase().indexOf(filter) !== -1)\n    ) {\n        return true;\n    }\n\n    if (triggerWords) {\n        for (const triggerWord of triggerWords) {\n            if (triggerWord.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n    }\n\n    if (channel && channel.name) {\n        if (channel.name.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class InstalledOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        outgoingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function used for webhook token regeneration\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhooks based in filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.outgoingWebhook);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.outgoingWebhook);\n    }\n\n    makeDisplayName(outgoingWebhook, channel) {\n        if (outgoingWebhook.display_name) {\n            return outgoingWebhook.display_name;\n        } else if (channel) {\n            return channel.display_name;\n        }\n        return (\n            <FormattedMessage\n                id='installed_outgoing_webhooks.unknown_channel'\n                defaultMessage='A Private Webhook'\n            />\n        );\n    }\n\n    render() {\n        const outgoingWebhook = this.props.outgoingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        const triggerWordsFull = 0;\n        const triggerWordsStartsWith = 1;\n\n        if (outgoingWebhook && !matchesFilter(outgoingWebhook, channel, filter)) {\n            return null;\n        }\n\n        const displayName = this.makeDisplayName(outgoingWebhook, channel);\n\n        let description = null;\n        if (outgoingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {outgoingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let triggerWords = null;\n        if (outgoingWebhook.trigger_words && outgoingWebhook.trigger_words.length > 0) {\n            triggerWords = (\n                <div className='item-details__row'>\n                    <span className='item-details__trigger-words'>\n                        <FormattedMessage\n                            id='installed_integrations.triggerWords'\n                            defaultMessage='Trigger Words: {triggerWords}'\n                            values={{\n                                triggerWords: outgoingWebhook.trigger_words.join(', '),\n                            }}\n                        />\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: outgoingWebhook.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let triggerWhen;\n        if (outgoingWebhook.trigger_when === triggerWordsFull) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenFullWord'\n                    defaultMessage='First word matches a trigger word exactly'\n                />\n            );\n        } else if (outgoingWebhook.trigger_when === triggerWordsStartsWith) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenStartsWith'\n                    defaultMessage='First word starts with a trigger word'\n                />\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regen Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks/edit?id=${outgoingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_outgoing_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <strong className='item-details__name'>\n                            {displayName}\n                        </strong>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__content_type'>\n                            <FormattedMessage\n                                id='installed_integrations.content_type'\n                                defaultMessage='Content-Type: {contentType}'\n                                values={{\n                                    contentType: outgoingWebhook.content_type || 'application/x-www-form-urlencoded',\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {triggerWords}\n                    <div className='item-details__row'>\n                        <span className='item-details__trigger-when'>\n                            <FormattedMessage\n                                id='installed_integrations.triggerWhen'\n                                defaultMessage='Trigger When: {triggerWhen}'\n                                values={{\n                                    triggerWhen,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: outgoingWebhook.token,\n                                }}\n                            />\n                            <CopyText\n                                value={outgoingWebhook.token}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: outgoingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {urls}\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOutgoingWebhook, {matchesFilter} from 'components/integrations/installed_outgoing_webhook.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledOutgoingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        outgoingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n        teamId: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing outgoingWebhook\n            */\n            removeOutgoingHook: PropTypes.func,\n\n            /**\n            * The function to call for outgoingWebhook List and for the status of api\n            */\n            loadOutgoingHooksAndProfilesForTeam: PropTypes.func,\n\n            /**\n            * The function to call for regeneration of webhook token\n            */\n            regenOutgoingHookToken: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.loadOutgoingHooksAndProfilesForTeam(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE\n            ).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    regenOutgoingWebhookToken = (outgoingWebhook) => {\n        this.props.actions.regenOutgoingHookToken(outgoingWebhook.id);\n    }\n\n    removeOutgoingHook = (outgoingWebhook) => {\n        this.props.actions.removeOutgoingHook(outgoingWebhook.id);\n    }\n\n    outgoingWebhookCompare = (a, b) => {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        let displayNameB = b.display_name;\n        if (!displayNameB) {\n            const channelB = this.props.channels[b.channel_id];\n            if (channelB) {\n                displayNameB = channelB.display_name;\n            } else {\n                displayNameB = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    outgoingWebhooks = (filter) => this.props.outgoingWebhooks.\n        sort(this.outgoingWebhookCompare).\n        filter((outgoingWebhook) => matchesFilter(outgoingWebhook, this.props.channels[outgoingWebhook.channel_id], filter)).\n        map((outgoingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === outgoingWebhook.creator_id;\n            const channel = this.props.channels[outgoingWebhook.channel_id];\n            return (\n                <InstalledOutgoingWebhook\n                    key={outgoingWebhook.id}\n                    outgoingWebhook={outgoingWebhook}\n                    onRegenToken={this.regenOutgoingWebhookToken}\n                    onDelete={this.removeOutgoingHook}\n                    creator={this.props.users[outgoingWebhook.creator_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.header'\n                        defaultMessage='Installed Outgoing Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.add'\n                        defaultMessage='Add Outgoing Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/outgoing_webhooks/add'}\n                addButtonId='addOutgoingWebhook'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.empty'\n                        defaultMessage='No outgoing webhooks found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_outgoing_webhooks.emptySearch'\n                        defaultMessage='No outgoing webhooks match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.help'\n                        defaultMessage='Use outgoing webhooks to connect external tools to Vue. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs..vueteams.com/developer/webhooks-outgoing.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.vueteams.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_outgoing_webhooks.search', 'Search Outgoing Webhooks')}\n                loading={this.state.loading}\n            >\n                {(filter) => {\n                    const children = this.outgoingWebhooks(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadOutgoingHooksAndProfilesForTeam} from 'actions/integration_actions';\n\nimport InstalledOutgoingWebhook from './installed_outgoing_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_OUTGOING_WEBHOOKS});\n    const outgoingHooks = getOutgoingHooks(state);\n    const outgoingWebhooks = Object.keys(outgoingHooks).\n        map((key) => outgoingHooks[key]).\n        filter((outgoingWebhook) => outgoingWebhook.team_id === teamId);\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n\n    return {\n        outgoingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableOutgoingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadOutgoingHooksAndProfilesForTeam,\n            removeOutgoingHook: Actions.removeOutgoingHook,\n            regenOutgoingHookToken: Actions.regenOutgoingHookToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOutgoingWebhook);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\n\nexport default class AbstractOutgoingWebhook extends React.Component {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The header text to render, has id and defaultMessage\n         */\n        header: PropTypes.object.isRequired,\n\n        /**\n         * The footer text to render, has id and defaultMessage\n         */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n         * The server error text after a failed action\n         */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n         * The hook used to set the initial state\n         */\n        initialHook: PropTypes.object,\n\n        /**\n         * The async function to run when the action button is pressed\n         */\n        action: PropTypes.func.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        let triggerWords = '';\n        if (hook.trigger_words) {\n            let i = 0;\n            for (i = 0; i < hook.trigger_words.length; i++) {\n                triggerWords += hook.trigger_words[i] + '\\n';\n            }\n        }\n\n        let callbackUrls = '';\n        if (hook.callback_urls) {\n            let i = 0;\n            for (i = 0; i < hook.callback_urls.length; i++) {\n                callbackUrls += hook.callback_urls[i] + '\\n';\n            }\n        }\n\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            contentType: hook.content_type || 'application/x-www-form-urlencoded',\n            channelId: hook.channel_id || '',\n            triggerWords,\n            triggerWhen: hook.trigger_when || 0,\n            callbackUrls,\n            saving: false,\n            clientError: null,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        const triggerWords = [];\n        if (this.state.triggerWords) {\n            for (let triggerWord of this.state.triggerWords.split('\\n')) {\n                triggerWord = triggerWord.trim();\n\n                if (triggerWord.length > 0) {\n                    triggerWords.push(triggerWord);\n                }\n            }\n        }\n\n        if (!this.state.channelId && triggerWords.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.triggerWordsOrChannelRequired'\n                        defaultMessage='A valid channel or a list of trigger words is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            team_id: this.props.team.id,\n            channel_id: this.state.channelId,\n            trigger_words: triggerWords,\n            trigger_when: parseInt(this.state.triggerWhen, 10),\n            callback_urls: callbackUrls,\n            display_name: this.state.displayName,\n            content_type: this.state.contentType,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateContentType = (e) => {\n        this.setState({\n            contentType: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateTriggerWords = (e) => {\n        this.setState({\n            triggerWords: e.target.value,\n        });\n    }\n\n    updateTriggerWhen = (e) => {\n        this.setState({\n            triggerWhen: e.target.value,\n        });\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        const contentTypeOption1 = 'application/x-www-form-urlencoded';\n        const contentTypeOption2 = 'application/json';\n\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n        var renderExtra = this.props.renderExtra;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks`}>\n                        <FormattedMessage\n                            id='installed_outgoing_webhooks.header'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the webhook settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='contentType'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.content_Type'\n                                    defaultMessage='Content Type'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.contentType}\n                                    onChange={this.updateContentType}\n                                >\n                                    <option\n                                        value={contentTypeOption1}\n                                    >\n                                        {contentTypeOption1}\n                                    </option>\n                                    <option\n                                        value={contentTypeOption2}\n                                    >\n                                        {contentTypeOption2}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help1'\n                                        defaultMessage='Choose the content type by which the request will be sent.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help2'\n                                        defaultMessage='If application/x-www-form-urlencoded is chosen, the server will encode the parameters in a URL format in the request body.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help3'\n                                        defaultMessage='If application/json is chosen, the server will format the request body as JSON.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.channel.help'\n                                        defaultMessage='Public channel that delivers payload to webhook. Optional if at least one Trigger Word is specified.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWords'\n                                    defaultMessage='Trigger Words (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='triggerWords'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.triggerWords}\n                                    onChange={this.updateTriggerWords}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWords.help'\n                                        defaultMessage='Messages that start with one of the specified words will trigger the outgoing webhook. Optional if Channel is selected.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWordsTriggerWhen'\n                                    defaultMessage='Trigger When'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.triggerWhen}\n                                    onChange={this.updateTriggerWhen}\n                                >\n                                    <option\n                                        value='0'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenFullWord', 'First word matches a trigger word exactly')}\n                                    </option>\n                                    <option\n                                        value='1'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenStartsWith', 'First word starts with a trigger word')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWordsTriggerWhen.help'\n                                        defaultMessage='Choose when to trigger the outgoing webhook; if the first word of a message matches a Trigger Word exactly, or if it starts with a Trigger Word.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.callbackUrls.help'\n                                        defaultMessage='The URL that messages will be sent to. If the URL is private, add it as a {link}.'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://about.vueteams.com/default-allow-internal-connections-settings-documentation/'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_outgoing_webhook.callbackUrls.helpLinkText'\n                                                        defaultMessage='trusted internal connection'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.username.help'\n                                            defaultMessage='Choose the username this integration will post as. Usernames can be up to 22 characters, and may contain lowercase letters, numbers and the symbols \"-\", \"_\", and \".\".'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.icon_url.help'\n                                            defaultMessage='Choose the profile picture this integration will use when posting. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/outgoing_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveWebhook'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_outgoing_webhook.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_outgoing_webhook.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The request state for createOutgoingHook action. Contains status and error\n         */\n        createOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to add a new outgoing webhook\n             */\n            createOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOutgoingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.createOutgoingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=outgoing_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.createOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.createOutgoingHookRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addOutgoingHook}\n                serverError={this.state.serverError}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createOutgoingHook} from 'mattermost-redux/actions/integrations';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddOutgoingWebhook from './add_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    return {\n        createOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOutgoingWebhook);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_outgoing_webhook.update', defaultMessage: 'Update'};\nconst LOADING = {id: 'update_outgoing_webhook.updating', defaultMessage: 'Updating...'};\n\nexport default class EditOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The outgoing webhook to edit\n         */\n        hook: PropTypes.object,\n\n        /**\n         * The id of the outgoing webhook to edit\n         */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n         * The request state for updateOutgoingHook action. Contains status and error\n         */\n        updateOutgoingHookRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to update an outgoing webhook\n             */\n            updateOutgoingHook: PropTypes.func.isRequired,\n\n            /**\n             * The function to call to get an outgoing webhook\n             */\n            getOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHook(this.props.hookId);\n        }\n    }\n\n    editOutgoingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        const triggerWordsSame = (this.props.hook.trigger_words.length === hook.trigger_words.length) &&\n            this.props.hook.trigger_words.every((v, i) => v === hook.trigger_words[i]);\n\n        const callbackUrlsSame = (this.props.hook.callback_urls.length === hook.callback_urls.length) &&\n            this.props.hook.callback_urls.every((v, i) => v === hook.callback_urls[i]);\n\n        if (this.props.hook.content_type !== hook.content_type ||\n            !triggerWordsSame || !callbackUrlsSame) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitHook();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.updateOutgoingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/outgoing_webhooks`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (this.props.updateOutgoingHookRequest.error) {\n            this.setState({serverError: this.props.updateOutgoingHookRequest.error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_outgoing_webhook.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_outgoing_webhook.confirm'\n                defaultMessage='Edit Outgoing Webhook'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_outgoing_webhook.question'\n                defaultMessage='Your changes may break the existing outgoing webhook. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitHook}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editOutgoingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOutgoingHook, updateOutgoingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOutgoingWebhook from './edit_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        hookId,\n        hook: state.entities.integrations.outgoingHooks[hookId],\n        updateOutgoingHookRequest: state.requests.integrations.createOutgoingHook,\n        enableOutgoingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateOutgoingHook,\n            getOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOutgoingWebhook);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport FormError from 'components/form_error.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport CopyText from 'components/copy_text.jsx';\n\nimport DeleteIntegration from '../delete_integration.jsx';\n\nconst FAKE_SECRET = '***************';\n\nexport function matchesFilter(oauthApp, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    return oauthApp.name.toLowerCase().indexOf(filter) !== -1;\n}\n\nexport default class InstalledOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApp data\n        */\n        oauthApp: PropTypes.object.isRequired,\n\n        creatorName: PropTypes.string.isRequired,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Secret link is clicked\n        */\n        onRegenerateSecret: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter OAuthApp\n        */\n        filter: PropTypes.string,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clientSecret: FAKE_SECRET,\n        };\n    }\n\n    handleShowClientSecret = (e) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        this.setState({clientSecret: this.props.oauthApp.client_secret});\n    }\n\n    handleHideClientSecret = (e) => {\n        e.preventDefault();\n        this.setState({clientSecret: FAKE_SECRET});\n    }\n\n    handleRegenerate = (e) => {\n        e.preventDefault();\n        this.props.onRegenerateSecret(this.props.oauthApp.id).then(\n            () => {\n                const {error} = this.props.regenOAuthAppSecretRequest;\n                if (error) {\n                    this.setState({error: error.message});\n                } else {\n                    this.setState({error: null});\n                    this.handleShowClientSecret();\n                }\n            }\n        );\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.oauthApp);\n    }\n\n    render() {\n        const {oauthApp, creatorName} = this.props;\n        let error;\n\n        if (this.state.error) {\n            error = (\n                <FormError\n                    error={this.state.error}\n                />\n            );\n        }\n\n        if (!matchesFilter(oauthApp, this.props.filter)) {\n            return null;\n        }\n\n        let name;\n        if (oauthApp.name) {\n            name = oauthApp.name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_integrations.unnamed_oauth_app'\n                    defaultMessage='Unnamed OAuth 2.0 Application'\n                />\n            );\n        }\n\n        let description;\n        if (oauthApp.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {oauthApp.description}\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let isTrusted;\n        if (oauthApp.is_trusted) {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.yes', 'Yes');\n        } else {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.no', 'No');\n        }\n\n        let showHide;\n        let clientSecret;\n        if (this.state.clientSecret === FAKE_SECRET) {\n            showHide = (\n                <button\n                    id='showSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleShowClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.showSecret'\n                        defaultMessage='Show Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            showHide = (\n                <button\n                    id='hideSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleHideClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.hideSecret'\n                        defaultMessage='Hide Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMarkdownMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={this.state.clientSecret}\n                    />\n                </span>\n            );\n        }\n\n        const regen = (\n            <button\n                id='regenerateSecretButton'\n                className='style--none color--link'\n                onClick={this.handleRegenerate}\n            >\n                <FormattedMessage\n                    id='installed_integrations.regenSecret'\n                    defaultMessage='Regenerate Secret'\n                />\n            </button>\n        );\n\n        let icon;\n        if (oauthApp.icon_url) {\n            icon = (\n                <div className='integration__icon integration-list__icon'>\n                    <img\n                        alt={'get app screenshot'}\n                        src={oauthApp.icon_url}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                {icon}\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <strong className='item-details__name'>\n                            {name}\n                        </strong>\n                    </div>\n                    {error}\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url'>\n                            <FormattedMarkdownMessage\n                                id='installed_oauth_apps.is_trusted'\n                                defaultMessage='Is Trusted: **{isTrusted}**'\n                                values={{\n                                    isTrusted,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMarkdownMessage\n                                id='installed_integrations.client_id'\n                                defaultMessage='Client ID: **{clientId}**'\n                                values={{\n                                    clientId: oauthApp.id,\n                                }}\n                            />\n                            <CopyText\n                                idMessage='integrations.copy_client_id'\n                                defaultMessage='Copy Client Id'\n                                value={oauthApp.id}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        {clientSecret}\n                    </div>\n                    {urls}\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: creatorName,\n                                    createAt: oauthApp.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                <div className='item-actions'>\n                    {showHide}\n                    {' - '}\n                    {regen}\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps/edit?id=${oauthApp.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_oauth_apps.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {getDisplayNameByUser} from 'utils/utils';\n\nimport InstalledOAuthApp from './installed_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const oauthApp = ownProps.oauthApp || {};\n    return {\n        creatorName: getDisplayNameByUser(getUser(state, oauthApp.creator_id)),\n    };\n}\n\nexport default connect(mapStateToProps)(InstalledOAuthApp);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOAuthApp from '../installed_oauth_app';\nimport {matchesFilter} from '../installed_oauth_app/installed_oauth_app';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledOAuthApps extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApps data\n        */\n        oauthApps: PropTypes.object,\n\n        /**\n        * Set if user can manage oath\n        */\n        canManageOauth: PropTypes.bool,\n\n        /**\n        * The request state for regenOAuthAppSecret action. Contains status and error\n        */\n        regenOAuthAppSecretRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch OAuth apps\n            */\n            loadOAuthAppsAndProfiles: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Regenerate Secret link is clicked\n            */\n            regenOAuthAppSecret: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.loadOAuthAppsAndProfiles().then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    deleteOAuthApp = (app) => {\n        if (app && app.id) {\n            this.props.actions.deleteOAuthApp(app.id);\n        }\n    }\n\n    oauthAppCompare(a, b) {\n        let nameA = a.name;\n        if (!nameA) {\n            nameA = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        let nameB = b.name;\n        if (!nameB) {\n            nameB = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    oauthApps = (filter) => Object.values(this.props.oauthApps).\n        filter((app) => matchesFilter(app, filter)).\n        sort(this.oauthAppCompare).\n        map((app) => {\n            return (\n                <InstalledOAuthApp\n                    key={app.id}\n                    team={this.props.team}\n                    oauthApp={app}\n                    regenOAuthAppSecretRequest={this.props.regenOAuthAppSecretRequest}\n                    onRegenerateSecret={this.props.actions.regenOAuthAppSecret}\n                    onDelete={this.deleteOAuthApp}\n                />\n            );\n        });\n\n    render() {\n        const integrationsEnabled = this.props.enableOAuthServiceProvider && this.props.canManageOauth;\n        let props;\n        if (integrationsEnabled) {\n            props = {\n                addLink: '/' + this.props.team.name + '/integrations/oauth2-apps/add',\n                addText: localizeMessage('installed_oauth_apps.add', 'Add OAuth 2.0 Application'),\n                addButtonId: 'addOauthApp',\n            };\n        }\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_oauth_apps.header'\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.help'\n                        defaultMessage='Create {oauthApplications} to securely integrate bots and third-party apps with Vue. Visit the {appDirectory} to find available self-hosted apps.'\n                        values={{\n                            oauthApplications: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://docs.vueteams.com/developer/oauth-2-0-applications.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.oauthApplications'\n                                        defaultMessage='OAuth 2.0 applications'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.vueteams.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                emptyText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.empty'\n                        defaultMessage='No OAuth 2.0 Applications found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_oauth_apps.emptySearch'\n                        defaultMessage='No OAuth 2.0 Applications match {searchTerm}'\n                    />\n                }\n                searchPlaceholder={localizeMessage('installed_oauth_apps.search', 'Search OAuth 2.0 Applications')}\n                loading={this.state.loading}\n                {...props}\n            >\n                {(filter) => {\n                    const children = this.oauthApps(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOAuthApps} from 'mattermost-redux/selectors/entities/integrations';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadOAuthAppsAndProfiles} from 'actions/integration_actions';\n\nimport InstalledOAuthApps from './installed_oauth_apps.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        canManageOauth: haveISystemPermission(state, {permission: Permissions.MANAGE_OAUTH}),\n        oauthApps: getOAuthApps(state),\n        regenOAuthAppSecretRequest: state.requests.integrations.updateOAuthApp,\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadOAuthAppsAndProfiles,\n            regenOAuthAppSecret: Actions.regenOAuthAppSecret,\n            deleteOAuthApp: Actions.deleteOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOAuthApps);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nexport default class AbstractOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp used to set the initial state\n        */\n        initialApp: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.image = new Image();\n        this.image.onload = this.imageLoaded;\n        this.state = this.getStateFromApp(this.props.initialApp || {});\n    }\n\n    getStateFromApp = (app) => {\n        return {\n            name: app.name || '',\n            description: app.description || '',\n            homepage: app.homepage || '',\n            icon_url: app.icon_url || '',\n            callbackUrls: app.callback_urls ? app.callback_urls.join('\\n') : '',\n            is_trusted: app.is_trusted || false,\n            has_icon: Boolean(app.icon_url),\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    imageLoaded = () => {\n        this.setState({\n            has_icon: true,\n            icon_url: this.refs.icon_url.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        if (!this.state.name) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.nameRequired'\n                        defaultMessage='Name for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.description) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.descriptionRequired'\n                        defaultMessage='Description for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.homepage) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.homepageRequired'\n                        defaultMessage='Homepage for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const app = {\n            name: this.state.name,\n            callback_urls: callbackUrls,\n            homepage: this.state.homepage,\n            description: this.state.description,\n            is_trusted: this.state.is_trusted,\n            icon_url: this.state.icon_url,\n        };\n\n        this.props.action(app).then(() => this.setState({saving: false}));\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateTrusted = (e) => {\n        this.setState({\n            is_trusted: e.target.value === 'true',\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateHomepage = (e) => {\n        this.setState({\n            homepage: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            has_icon: false,\n            icon_url: e.target.value,\n        });\n        this.image.src = e.target.value;\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    render() {\n        const headerToRender = this.props.header;\n        const footerToRender = this.props.footer;\n        const renderExtra = this.props.renderExtra;\n\n        let icon;\n        if (this.state.has_icon) {\n            icon = (\n                <div className='integration__icon'>\n                    <img\n                        alt={'integration icon'}\n                        src={this.state.icon_url}\n                    />\n                </div>\n            );\n        }\n\n        const trusted = (\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='is_trusted'\n                    >\n                        <FormattedMessage\n                            id='installed_oauth_apps.trusted'\n                            defaultMessage='Is Trusted'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='true'\n                                name='is_trusted'\n                                checked={this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.yes'\n                                defaultMessage='Yes'\n                            />\n                        </label>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='false'\n                                name='is_trusted'\n                                checked={!this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.no'\n                                defaultMessage='No'\n                            />\n                        </label>\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_oauth_app.trusted.help'\n                                defaultMessage=\"When true, the OAuth 2.0 application is considered trusted by the Vue server and doesn't require the user to accept authorization. When false, an additional window will appear, asking the user to accept or deny the authorization.\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps`}>\n                        <FormattedMessage\n                            id='installed_oauth_apps.header'\n                            defaultMessage='Installed OAuth2 Apps'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    {icon}\n                    <form className='form-horizontal'>\n                        {trusted}\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.name'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.name.help'\n                                        defaultMessage='Display name for your OAuth 2.0 application made of up to 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.description.help'\n                                        defaultMessage='Description for your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='homepage'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.homepage'\n                                    defaultMessage='Homepage'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='homepage'\n                                    type='url'\n                                    maxLength='256'\n                                    className='form-control'\n                                    value={this.state.homepage}\n                                    onChange={this.updateHomepage}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.homepage.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='icon_url'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.iconUrl'\n                                    defaultMessage='Icon URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='icon_url'\n                                    ref='icon_url'\n                                    type='url'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.icon_url}\n                                    onChange={this.updateIconUrl}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.icon.help'\n                                        defaultMessage='The URL for the homepage of the OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL depending on your server configuration.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.callbackUrls.help'\n                                        defaultMessage='The redirect URIs to which the service will redirect users after accepting or denying authorization of your application, and which will handle authorization codes or access tokens. Must be a valid URL and start with http:// or https://.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/oauth2-apps`}\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveOauthApp'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: t('add_oauth_app.header'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('installed_oauth_apps.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('installed_oauth_apps.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The request state for addOAuthApp action. Contains status and error\n        */\n        addOAuthAppRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new OAuthApp\n            */\n            addOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOAuthApp = async (app) => {\n        this.setState({serverError: ''});\n\n        const {data} = await this.props.actions.addOAuthApp(app);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=oauth2-apps&id=${data.id}`);\n            return;\n        }\n\n        if (this.props.addOAuthAppRequest.error) {\n            this.setState({serverError: this.props.addOAuthAppRequest.error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addOAuthApp}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addOAuthApp} from 'mattermost-redux/actions/integrations';\n\nimport AddOAuthApp from './add_oauth_app.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        addOAuthAppRequest: state.requests.integrations.addOAuthApp,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOAuthApp);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\nconst LOADING = {id: 'update_incoming_webhook.updating', defaultMessage: 'Updating...'};\n\nexport default class EditOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the OAuthApp to edit\n        */\n        oauthAppId: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp data\n        */\n        oauthApp: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to get OAuthApp\n            */\n            getOAuthApp: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit OAuthApp\n            */\n            editOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApp(this.props.oauthAppId);\n        }\n    }\n\n    editOAuthApp = async (app) => {\n        this.newApp = app;\n\n        if (this.props.oauthApp.id) {\n            app.id = this.props.oauthApp.id;\n        }\n\n        if (this.props.oauthApp.token) {\n            app.token = this.props.oauthApp.token;\n        }\n\n        const callbackUrlsSame = (this.props.oauthApp.callback_urls.length === app.callback_urls.length) &&\n            this.props.oauthApp.callback_urls.every((v, i) => v === app.callback_urls[i]);\n\n        if (callbackUrlsSame === false) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitOAuthApp();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitOAuthApp = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editOAuthApp(this.newApp);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/oauth2-apps`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_oauth_app.confirm'\n                defaultMessage='Edit OAuth 2.0 application'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_oauth_app.question'\n                defaultMessage='Your changes may break the existing OAuth 2.0 application. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitOAuthApp}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.oauthApp) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editOAuthApp}\n                serverError={this.state.serverError}\n                initialApp={this.props.oauthApp}\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOAuthApp, editOAuthApp} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOAuthApp from './edit_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const oauthAppId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        oauthAppId,\n        oauthApp: state.entities.integrations.oauthApps[oauthAppId],\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApp,\n            editOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOAuthApp);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from '../copy_text.jsx';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(command, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    return command.display_name.toLowerCase().indexOf(filter) !== -1 ||\n        command.description.toLowerCase().indexOf(filter) !== -1 ||\n        command.trigger.toLowerCase().indexOf(filter) !== -1;\n}\n\nexport default class InstalledCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * Installed slash command to display\n        */\n        command: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Token link is clicked\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter command, comes from BackstageList\n        */\n        filter: PropTypes.string,\n\n        /**\n        * The creator user data\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        * Set to show edit link\n        */\n        canChange: PropTypes.bool.isRequired,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.command);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.command);\n    }\n\n    render() {\n        const command = this.props.command;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!matchesFilter(command, filter)) {\n            return null;\n        }\n\n        let name;\n\n        if (command.display_name) {\n            name = command.display_name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_commands.unnamed_command'\n                    defaultMessage='Unnamed Slash Command'\n                />\n            );\n        }\n\n        let description = null;\n        if (command.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {command.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let trigger = '- /' + command.trigger;\n        if (command.auto_complete && command.auto_complete_hint) {\n            trigger += ' ' + command.auto_complete_hint;\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regenerate Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/commands/edit?id=${command.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_commands.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const commandToken = command.token;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row'>\n                        <strong className='item-details__name'>\n                            {name}\n                        </strong>\n                        <span className='item-details__trigger'>\n                            {trigger}\n                        </span>\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: commandToken,\n                                }}\n                            />\n                            <CopyText\n                                value={commandToken}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: command.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n                {actions}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledCommand, {matchesFilter} from '../installed_command.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledCommands extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team object\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user object\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Set whether to show the loading... animation or not\n        */\n        loading: PropTypes.bool,\n\n        /**\n        * Set to allow changes to installed slash commands\n        */\n        canManageOthersSlashCommands: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call when Regenerate Token link is clicked\n            */\n            regenCommandToken: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    regenCommandToken = (command) => {\n        this.props.actions.regenCommandToken(command.id);\n    }\n\n    deleteCommand = (command) => {\n        this.props.actions.deleteCommand(command.id);\n    }\n\n    commandCompare(a, b) {\n        let nameA = a.display_name;\n        if (!nameA) {\n            nameA = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        let nameB = b.display_name;\n        if (!nameB) {\n            nameB = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const commands = (filter) => this.props.commands.\n            filter((command) => command.team_id === this.props.team.id).\n            filter((command) => matchesFilter(command, filter)).\n            sort(this.commandCompare).map((command) => {\n                const canChange = this.props.canManageOthersSlashCommands || this.props.user.id === command.creator_id;\n\n                return (\n                    <InstalledCommand\n                        key={command.id}\n                        team={this.props.team}\n                        command={command}\n                        onRegenToken={this.regenCommandToken}\n                        onDelete={this.deleteCommand}\n                        creator={this.props.users[command.creator_id] || {}}\n                        canChange={canChange}\n                    />\n                );\n            });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_commands.header'\n                        defaultMessage='Installed Slash Commands'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_commands.add'\n                        defaultMessage='Add Slash Command'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/commands/add'}\n                addButtonId='addSlashCommand'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_commands.empty'\n                        defaultMessage='No slash commands found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_commands.emptySearch'\n                        defaultMessage='No slash commands match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_commands.help'\n                        defaultMessage='Use slash commands to connect external tools to Vue. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs..vueteams.com/developer/slash-commands.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.vueteams.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_commands.search', 'Search Slash Commands')}\n                loading={this.props.loading}\n            >\n                {(filter) => {\n                    const children = commands(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {deleteCommand, regenCommandToken} from 'mattermost-redux/actions/integrations';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport InstalledCommands from './installed_commands.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const canManageOthersSlashCommands = haveITeamPermission(state, {team: ownProps.team.id, permission: Permissions.MANAGE_OTHERS_SLASH_COMMANDS});\n\n    return {\n        canManageOthersSlashCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            regenCommandToken,\n            deleteCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledCommands);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport FormError from 'components/form_error.jsx';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nconst REQUEST_POST = 'P';\nconst REQUEST_GET = 'G';\n\nexport default class AbstractCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The Command used to set the initial state\n        */\n        initialCommand: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromCommand(this.props.initialCommand || {});\n    }\n\n    getStateFromCommand = (command) => {\n        return {\n            displayName: command.display_name || '',\n            description: command.description || '',\n            trigger: command.trigger || '',\n            url: command.url || '',\n            method: command.method || REQUEST_POST,\n            username: command.username || '',\n            iconUrl: command.icon_url || '',\n            autocomplete: command.auto_complete || false,\n            autocompleteHint: command.auto_complete_hint || '',\n            autocompleteDescription: command.auto_complete_desc || '',\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        let triggerWord = this.state.trigger.trim().toLowerCase();\n        if (triggerWord.indexOf('/') === 0) {\n            triggerWord = triggerWord.substr(1);\n        }\n\n        const command = {\n            display_name: this.state.displayName,\n            description: this.state.description,\n            trigger: triggerWord,\n            url: this.state.url.trim(),\n            method: this.state.method,\n            username: this.state.username,\n            icon_url: this.state.iconUrl,\n            auto_complete: this.state.autocomplete,\n            team_id: this.props.team.id,\n        };\n\n        if (command.auto_complete) {\n            command.auto_complete_desc = this.state.autocompleteDescription;\n            command.auto_complete_hint = this.state.autocompleteHint;\n        }\n\n        if (!command.trigger) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerRequired'\n                        defaultMessage='A trigger word is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf('/') === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSlash'\n                        defaultMessage='A trigger word cannot begin with a /'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf(' ') !== -1) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSpace'\n                        defaultMessage='A trigger word must not contain spaces'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH ||\n            command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidLength'\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\n                        values={{\n                            min: Constants.MIN_TRIGGER_LENGTH,\n                            max: Constants.MAX_TRIGGER_LENGTH,\n                        }}\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!command.url) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.urlRequired'\n                        defaultMessage='A request URL is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        this.props.action(command).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateTrigger = (e) => {\n        this.setState({\n            trigger: e.target.value,\n        });\n    }\n\n    updateUrl = (e) => {\n        this.setState({\n            url: e.target.value,\n        });\n    }\n\n    updateMethod = (e) => {\n        this.setState({\n            method: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            iconUrl: e.target.value,\n        });\n    }\n\n    updateAutocomplete = (e) => {\n        this.setState({\n            autocomplete: e.target.checked,\n        });\n    }\n\n    updateAutocompleteHint = (e) => {\n        this.setState({\n            autocompleteHint: e.target.value,\n        });\n    }\n\n    updateAutocompleteDescription = (e) => {\n        this.setState({\n            autocompleteDescription: e.target.value,\n        });\n    }\n\n    render() {\n        let autocompleteHint = null;\n        let autocompleteDescription = null;\n\n        if (this.state.autocomplete) {\n            autocompleteHint = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteHint'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteHint'\n                            defaultMessage='Autocomplete Hint'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <LocalizedInput\n                            id='autocompleteHint'\n                            type='text'\n                            maxLength='1024'\n                            className='form-control'\n                            value={this.state.autocompleteHint}\n                            onChange={this.updateAutocompleteHint}\n                            placeholder={{id: t('add_command.autocompleteHint.placeholder'), defaultMessage: 'Example: [Patient Name]'}}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteHint.help'\n                                defaultMessage='(Optional) Arguments associated with your slash command, displayed as help in the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n\n            autocompleteDescription = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteDescription'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteDescription'\n                            defaultMessage='Autocomplete Description'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <LocalizedInput\n                            id='description'\n                            type='text'\n                            maxLength='128'\n                            className='form-control'\n                            value={this.state.autocompleteDescription}\n                            onChange={this.updateAutocompleteDescription}\n                            placeholder={{id: t('add_command.autocompleteDescription.placeholder'), defaultMessage: 'Example: \"Returns search results for patient records\"'}}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteDescription.help'\n                                defaultMessage='(Optional) Short description of slash command for the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\n                        <FormattedMessage\n                            id='installed_command.header'\n                            defaultMessage='Slash Commands'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={this.props.header.id}\n                        defaultMessage={this.props.header.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_command.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.displayName.help'\n                                        defaultMessage='Choose a title to be displayed on the slash command settings page. Maximum 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_command.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='trigger'\n                            >\n                                <FormattedMessage\n                                    id='add_command.trigger'\n                                    defaultMessage='Command Trigger Word'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='trigger'\n                                    type='text'\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\n                                    className='form-control'\n                                    value={this.state.trigger}\n                                    onChange={this.updateTrigger}\n                                    placeholder={{id: t('add_command.trigger.placeholder'), defaultMessage: 'Command trigger e.g. \"hello\" not including the slash'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.help'\n                                        defaultMessage='Trigger word must be unique, and cannot begin with a slash or contain any spaces.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpExamples'\n                                        defaultMessage='Examples: client, employee, patient, weather'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpReserved'\n                                        defaultMessage='Reserved: {link}'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://docs.vueteams.com/help/messaging/executing-commands.html#built-in-commands'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_command.trigger.helpReservedLinkText'\n                                                        defaultMessage='see list of built-in slash commands'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='url'\n                            >\n                                <FormattedMessage\n                                    id='add_command.url'\n                                    defaultMessage='Request URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='url'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.url}\n                                    onChange={this.updateUrl}\n                                    placeholder={{id: t('add_command.url.placeholder'), defaultMessage: 'Must start with http:// or https://'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.url.help'\n                                        defaultMessage='The callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='method'\n                            >\n                                <FormattedMessage\n                                    id='add_command.method'\n                                    defaultMessage='Request Method'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    id='method'\n                                    className='form-control'\n                                    value={this.state.method}\n                                    onChange={this.updateMethod}\n                                >\n                                    <option value={REQUEST_POST}>\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\n                                    </option>\n                                    <option value={REQUEST_GET}>\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.method.help'\n                                        defaultMessage='The type of command request issued to the Request URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='add_command.username'\n                                    defaultMessage='Response Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='username'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                    placeholder={{id: t('add_command.username.placeholder'), defaultMessage: 'Username'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.username.help'\n                                        defaultMessage='(Optional) Choose a username override for responses for this slash command. Usernames can consist of up to 22 characters consisting of lowercase letters, numbers and they symbols \"-\", \"_\", and \".\" .'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='iconUrl'\n                            >\n                                <FormattedMessage\n                                    id='add_command.iconUrl'\n                                    defaultMessage='Response Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='iconUrl'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.iconUrl}\n                                    onChange={this.updateIconUrl}\n                                    placeholder={{id: t('add_command.iconUrl.placeholder'), defaultMessage: 'https://www.example.com/myicon.png'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.iconUrl.help'\n                                        defaultMessage='(Optional) Choose a profile picture override for the post responses to this slash command. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='autocomplete'\n                            >\n                                <FormattedMessage\n                                    id='add_command.autocomplete'\n                                    defaultMessage='Autocomplete'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='autocomplete'\n                                    type='checkbox'\n                                    checked={this.state.autocomplete}\n                                    onChange={this.updateAutocomplete}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.autocomplete.help'\n                                        defaultMessage='(Optional) Show slash command in autocomplete list.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {autocompleteHint}\n                        {autocompleteDescription}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={'/' + this.props.team.name + '/integrations/commands'}\n                            >\n                                <FormattedMessage\n                                    id='add_command.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={Utils.localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveCommand'\n                            >\n                                <FormattedMessage\n                                    id={this.props.footer.id}\n                                    defaultMessage={this.props.footer.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {this.props.renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_command.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_command.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new command\n            */\n            addCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addCommand = async (command) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addCommand(command);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands/confirm?type=commands&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addCommand}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addCommand} from 'mattermost-redux/actions/integrations';\n\nimport AddCommand from './add_command.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddCommand);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport ConfirmModal from 'components/confirm_modal.jsx';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('edit_command.update'), defaultMessage: 'Update'};\nconst LOADING = {id: t('edit_command.updating'), defaultMessage: 'Updating...'};\n\nexport default class EditCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the command to edit\n        */\n        commandId: PropTypes.string.isRequired,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit command\n            */\n            editCommand: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            originalCommand: null,\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => {\n                    this.setState({\n                        originalCommand: Object.values(this.props.commands).filter((command) => command.id === this.props.commandId)[0],\n                    });\n                }\n            );\n        }\n    }\n\n    editCommand = async (command) => {\n        this.newCommand = command;\n\n        if (this.state.originalCommand.id) {\n            command.id = this.state.originalCommand.id;\n        }\n\n        if (this.state.originalCommand.url !== this.newCommand.url ||\n            this.state.originalCommand.trigger !== this.newCommand.trigger ||\n            this.state.originalCommand.method !== this.newCommand.method) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitCommand();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitCommand = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editCommand(this.newCommand);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_command.confirm'\n                defaultMessage='Edit Slash Command'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_command.question'\n                defaultMessage='Your changes may break the existing slash command. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitCommand}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.state.originalCommand) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editCommand}\n                serverError={this.state.serverError}\n                initialCommand={this.state.originalCommand}\n            />\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {editCommand, getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditCommand from './edit_command.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const commandId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commandId,\n        commands: getCommands(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n            editCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCommand);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCommands, getOAuthApps, getIncomingHooks, getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\n\nimport ConfirmIntegration from './confirm_integration.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        commands: getCommands(state),\n        oauthApps: getOAuthApps(state),\n        incomingHooks: getIncomingHooks(state),\n        outgoingHooks: getOutgoingHooks(state),\n        bots: getBotAccounts(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ConfirmIntegration);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {Constants, ErrorPageTypes} from 'utils/constants.jsx';\nimport CopyText from 'components/copy_text.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {getSiteURL} from 'utils/url.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class ConfirmIntegration extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            location: PropTypes.object,\n            commands: PropTypes.object,\n            oauthApps: PropTypes.object,\n            incomingHooks: PropTypes.object,\n            outgoingHooks: PropTypes.object,\n            bots: PropTypes.object,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (new URLSearchParams(this.props.location.search)).get('type'),\n            id: (new URLSearchParams(this.props.location.search)).get('id'),\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('keypress', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n        }\n    }\n\n    render() {\n        let headerText = null;\n        let helpText = null;\n        let tokenText = null;\n\n        const command = this.props.commands[this.state.id];\n        const incomingHook = this.props.incomingHooks[this.state.id];\n        const outgoingHook = this.props.outgoingHooks[this.state.id];\n        const oauthApp = this.props.oauthApps[this.state.id];\n        const bot = this.props.bots[this.state.id];\n\n        if (this.state.type === Constants.Integrations.COMMAND && command) {\n            const commandToken = command.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_commands.header'}\n                    defaultMessage='Slash Commands'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_command.doneHelp'\n                        defaultMessage='Your slash command has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Vue team (see [documentation](!https://docs.vueteams.com/developer/slash-commands.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_command.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: commandToken,\n                        }}\n                    />\n                    <CopyText\n                        value={commandToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK && incomingHook) {\n            const incomingHookToken = getSiteURL() + '/hooks/' + incomingHook.id;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_incoming_webhooks.header'}\n                    defaultMessage='Incoming Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.doneHelp'\n                        defaultMessage='Your incoming webhook has been set up. Please send data to the following URL (see [documentation](!https://docs.vueteams.com/developer/webhooks-incoming.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.url'\n                        defaultMessage='**URL**: {url}'\n                        values={{\n                            url: '`' + incomingHookToken + '`',\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={incomingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK && outgoingHook) {\n            const outgoingHookToken = outgoingHook.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_outgoing_webhooks.header'}\n                    defaultMessage='Outgoing Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.doneHelp'\n                        defaultMessage='Your outgoing webhook has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Vue team (see [documentation](!https://docs.vueteams.com/developer/webhooks-outgoing.html) for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: outgoingHookToken,\n                        }}\n                    />\n                    <CopyText\n                        value={outgoingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP && oauthApp) {\n            const oauthAppToken = oauthApp.id;\n            const oauthAppSecret = oauthApp.client_secret;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_oauth_apps.header'}\n                    defaultMessage='OAuth 2.0 Applications'\n                />\n            );\n\n            helpText = [];\n            helpText.push(\n                <p key='add_oauth_app.doneHelp'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.doneHelp'\n                        defaultMessage='Your OAuth 2.0 application has been set up. Please use the following Client ID and Client Secret when requesting authorization for your application (see [documentation](!https://docs.vueteams.com/developer/oauth-2-0-applications.html) for further details).'\n                    />\n                </p>\n            );\n            helpText.push(\n                <p key='add_oauth_app.clientId'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientId'\n                        defaultMessage='**Client ID**: {id}'\n                        values={{\n                            id: oauthAppToken,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_id'\n                        defaultMessage='Copy Client Id'\n                        value={oauthAppToken}\n                    />\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientSecret'\n                        defaultMessage='**Client Secret**: {secret}'\n                        values={{\n                            secret: oauthAppSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={oauthAppSecret}\n                    />\n                </p>\n            );\n\n            helpText.push(\n                <p key='add_oauth_app.doneUrlHelp'>\n                    <FormattedMessage\n                        id='add_oauth_app.doneUrlHelp'\n                        defaultMessage='The following are your authorized redirect URL(s).'\n                    />\n                </p>\n            );\n\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.url'\n                        defaultMessage='**URL(s)**: {url}'\n                        values={{\n                            url: oauthApp.callback_urls,\n                        }}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.BOT && bot) {\n            const botToken = (new URLSearchParams(this.props.location.search)).get('token');\n\n            headerText = (\n                <FormattedMessage\n                    id='bots.manage.header'\n                    defaultMessage='Bot Accounts'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='bots.manage.created.text'\n                        defaultMessage='Your bot account **{botname}** has been created successfully. Please use the following access token to connect to the bot (see [documentation](https://mattermost.com/pl/default-bot-accounts) for further details).'\n                        values={{\n                            botname: bot.display_name || bot.username,\n                        }}\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: botToken,\n                        }}\n                    />\n                    <CopyText\n                        value={botToken}\n                    />\n                    <br/>\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token.message'\n                        defaultMessage='Make sure to add this bot account to teams and channels you want it to interact in. See [documentation](https://mattermost.com/pl/default-bot-accounts) to learn more.'\n                    />\n                </p>\n            );\n        } else {\n            browserHistory.replace(`/error?type=${ErrorPageTypes.PAGE_NOT_FOUND}`);\n            return '';\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\n                        {headerText}\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form backstage-form__confirmation'>\n                    <h4\n                        className='backstage-form__title'\n                        id='formTitle'\n                    >\n                        <FormattedMessage\n                            id='integrations.successful'\n                            defaultMessage='Setup Successful'\n                        />\n                    </h4>\n                    {helpText}\n                    {tokenText}\n                    <div className='backstage-form__footer'>\n                        <Link\n                            className='btn btn-primary'\n                            type='submit'\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\n                            id='doneButton'\n                        >\n                            <FormattedMessage\n                                id='integrations.done'\n                                defaultMessage='Done'\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport InstalledCommands from 'components/integrations/installed_commands';\nimport AddCommand from 'components/integrations/add_command';\nimport EditCommand from 'components/integrations/edit_command';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nconst CommandRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class CommandsContainer extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data needed to pass into child components\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user data needed to pass into child components\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Object from react-router\n        */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            loadCommandsAndProfilesForTeam: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.loadCommandsAndProfilesForTeam(this.props.team.id).then(\n                () => this.setState({loading: false})\n            );\n        }\n    }\n\n    render() {\n        const extraProps = {\n            loading: this.state.loading,\n            commands: this.props.commands || [],\n            users: this.props.users,\n            team: this.props.team,\n            user: this.props.user,\n        };\n        return (\n            <div>\n                <Switch>\n                    <Route\n                        exact={true}\n                        path={`${this.props.match.url}/`}\n                        render={() => (<Redirect to={`${this.props.match.url}/installed`}/>)}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/installed`}\n                        component={InstalledCommands}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/add`}\n                        component={AddCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/edit`}\n                        component={EditCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/confirm`}\n                        component={ConfirmIntegration}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadCommandsAndProfilesForTeam} from 'actions/integration_actions';\n\nimport CommandsContainer from './commands_container.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commands: Object.values(getCommands(state)),\n        users: getUsers(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadCommandsAndProfilesForTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandsContainer);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, NavLink} from 'react-router-dom';\n\nexport default class BackstageCategory extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            parentLink: PropTypes.string,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    render() {\n        const {name, title, icon, parentLink, children} = this.props;\n\n        const link = parentLink + '/' + name;\n\n        return (\n            <li className='backstage-sidebar__category'>\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title--active'\n                >\n                    <i className={'fa ' + icon}/>\n                    <span className='category-title__text'>\n                        {title}\n                    </span>\n                </NavLink>\n                {\n                    children && children.length > 0 &&\n                    <Route\n                        path={link}\n                        render={() => (\n                            <ul className='sections'>\n                                {\n                                    React.Children.map(children, (child) => {\n                                        if (!child) {\n                                            return child;\n                                        }\n\n                                        return React.cloneElement(child, {\n                                            parentLink: link,\n                                        });\n                                    })\n                                }\n                            </ul>\n                        )}\n                    />\n                }\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class BackstageSection extends React.Component {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.arrayOf(PropTypes.element),\n            id: PropTypes.string,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const {title, subsection, children} = this.props;\n\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (children.length > 0) {\n            clonedChildren = (\n                <ul className='subsections'>\n                    {\n                        React.Children.map(children, (child) => {\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'section';\n        if (subsection) {\n            className = 'subsection';\n        }\n\n        return (\n            <li\n                className={className}\n                id={this.props.id}\n            >\n                <NavLink\n                    className={`${className}-title`}\n                    activeClassName={`${className}-title--active`}\n                    to={link}\n                >\n                    <span className={`${className}-title__text`}>\n                        {title}\n                    </span>\n                </NavLink>\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport BackstageCategory from './backstage_category.jsx';\nimport BackstageSection from './backstage_section.jsx';\n\nexport default class BackstageSidebar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            user: PropTypes.object.isRequired,\n            enableCustomEmoji: PropTypes.bool.isRequired,\n            enableIncomingWebhooks: PropTypes.bool.isRequired,\n            enableOutgoingWebhooks: PropTypes.bool.isRequired,\n            enableCommands: PropTypes.bool.isRequired,\n            enableOAuthServiceProvider: PropTypes.bool.isRequired,\n            canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\n        };\n    }\n\n    renderCustomEmoji() {\n        if (!this.props.enableCustomEmoji || !this.props.canCreateOrDeleteCustomEmoji) {\n            return null;\n        }\n\n        return (\n            <BackstageCategory\n                name='emoji'\n                parentLink={'/' + this.props.team.name}\n                icon='fa-smile-o'\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                }\n            />\n        );\n    }\n\n    renderIntegrations() {\n        let incomingWebhooks = null;\n        if (this.props.enableIncomingWebhooks) {\n            incomingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='incoming_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.incoming_webhooks'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        )}\n                        id='incomingWebhooks'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let outgoingWebhooks = null;\n        if (this.props.enableOutgoingWebhooks) {\n            outgoingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='outgoing_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.outgoing_webhooks'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        )}\n                        id='outgoingWebhooks'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let commands = null;\n        if (this.props.enableCommands) {\n            commands = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='commands'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.commands'\n                                defaultMessage='Slash Commands'\n                            />\n                        )}\n                        id='slashCommands'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let oauthApps = null;\n        if (this.props.enableOAuthServiceProvider) {\n            oauthApps = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_OAUTH]}>\n                    <BackstageSection\n                        name='oauth2-apps'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.oauthApps'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        id='oauthApps'\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        const botAccounts = (\n            <SystemPermissionGate permissions={['manage_bots']}>\n                <BackstageSection\n                    name='bots'\n                    parentLink={'/' + this.props.team.name + '/integrations'}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.bots'\n                            defaultMessage='Bot Accounts'\n                        />\n                    }\n                    id='botAccounts'\n                />\n            </SystemPermissionGate>\n        );\n\n        return (\n            <TeamPermissionGate\n                permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS, Permissions.MANAGE_OUTGOING_WEBHOOKS, Permissions.MANAGE_SLASH_COMMANDS, Permissions.MANAGE_OAUTH]}\n                teamId={this.props.team.id}\n            >\n                <BackstageCategory\n                    name='integrations'\n                    icon='fa-link'\n                    parentLink={'/' + this.props.team.name}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.integrations'\n                            defaultMessage='Integrations'\n                        />\n                    }\n                >\n                    {incomingWebhooks}\n                    {outgoingWebhooks}\n                    {commands}\n                    {oauthApps}\n                    {botAccounts}\n                </BackstageCategory>\n            </TeamPermissionGate>\n        );\n    }\n\n    render() {\n        return (\n            <div className='backstage-sidebar'>\n                <ul>\n                    {this.renderCustomEmoji()}\n                    {this.renderIntegrations()}\n                </ul>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackIcon from 'components/widgets/icons/fa_back_icon';\n\nexport default class BackstageNavbar extends React.Component {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            siteName: PropTypes.string,\n        };\n    }\n\n    render() {\n        if (!this.props.team) {\n            return null;\n        }\n\n        return (\n            <div className='backstage-navbar'>\n                <Link\n                    className='backstage-navbar__back'\n                    to={`/${this.props.team.name}`}\n                >\n                    <BackIcon/>\n                    <span>\n                        <FormattedMessage\n                            id='backstage_navbar.backToMattermost'\n                            defaultMessage='Back to {siteName}'\n                            values={{\n                                siteName: this.props.siteName,\n                            }}\n                        />\n                    </span>\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Bots from 'components/integrations/bots';\nimport AddBot from 'components/integrations/bots/add_bot';\n\nimport Pluggable from 'plugins/pluggable';\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport Integrations from 'components/integrations';\nimport Emoji from 'components/emoji';\nimport AddEmoji from 'components/emoji/add_emoji';\nimport InstalledIncomingWebhooks from 'components/integrations/installed_incoming_webhooks';\nimport AddIncomingWehook from 'components/integrations/add_incoming_webhook';\nimport EditIncomingWebhook from 'components/integrations/edit_incoming_webhook';\nimport InstalledOutgoingWebhooks from 'components/integrations/installed_outgoing_webhooks';\nimport AddOutgoingWebhook from 'components/integrations/add_outgoing_webhook';\nimport EditOutgoingWebhook from 'components/integrations/edit_outgoing_webhook';\nimport InstalledOauthApps from 'components/integrations/installed_oauth_apps';\nimport AddOauthApp from 'components/integrations/add_oauth_app';\nimport EditOauthApp from 'components/integrations/edit_oauth_app';\nimport CommandsContainer from 'components/integrations/commands_container';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nimport BackstageSidebar from './components/backstage_sidebar.jsx';\nimport BackstageNavbar from './components/backstage_navbar';\n\nconst BackstageRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class BackstageController extends React.Component {\n    static propTypes = {\n\n        /**\n         * Current user.\n         */\n        user: PropTypes.object,\n\n        /**\n         * Current team.\n         */\n        team: PropTypes.object,\n\n        /**\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        siteName: PropTypes.string,\n        enableCustomEmoji: PropTypes.bool.isRequired,\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\n        enableCommands: PropTypes.bool.isRequired,\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\n        canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\n    }\n\n    scrollToTop = () => {\n        if (this.listRef) {\n            this.listRef.scrollTop = 0;\n        }\n    }\n\n    setListRef = (ref) => {\n        this.listRef = ref;\n    }\n\n    render() {\n        if (this.props.team == null || this.props.user == null) {\n            return <div/>;\n        }\n        const extraProps = {\n            team: this.props.team,\n            user: this.props.user,\n            scrollToTop: this.scrollToTop,\n        };\n        return (\n            <div className='backstage'>\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <BackstageNavbar\n                    team={this.props.team}\n                    siteName={this.props.siteName}\n                />\n                <Pluggable pluggableName='Root'/>\n                <div\n                    className='backstage-body'\n                    ref={this.setListRef}\n                >\n                    <BackstageSidebar\n                        team={this.props.team}\n                        user={this.props.user}\n                        enableCustomEmoji={this.props.enableCustomEmoji}\n                        enableIncomingWebhooks={this.props.enableIncomingWebhooks}\n                        enableOutgoingWebhooks={this.props.enableOutgoingWebhooks}\n                        enableCommands={this.props.enableCommands}\n                        enableOAuthServiceProvider={this.props.enableOAuthServiceProvider}\n                        canCreateOrDeleteCustomEmoji={this.props.canCreateOrDeleteCustomEmoji}\n                    />\n                    <Switch>\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/integrations'}\n                            component={Integrations}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/incoming_webhooks`}\n                            component={InstalledIncomingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/add`}\n                            component={AddIncomingWehook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/edit`}\n                            component={EditIncomingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/outgoing_webhooks`}\n                            component={InstalledOutgoingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/add`}\n                            component={AddOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/edit`}\n                            component={EditOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/commands`}\n                            component={CommandsContainer}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/oauth2-apps`}\n                            component={InstalledOauthApps}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/add`}\n                            component={AddOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/edit`}\n                            component={EditOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/confirm`}\n                            component={ConfirmIntegration}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/emoji'}\n                            component={Emoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/add`}\n                            component={AddEmoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots/add`}\n                            component={AddBot}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots/edit`}\n                            component={AddBot}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots`}\n                            component={Bots}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getMyTeams, getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageController from './backstage_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const user = getCurrentUser(state);\n    const team = getCurrentTeam(state);\n\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    let canCreateOrDeleteCustomEmoji = (haveISystemPermission(state, {permission: Permissions.CREATE_EMOJIS}) || haveISystemPermission(state, {permission: Permissions.DELETE_EMOJIS}));\n    if (!canCreateOrDeleteCustomEmoji) {\n        for (const t of getMyTeams(state)) {\n            if (haveITeamPermission(state, {team: t.id, permission: Permissions.CREATE_EMOJIS}) || haveITeamPermission(state, {team: t.id, permission: Permissions.DELETE_EMOJIS})) {\n                canCreateOrDeleteCustomEmoji = true;\n                break;\n            }\n        }\n    }\n\n    return {\n        user,\n        team,\n        siteName,\n        enableCustomEmoji,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        canCreateOrDeleteCustomEmoji,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(BackstageController));\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class NextIcon extends React.PureComponent {\n    static propTypes = {\n        additionalClassName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        additionalClassName: null,\n    };\n\n    render() {\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <FormattedMessage\n                id='generic_icons.next'\n                defaultMessage='Next Icon'\n            >\n                {(title) => (\n                    <i\n                        className={className}\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nexport default class PreviousIcon extends React.PureComponent {\n    static propTypes = {\n        additionalClassName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        additionalClassName: null,\n    };\n\n    render() {\n        const className = 'fa fa-1x fa-angle-left' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <FormattedMessage\n                id='generic_icons.previous'\n                defaultMessage='Previous Icon'\n            >\n                {(title) => (\n                    <i\n                        className={className}\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIncomingHooks = getIncomingHooks;\nexports.getOutgoingHooks = getOutgoingHooks;\nexports.getCommands = getCommands;\nexports.getOAuthApps = getOAuthApps;\nexports.getSystemCommands = getSystemCommands;\nexports.getAutocompleteCommandsList = exports.getAllCommands = exports.getOutgoingHooksInCurrentTeam = void 0;\n\nvar _reselect = require(\"reselect\");\n\nvar _teams = require(\"./teams\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction getIncomingHooks(state) {\n  return state.entities.integrations.incomingHooks;\n}\n\nfunction getOutgoingHooks(state) {\n  return state.entities.integrations.outgoingHooks;\n}\n\nfunction getCommands(state) {\n  return state.entities.integrations.commands;\n}\n\nfunction getOAuthApps(state) {\n  return state.entities.integrations.oauthApps;\n}\n\nfunction getSystemCommands(state) {\n  return state.entities.integrations.systemCommands;\n}\n/**\n * get outgoing hooks in current team\n */\n\n\nconst getOutgoingHooksInCurrentTeam = (0, _reselect.createSelector)(_teams.getCurrentTeamId, getOutgoingHooks, (teamId, hooks) => {\n  return Object.values(hooks).filter(o => o.teamId === teamId);\n});\nexports.getOutgoingHooksInCurrentTeam = getOutgoingHooksInCurrentTeam;\nconst getAllCommands = (0, _reselect.createSelector)(getCommands, getSystemCommands, (commands, systemCommands) => {\n  return _objectSpread({}, commands, {}, systemCommands);\n});\nexports.getAllCommands = getAllCommands;\nconst getAutocompleteCommandsList = (0, _reselect.createSelector)(getAllCommands, _teams.getCurrentTeamId, (commands, currentTeamId) => {\n  return Object.values(commands).filter(command => {\n    return command && (!command.team_id || command.team_id === currentTeamId) && command.auto_complete;\n  }).sort((a, b) => a.display_name.localeCompare(b.display_name));\n});\nexports.getAutocompleteCommandsList = getAutocompleteCommandsList;"],"sourceRoot":""}