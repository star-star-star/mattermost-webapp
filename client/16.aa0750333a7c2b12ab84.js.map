{"version":3,"sources":["webpack:///./components/do_verify_email/do_verify_email.jsx","webpack:///./components/do_verify_email/index.js","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png"],"names":["DoVerifyEmail","React","PureComponent","constructor","props","super","_defineProperty","this","async","actions","verifyUserEmail","verify","URLSearchParams","location","search","get","data","handleSuccess","error","handleError","VerifyEmailErrors","FAILED_EMAIL_VERIFICATION","state","verifyStatus","serverError","UNSAFE_componentWillMount","verifyEmail","handleRedirect","isLoggedIn","GlobalActions","browserHistory","push","encodeURIComponent","setState","clearErrors","logError","message","AnnouncementBarMessages","EMAIL_VERIFIED","type","AnnouncementBarTypes","SUCCESS","trackEvent","getMe","then","err","FAILED_USER_STATE_GET","react_default","a","createElement","index_es","id","defaultMessage","render","loading_screen","className","back_button","alt","src","logoImage","siteName","PropTypes","object","isRequired","string","shape","func","user","email_verified","bool","defaultProps","connect","getConfig","SiteName","Boolean","getCurrentUserId","getCurrentUser","dispatch","bindActionCreators","BackButton","react__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","onClick","to","url","react_intl__WEBPACK_IMPORTED_MODULE_2__","title","module","exports","__webpack_require__","p"],"mappings":"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","file":"16.aa0750333a7c2b12ab84.js","sourcesContent":["// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport {browserHistory} from 'utils/browser_history';\nimport {AnnouncementBarTypes, AnnouncementBarMessages, VerifyEmailErrors} from 'utils/constants.jsx';\nimport logoImage from 'images/logo.png';\nimport BackButton from 'components/common/back_button.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\n\nexport default class DoVerifyEmail extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Object with validation parameters given in link\n         */\n        location: PropTypes.object.isRequired,\n\n        /**\n         * Title of the app or site.\n         */\n        siteName: PropTypes.string,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to verify the user's email\n             */\n            verifyUserEmail: PropTypes.func.isRequired,\n\n            /*\n             * Action creator to update the user in the redux store\n             */\n            getMe: PropTypes.func.isRequired,\n            logError: PropTypes.func.isRequired,\n            clearErrors: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n         * Object reprenseting the current user\n         */\n        user: PropTypes.shape({\n            email_verified: PropTypes.bool,\n        }),\n\n        isLoggedIn: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            verifyStatus: 'pending',\n            serverError: '',\n        };\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        this.verifyEmail();\n    }\n\n    handleRedirect() {\n        if (this.props.isLoggedIn) {\n            GlobalActions.redirectUserToDefaultTeam();\n        } else {\n            browserHistory.push('/login?extra=verified&email=' + encodeURIComponent((new URLSearchParams(this.props.location.search)).get('email')));\n        }\n    }\n\n    handleSuccess() {\n        this.setState({verifyStatus: 'success'});\n        this.props.actions.clearErrors();\n        if (this.props.isLoggedIn) {\n            this.props.actions.logError({\n                message: AnnouncementBarMessages.EMAIL_VERIFIED,\n                type: AnnouncementBarTypes.SUCCESS,\n            }, true);\n            trackEvent('settings', 'verify_email');\n            this.props.actions.getMe().then(({data, error: err}) => {\n                if (data) {\n                    this.handleRedirect();\n                } else if (err) {\n                    this.handleError(VerifyEmailErrors.FAILED_USER_STATE_GET);\n                }\n            });\n        } else {\n            this.handleRedirect();\n        }\n    }\n\n    handleError(type) {\n        let serverError = '';\n        if (type === VerifyEmailErrors.FAILED_EMAIL_VERIFICATION) {\n            serverError = (\n                <FormattedMessage\n                    id='signup_user_completed.invalid_invite'\n                    defaultMessage='The invite link was invalid. Please speak with your Administrator to receive an invitation.'\n                />\n            );\n        } else if (type === VerifyEmailErrors.FAILED_USER_STATE_GET) {\n            serverError = (\n                <FormattedMessage\n                    id='signup_user_completed.failed_update_user_state'\n                    defaultMessage='Please clear your cache and try to log in.'\n                />\n            );\n        }\n        this.setState({\n            verifyStatus: 'failure',\n            serverError,\n        });\n    }\n\n    verifyEmail = async () => {\n        const {actions: {verifyUserEmail}} = this.props;\n        const verify = await verifyUserEmail((new URLSearchParams(this.props.location.search)).get('token'));\n\n        if (verify && verify.data) {\n            this.handleSuccess();\n        } else if (verify && verify.error) {\n            this.handleError(VerifyEmailErrors.FAILED_EMAIL_VERIFICATION);\n        }\n    }\n\n    render() {\n        if (this.state.verifyStatus !== 'failure') {\n            return (<LoadingScreen/>);\n        }\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className={'form-group has-error'}>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <img\n                            alt={'signup team logo'}\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <div className='signup__content'>\n                            <h1>{this.props.siteName}</h1>\n                            <h4 className='color--light'>\n                                <FormattedMessage\n                                    id='web.root.signup_info'\n                                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                                />\n                            </h4>\n                            {serverError}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDoVerifyEmail.defaultProps = {\n    location: {},\n};\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {verifyUserEmail, getMe} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId, getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {clearErrors, logError} from 'mattermost-redux/actions/errors';\n\nimport DoVerifyEmail from './do_verify_email.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n    return {\n        isLoggedIn: Boolean(getCurrentUserId(state)),\n        siteName,\n        user: getCurrentUser(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            verifyUserEmail,\n            getMe,\n            logError,\n            clearErrors,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoVerifyEmail);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/a03442cd2c7f4902febc7202b961fad9.png\";"],"sourceRoot":""}