{"version":3,"sources":["webpack:///./node_modules/mattermost-redux/selectors/entities/bots.js","webpack:///./node_modules/mattermost-redux/actions/bots.js","webpack:///./node_modules/mattermost-redux/actions/schemes.js","webpack:///./node_modules/mattermost-redux/selectors/entities/schemes.js","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./node_modules/mattermost-redux/actions/jobs.js","webpack:///./node_modules/mattermost-redux/selectors/entities/jobs.js","webpack:///./node_modules/mattermost-redux/constants/schemes.js","webpack:///./node_modules/core-js/modules/es.promise.finally.js","webpack:///./node_modules/flexsearch/dist/flexsearch.es5.js","webpack:///./node_modules/mark.js/dist/mark.js","webpack:///./node_modules/mattermost-redux/selectors/entities/admin.js"],"names":["Object","defineProperty","exports","value","getBotAccounts","state","entities","bots","accounts","createBot","bot","_helpers","bindClientFunc","clientFunc","_client","Client4","onSuccess","_action_types","BotTypes","RECEIVED_BOT_ACCOUNT","params","patchBot","botUserId","botPatch","loadBot","getBot","loadBots","page","perPage","BOTS_PER_PAGE_DEFAULT","getBotsIncludeDeleted","RECEIVED_BOT_ACCOUNTS","disableBot","enableBot","assignBot","newOwnerId","__webpack_require__","getScheme","schemeId","onRequest","SchemeTypes","GET_SCHEME_REQUEST","RECEIVED_SCHEME","GET_SCHEME_SUCCESS","onFailure","GET_SCHEME_FAILURE","getSchemes","scope","_constants","General","PAGE_SIZE_DEFAULT","GET_SCHEMES_REQUEST","RECEIVED_SCHEMES","GET_SCHEMES_SUCCESS","GET_SCHEMES_FAILURE","createScheme","scheme","CREATE_SCHEME_REQUEST","CREATED_SCHEME","CREATE_SCHEME_SUCCESS","CREATE_SCHEME_FAILURE","deleteScheme","async","dispatch","getState","type","DELETE_SCHEME_REQUEST","data","error","forceLogoutIfNecessary","_reduxBatchedActions","batchActions","DELETE_SCHEME_FAILURE","_errors","logError","DELETED_SCHEME","DELETE_SCHEME_SUCCESS","patchScheme","PATCH_SCHEME_REQUEST","PATCHED_SCHEME","PATCH_SCHEME_SUCCESS","PATCH_SCHEME_FAILURE","getSchemeTeams","GET_SCHEME_TEAMS_REQUEST","RECEIVED_SCHEME_TEAMS","GET_SCHEME_TEAMS_SUCCESS","GET_SCHEME_TEAMS_FAILURE","getSchemeChannels","GET_SCHEME_CHANNELS_REQUEST","RECEIVED_SCHEME_CHANNELS","GET_SCHEME_CHANNELS_SUCCESS","GET_SCHEME_CHANNELS_FAILURE","makeGetSchemeChannels","_reselect","createSelector","_channels","getAllChannels","props","allChannels","_schemes","ScopeTypes","TEAM","msg","concat","id","console","log","schemeChannels","entries","forEach","item","channel","scheme_id","push","makeGetSchemeTeams","_teams","getTeams","allTeams","CHANNEL","schemeTeams","team","schemes","module","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","length","round","this","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","source","target","prop","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","ticking","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","__WEBPACK_AMD_DEFINE_RESULT__","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","PLACEHOLDER","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","NAN","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","\\","'","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","require","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","eachFunc","baseFindIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","basePropertyOf","baseReduce","baseTimes","baseUnary","baseValues","cacheHas","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","escapeHtmlChar","&","<",">","\"","escapeStringChar","chr","hasUnicode","test","mapToArray","overArg","transform","replaceHolders","placeholder","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","unicodeToArray","asciiToArray","unescapeHtmlChar","&amp;","&lt;","&gt;","&quot;","&#39;","_","runInContext","pick","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","ctxSetTimeout","nativeCeil","nativeFloor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","writable","baseAt","paths","number","lower","upper","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","symbol","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","initCloneByTag","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","computed","valuesIndex","templateSettings","escape","evaluate","variable","imports","getMapData","pairs","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","seen","baseInvoke","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","baseSortBy","criteria","objCriteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","basePullAt","indexes","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","arrLength","oldArray","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","toInteger","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrValue","flatten","otherFunc","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","difference","differenceBy","differenceWith","findLastIndex","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","flush","defer","delay","resolver","memoized","Cache","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isString","lt","lte","toArray","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","basePick","pickBy","toPairs","toPairsIn","camelCase","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","castArray","compact","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","fromPairs","functions","functionsIn","mapKeys","mapValues","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","eachRight","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","getView","iterLength","takeCount","iterIndex","commit","wrapped","createJob","job","JobTypes","CREATE_JOB_REQUEST","RECEIVED_JOB","CREATE_JOB_SUCCESS","CREATE_JOB_FAILURE","getJob","GET_JOB_REQUEST","GET_JOB_SUCCESS","GET_JOB_FAILURE","getJobs","JOBS_CHUNK_SIZE","GET_JOBS_REQUEST","RECEIVED_JOBS","GET_JOBS_SUCCESS","GET_JOBS_FAILURE","getJobsByType","RECEIVED_JOBS_BY_TYPE","cancelJob","CANCEL_JOB_REQUEST","CANCEL_JOB_SUCCESS","CANCEL_JOB_FAILURE","getAllJobs","jobs","makeGetJobsByType","jobsByType","jobsByTypeList","$","getBuiltIn","speciesConstructor","promiseResolve","real","finally","onFinally","C","then","ma","na","defineProperties","Z","pa","qa","ra","sa","ta","Aa","D","I","Ba","za","o","E","H","L","M","K","N","B","ba","F","V","ja","ka","ca","catch","race","all","define","amd","modules","Ca","Da","init","A","da","ua","W","U","u","ha","G","J","P","Q","R","Y","X","S","aa","T","ea","va","Ea","onmessage","content","threshold","postMessage","info","worker","Fa","suggest","O","encode","wa","memory","speed","score","balance","fast","la","xa","ya","registerMatcher","registerEncoder","ia","registerLanguage","stemmer","preset","Worker","tokenize","rtl","resolution","matcher","addMatcher","lang","doc","field","Ga","importScripts","_ctx","query","bool","oa","Ha","contextual","export","import","icase","simple","advanced","Blob","URL","createObjectURL","_typeof","classCallCheck","instance","Constructor","createClass","protoProps","staticProps","_extends","DOMIterator","iframes","exclude","iframesTimeout","filteredCtx","NodeList","isPrototypeOf","querySelectorAll","isDescendant","contexts","contains","ifr","successFn","errorFn","ifrWin","contentWindow","href","location","_this","called","tout","isIframeBlank","getIframeContents","readyState","observeIframeLoad","_this2","eachCalled","forEachIframe","waitForIframes","querySelector","handled","_this3","open","checkEnd","onIframeReady","con","whatToShow","createNodeIterator","contents","prevNode","compCurr","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","compPrev","DOCUMENT_POSITION_FOLLOWING","itr","previousNode","nextNode","currIfr","ifrDict","compareNodeIframe","eCb","fCb","_this4","createInstanceOnIframe","forEachNode","eachCb","filterCb","doneCb","_this5","createIterator","_getIteratorNode","getIteratorNode","checkIframeFilter","ifrNode","handleOpenIframes","_this6","getContexts","ready","iterateThroughNodes","selector","selectors","matchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","webkitMatchesSelector","sel","Mark$1","Mark","ie","navigator","userAgent","opt","debug","wildcards","setupWildcardsRegExp","escapeStr","synonyms","createSynonymsRegExp","ignoreJoiners","ignorePunctuation","setupIgnoreJoinersRegExp","diacritics","createDiacriticsRegExp","createMergedBlanksRegExp","createJoinersRegExp","createWildcardsRegExp","createAccuracyRegExp","syn","sens","caseSensitive","joinerPlaceholder","k1","k2","processSynomyms","indx","original","nextChar","joiner","dct","acc","accuracy","ls","limiters","lsJoin","limiter","sv","kw","separateWordSearch","kwSplitted","keywords","noMatch","_callNoMatchOnInvalid","callNoMatchOnInvalidRanges","isNumeric","originalLength","cb","nodes","NodeFilter","SHOW_TEXT","textContent","matchesExclude","FILTER_REJECT","FILTER_ACCEPT","hEl","startNode","splitText","ret","repl","replaceChild","dict","sibl","startStr","endStr","wrapRangeInTextNode","previousSibling","regex","ignoreGroups","endCb","matchIdx","getTextNodes","_this7","wrapRangeInMappedTextNode","ranges","_this8","counter","_checkWhitespaceRange","checkWhitespaceRanges","docFrag","createDocumentFragment","normalizeTextNode","normalize","nextSibling","nodeValue","_this9","totalMatches","acrossElements","_this10","_getSeparatedKeywords","getSeparatedKeywords","kwArr","kwArrLen","createRegExp","term","rawRanges","_this11","checkRanges","wrapRangeFromIndex","_this12","SHOW_ELEMENT","unwrapMatches","matchesSel","_opt","mark","markRegExp","markRanges","unmark","getLogs","admin","logs","getAudits","audits","getConfig","getLdapGroups","ldapGroups","getLdapGroupsCount","ldapGroupsCount","getEnvironmentConfig","environmentConfig","getComplianceReports","complianceReports","getClusterInfo","clusterInfo","getUserAccessTokens","userAccessTokens"],"mappings":"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","file":"7.b26efa85ffb2db2fdb81.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBotAccounts = getBotAccounts;\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction getBotAccounts(state) {\n  return state.entities.bots.accounts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBot = createBot;\nexports.patchBot = patchBot;\nexports.loadBot = loadBot;\nexports.loadBots = loadBots;\nexports.disableBot = disableBot;\nexports.enableBot = enableBot;\nexports.assignBot = assignBot;\n\nvar _client = require(\"../client\");\n\nvar _action_types = require(\"../action_types\");\n\nvar _helpers = require(\"./helpers\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nconst BOTS_PER_PAGE_DEFAULT = 20;\n\nfunction createBot(bot) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [bot]\n  });\n}\n\nfunction patchBot(botUserId, botPatch) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.patchBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, botPatch]\n  });\n}\n\nfunction loadBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction loadBots(page = 0, perPage = BOTS_PER_PAGE_DEFAULT) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBotsIncludeDeleted,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNTS,\n    params: [page, perPage]\n  });\n}\n\nfunction disableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.disableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction enableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.enableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction assignBot(botUserId, newOwnerId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.assignBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, newOwnerId]\n  });\n}","\"use strict\";\n\nrequire(\"core-js/modules/es.promise\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScheme = getScheme;\nexports.getSchemes = getSchemes;\nexports.createScheme = createScheme;\nexports.deleteScheme = deleteScheme;\nexports.patchScheme = patchScheme;\nexports.getSchemeTeams = getSchemeTeams;\nexports.getSchemeChannels = getSchemeChannels;\n\nvar _client = require(\"../client\");\n\nvar _action_types = require(\"../action_types\");\n\nvar _constants = require(\"../constants\");\n\nvar _reduxBatchedActions = require(\"redux-batched-actions\");\n\nvar _helpers = require(\"./helpers\");\n\nvar _errors = require(\"./errors\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction getScheme(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getScheme,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME, _action_types.SchemeTypes.GET_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_FAILURE,\n    params: [schemeId]\n  });\n}\n\nfunction getSchemes(scope\n/*: SchemeScope*/\n, page\n/*: number*/\n= 0, perPage\n/*: number*/\n= _constants.General.PAGE_SIZE_DEFAULT)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemes,\n    onRequest: _action_types.SchemeTypes.GET_SCHEMES_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEMES, _action_types.SchemeTypes.GET_SCHEMES_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEMES_FAILURE,\n    params: [scope, page, perPage]\n  });\n}\n\nfunction createScheme(scheme\n/*: Scheme*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createScheme,\n    onRequest: _action_types.SchemeTypes.CREATE_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.CREATED_SCHEME, _action_types.SchemeTypes.CREATE_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.CREATE_SCHEME_FAILURE,\n    params: [scheme]\n  });\n}\n\nfunction deleteScheme(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return async (dispatch, getState) => {\n    dispatch({\n      type: _action_types.SchemeTypes.DELETE_SCHEME_REQUEST,\n      data: null\n    }, getState);\n    let data = null;\n\n    try {\n      data = await _client.Client4.deleteScheme(schemeId);\n    } catch (error) {\n      (0, _helpers.forceLogoutIfNecessary)(error, dispatch, getState);\n      dispatch((0, _reduxBatchedActions.batchActions)([{\n        type: _action_types.SchemeTypes.DELETE_SCHEME_FAILURE,\n        error\n      }, (0, _errors.logError)(error)]), getState);\n      return {\n        error\n      };\n    }\n\n    dispatch({\n      type: _action_types.SchemeTypes.DELETED_SCHEME,\n      data: {\n        schemeId\n      }\n    }, getState);\n    dispatch({\n      type: _action_types.SchemeTypes.DELETE_SCHEME_SUCCESS,\n      data: null\n    }, getState);\n    return {\n      data\n    };\n  };\n}\n\nfunction patchScheme(schemeId\n/*: string*/\n, scheme\n/*: SchemePatch*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.patchScheme,\n    onRequest: _action_types.SchemeTypes.PATCH_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.PATCHED_SCHEME, _action_types.SchemeTypes.PATCH_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.PATCH_SCHEME_FAILURE,\n    params: [schemeId, scheme]\n  });\n}\n\nfunction getSchemeTeams(schemeId\n/*: string*/\n, page\n/*: number*/\n= 0, perPage\n/*: number*/\n= _constants.General.PAGE_SIZE_DEFAULT)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemeTeams,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_TEAMS_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME_TEAMS, _action_types.SchemeTypes.GET_SCHEME_TEAMS_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_TEAMS_FAILURE,\n    params: [schemeId, page, perPage]\n  });\n}\n\nfunction getSchemeChannels(schemeId\n/*: string*/\n, page\n/*: number*/\n= 0, perPage\n/*: number*/\n= _constants.General.PAGE_SIZE_DEFAULT)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemeChannels,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_CHANNELS_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME_CHANNELS, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_CHANNELS_FAILURE,\n    params: [schemeId, page, perPage]\n  });\n}","\"use strict\";\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSchemes = getSchemes;\nexports.getScheme = getScheme;\nexports.makeGetSchemeChannels = makeGetSchemeChannels;\nexports.makeGetSchemeTeams = makeGetSchemeTeams;\n\nvar _reselect = require(\"reselect\");\n\nvar _channels = require(\"./channels\");\n\nvar _teams = require(\"./teams\");\n\nvar _schemes = require(\"../../constants/schemes\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction getSchemes(state\n/*: GlobalState*/\n)\n/*: { [string]: Scheme }*/\n{\n  return state.entities.schemes.schemes;\n}\n\nfunction getScheme(state\n/*: GlobalState*/\n, id\n/*: string*/\n)\n/*: Scheme*/\n{\n  const schemes = getSchemes(state);\n  return schemes[id];\n}\n\nfunction makeGetSchemeChannels() {\n  return ((0, _reselect.createSelector)(_channels.getAllChannels, (state, props\n  /*: {schemeId: string}*/\n  ) => getScheme(state, props.schemeId), (allChannels, scheme) => {\n    if (!scheme) {\n      return [];\n    }\n\n    if (scheme.scope === _schemes.ScopeTypes.TEAM) {\n      const msg = \"Not implemented: scheme '\".concat(scheme.id, \"' is team-scope but 'getSchemeChannels' only accepts channel-scoped schemes.\");\n      console.log(msg); // eslint-disable-line no-console\n\n      return [];\n    }\n\n    const schemeChannels\n    /*: Array<Channel>*/\n    = []; // $FlowFixMe\n\n    Object.entries(allChannels).forEach((item\n    /*: [string, Channel]*/\n    ) => {\n      const [, channel\n      /*: Channel*/\n      ] = item;\n\n      if (channel.scheme_id === scheme.id) {\n        schemeChannels.push(channel);\n      }\n    });\n    return schemeChannels;\n  })\n  /*: (GlobalState, {schemeId: string}) => Array<Channel>*/\n  );\n}\n\nfunction makeGetSchemeTeams() {\n  return ((0, _reselect.createSelector)(_teams.getTeams, (state, props\n  /*: {schemeId: string}*/\n  ) => getScheme(state, props.schemeId), (allTeams, scheme) => {\n    if (!scheme) {\n      return [];\n    }\n\n    if (scheme.scope === _schemes.ScopeTypes.CHANNEL) {\n      const msg = \"Error: scheme '\".concat(scheme.id, \"' is channel-scoped but 'getSchemeChannels' only accepts team-scoped schemes.\");\n      console.log(msg); // eslint-disable-line no-console\n\n      return [];\n    }\n\n    const schemeTeams\n    /*: Array<Team>*/\n    = []; // $FlowFixMe\n\n    Object.entries(allTeams).forEach((item\n    /*: [string, Team]*/\n    ) => {\n      const [, team\n      /*: Team*/\n      ] = item;\n\n      if (team.scheme_id === scheme.id) {\n        schemeTeams.push(team);\n      }\n    });\n    return schemeTeams;\n  })\n  /*: (GlobalState, {schemeId: string}) => Array<Team>*/\n  );\n}","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.15';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\n      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/[\\r\\n]/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      // Like with sourceURL, we take care to not check the option's prototype,\n      // as this configuration is a code injection vector.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createJob = createJob;\nexports.getJob = getJob;\nexports.getJobs = getJobs;\nexports.getJobsByType = getJobsByType;\nexports.cancelJob = cancelJob;\n\nvar _action_types = require(\"../action_types\");\n\nvar _client = require(\"../client\");\n\nvar _constants = require(\"../constants\");\n\nvar _helpers = require(\"./helpers\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction createJob(job\n/*: Job*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createJob,\n    onRequest: _action_types.JobTypes.CREATE_JOB_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.CREATE_JOB_SUCCESS],\n    onFailure: _action_types.JobTypes.CREATE_JOB_FAILURE,\n    params: [job]\n  });\n}\n\nfunction getJob(id\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJob,\n    onRequest: _action_types.JobTypes.GET_JOB_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.GET_JOB_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOB_FAILURE,\n    params: [id]\n  });\n}\n\nfunction getJobs(page\n/*: number*/\n= 0, perPage\n/*: number*/\n= _constants.General.JOBS_CHUNK_SIZE)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJobs,\n    onRequest: _action_types.JobTypes.GET_JOBS_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.GET_JOBS_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOBS_FAILURE,\n    params: [page, perPage]\n  });\n}\n\nfunction getJobsByType(type\n/*: JobType*/\n, page\n/*: number*/\n= 0, perPage\n/*: number*/\n= _constants.General.JOBS_CHUNK_SIZE)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJobsByType,\n    onRequest: _action_types.JobTypes.GET_JOBS_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.RECEIVED_JOBS_BY_TYPE, _action_types.JobTypes.GET_JOBS_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOBS_FAILURE,\n    params: [type, page, perPage]\n  });\n}\n\nfunction cancelJob(job\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.cancelJob,\n    onRequest: _action_types.JobTypes.CANCEL_JOB_REQUEST,\n    onSuccess: _action_types.JobTypes.CANCEL_JOB_SUCCESS,\n    onFailure: _action_types.JobTypes.CANCEL_JOB_FAILURE,\n    params: [job]\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAllJobs = getAllJobs;\nexports.getJobsByType = getJobsByType;\nexports.makeGetJobsByType = makeGetJobsByType;\n\nvar _reselect = require(\"reselect\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction getAllJobs(state\n/*: GlobalState*/\n)\n/*: IDMappedObjects<Job>*/\n{\n  return state.entities.jobs.jobs;\n}\n\nfunction getJobsByType(state\n/*: GlobalState*/\n)\n/*: {[JobType]: Array<Job>}*/\n{\n  return state.entities.jobs.jobsByTypeList;\n}\n\nfunction makeGetJobsByType(type\n/*: JobType*/\n)\n/*: (state: GlobalState) => Array<Job>*/\n{\n  return (0, _reselect.createSelector)(getJobsByType, jobsByType => {\n    return jobsByType[type] || [];\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScopeTypes = void 0;\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nconst ScopeTypes = {\n  TEAM: 'team',\n  CHANNEL: 'channel'\n};\nexports.ScopeTypes = ScopeTypes;","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\n\n// `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n","/*\r\n FlexSearch v0.6.22\r\n Copyright 2019 Nextapps GmbH\r\n Author: Thomas Wilkerling\r\n Released under the Apache 2.0 Licence\r\n https://github.com/nextapps-de/flexsearch\r\n*/\r\n'use strict';function ma(n){var q=0;return function(){return q<n.length?{done:!1,value:n[q++]}:{done:!0}}}var na=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(n,q,p){n!=Array.prototype&&n!=Object.prototype&&(n[q]=p.value)},Z=\"undefined\"!=typeof window&&window===this?this:\"undefined\"!=typeof global&&null!=global?global:this;function pa(){pa=function(){};Z.Symbol||(Z.Symbol=qa)}function ra(n,q){this.b=n;na(this,\"description\",{configurable:!0,writable:!0,value:q})}\r\nra.prototype.toString=function(){return this.b};var qa=function(){function n(p){if(this instanceof n)throw new TypeError(\"Symbol is not a constructor\");return new ra(\"jscomp_symbol_\"+(p||\"\")+\"_\"+q++,p)}var q=0;return n}();function sa(){pa();var n=Z.Symbol.iterator;n||(n=Z.Symbol.iterator=Z.Symbol(\"Symbol.iterator\"));\"function\"!=typeof Array.prototype[n]&&na(Array.prototype,n,{configurable:!0,writable:!0,value:function(){return ta(ma(this))}});sa=function(){}}\r\nfunction ta(n){sa();n={next:n};n[Z.Symbol.iterator]=function(){return this};return n}function za(n,q){sa();n instanceof String&&(n+=\"\");var p=0,D={next:function(){if(p<n.length){var I=p++;return{value:q(I,n[I]),done:!1}}D.next=function(){return{done:!0,value:void 0}};return D.next()}};D[Symbol.iterator]=function(){return D};return D}\r\nfunction Aa(n,q){if(q){var p=Z;n=n.split(\".\");for(var D=0;D<n.length-1;D++){var I=n[D];I in p||(p[I]={});p=p[I]}n=n[n.length-1];D=p[n];q=q(D);q!=D&&null!=q&&na(p,n,{configurable:!0,writable:!0,value:q})}}Aa(\"Array.prototype.keys\",function(n){return n?n:function(){return za(this,function(q){return q})}});function Ba(n){var q=\"undefined\"!=typeof Symbol&&Symbol.iterator&&n[Symbol.iterator];return q?q.call(n):{next:ma(n)}}\r\nAa(\"Promise\",function(n){function q(m){this.h=0;this.o=void 0;this.b=[];var v=this.j();try{m(v.resolve,v.reject)}catch(l){v.reject(l)}}function p(){this.b=null}function D(m){return m instanceof q?m:new q(function(v){v(m)})}if(n)return n;p.prototype.h=function(m){if(null==this.b){this.b=[];var v=this;this.j(function(){v.o()})}this.b.push(m)};var I=Z.setTimeout;p.prototype.j=function(m){I(m,0)};p.prototype.o=function(){for(;this.b&&this.b.length;){var m=this.b;this.b=[];for(var v=0;v<m.length;++v){var l=\r\nm[v];m[v]=null;try{l()}catch(E){this.l(E)}}}this.b=null};p.prototype.l=function(m){this.j(function(){throw m;})};q.prototype.j=function(){function m(E){return function(H){l||(l=!0,E.call(v,H))}}var v=this,l=!1;return{resolve:m(this.L),reject:m(this.l)}};q.prototype.L=function(m){if(m===this)this.l(new TypeError(\"A Promise cannot resolve to itself\"));else if(m instanceof q)this.M(m);else{a:switch(typeof m){case \"object\":var v=null!=m;break a;case \"function\":v=!0;break a;default:v=!1}v?this.K(m):this.w(m)}};\r\nq.prototype.K=function(m){var v=void 0;try{v=m.then}catch(l){this.l(l);return}\"function\"==typeof v?this.N(v,m):this.w(m)};q.prototype.l=function(m){this.B(2,m)};q.prototype.w=function(m){this.B(1,m)};q.prototype.B=function(m,v){if(0!=this.h)throw Error(\"Cannot settle(\"+m+\", \"+v+\"): Promise already settled in state\"+this.h);this.h=m;this.o=v;this.I()};q.prototype.I=function(){if(null!=this.b){for(var m=0;m<this.b.length;++m)ba.h(this.b[m]);this.b=null}};var ba=new p;q.prototype.M=function(m){var v=\r\nthis.j();m.F(v.resolve,v.reject)};q.prototype.N=function(m,v){var l=this.j();try{m.call(v,l.resolve,l.reject)}catch(E){l.reject(E)}};q.prototype.then=function(m,v){function l(K,V){return\"function\"==typeof K?function(ja){try{E(K(ja))}catch(ka){H(ka)}}:V}var E,H,ca=new q(function(K,V){E=K;H=V});this.F(l(m,E),l(v,H));return ca};q.prototype.catch=function(m){return this.then(void 0,m)};q.prototype.F=function(m,v){function l(){switch(E.h){case 1:m(E.o);break;case 2:v(E.o);break;default:throw Error(\"Unexpected state: \"+\r\nE.h);}}var E=this;null==this.b?ba.h(l):this.b.push(l)};q.resolve=D;q.reject=function(m){return new q(function(v,l){l(m)})};q.race=function(m){return new q(function(v,l){for(var E=Ba(m),H=E.next();!H.done;H=E.next())D(H.value).F(v,l)})};q.all=function(m){var v=Ba(m),l=v.next();return l.done?D([]):new q(function(E,H){function ca(ja){return function(ka){K[ja]=ka;V--;0==V&&E(K)}}var K=[],V=0;do K.push(void 0),V++,D(l.value).F(ca(K.length-1),H),l=v.next();while(!l.done)})};return q});\r\n(function(n,q,p){var D;(D=p.define)&&D.amd?D([],function(){return q}):(D=p.modules)?D[n.toLowerCase()]=q:\"object\"===typeof exports?module.exports=q:p[n]=q})(\"FlexSearch\",function Ca(n){function p(a,b){var c=b?b.id:a&&a.id;this.id=c||0===c?c:Da++;this.init(a,b);v(this,\"index\",function(){return this.a?Object.keys(this.a.index[this.a.keys[0]].f):Object.keys(this.f)});v(this,\"length\",function(){return this.index.length})}function D(a,b,c,d){this.D!==this.i&&(this.A=this.A.concat(c),this.D++,d&&this.A.length>=\r\nd&&(this.D=this.i),this.D===this.i&&(this.cache&&this.v.set(b,this.A),this.H&&this.H(this.A)));return this}function I(a){var b=G(),c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];b[c]=N(d)?d.slice(0):U(d)?I(d):d}return b}function ba(a,b){for(var c=a.length,d=da(b),e=[],f=0,g=0;f<c;f++){var h=a[f];if(d&&b(h)||!d&&!b[h])e[g++]=h}return e}function m(a,b,c,d,e,f,g,h,k,t){c=ua(c,g?0:e,h,f,b,k,t);if(h){h=c.page;var y=c.next;c=c.result}if(g)b=this.where(g,null,e,c);else{b=c;c=this.m;e=b.length;f=Array(e);\r\nfor(g=0;g<e;g++)f[g]=c[b[g]];b=f}c=b;d&&(da(d)||(W=d.split(\":\"),1<W.length?d=ka:(W=W[0],d=ja)),c.sort(d));c=fa(h,y,c);this.cache&&this.v.set(a,c);return c}function v(a,b,c){Object.defineProperty(a,b,{get:c})}function l(a){return new RegExp(a,\"g\")}function E(a,b){for(var c=0;c<b.length;c+=2)a=a.replace(b[c],b[c+1]);return a}function H(a,b,c,d,e,f,g,h){if(b[c])return b[c];e=e?(h-(g||h/1.5))*f+(g||h/1.5)*e:f;b[c]=e;e>=g&&(a=a[h-(e+.5>>0)],a=a[c]||(a[c]=[]),a[a.length]=d);return e}function ca(a,b){if(a)for(var c=\r\nObject.keys(a),d=0,e=c.length;d<e;d++){var f=c[d],g=a[f];if(g)for(var h=0,k=g.length;h<k;h++)if(g[h]===b){1===k?delete a[f]:g.splice(h,1);break}else U(g[h])&&ca(g[h],b)}}function K(a){for(var b=\"\",c=\"\",d=\"\",e=0;e<a.length;e++){var f=a[e];if(f!==c)if(e&&\"h\"===f){if(d=\"a\"===d||\"e\"===d||\"i\"===d||\"o\"===d||\"u\"===d||\"y\"===d,(\"a\"===c||\"e\"===c||\"i\"===c||\"o\"===c||\"u\"===c||\"y\"===c)&&d||\" \"===c)b+=f}else b+=f;d=e===a.length-1?\"\":a[e+1];c=f}return b}function V(a,b){a=a.length-b.length;return 0>a?1:a?-1:0}function ja(a,\r\nb){a=a[W];b=b[W];return a<b?-1:a>b?1:0}function ka(a,b){for(var c=W.length,d=0;d<c;d++)a=a[W[d]],b=b[W[d]];return a<b?-1:a>b?1:0}function fa(a,b,c){return a?{page:a,next:b?\"\"+b:null,result:c}:c}function ua(a,b,c,d,e,f,g){var h=[];if(!0===c){c=\"0\";var k=\"\"}else k=c&&c.split(\":\");var t=a.length;if(1<t){var y=G(),w=[],A,r=0,u,F=!0,z=0,C;if(k)if(2===k.length){var x=k;k=!1}else k=C=parseInt(k[0],10);if(g){for(A=G();r<t;r++)if(\"not\"===e[r]){var B=a[r];var J=B.length;for(u=0;u<J;u++)A[\"@\"+B[u]]=1}else var P=\r\nr+1;if(Q(P))return fa(c,R,h);r=0}else var Y=X(e)&&e;for(var ha;r<t;r++){var L=r===(P||t)-1;if(!Y||!r)if((u=Y||e&&e[r])&&\"and\"!==u)if(\"or\"===u)ha=!1;else continue;else ha=f=!0;B=a[r];if(J=B.length){if(F)if(S){var M=S.length;for(u=0;u<M;u++){F=S[u];var aa=\"@\"+F;g&&A[aa]||(y[aa]=1,f||(h[z++]=F))}var S=null;F=!1}else{S=B;continue}aa=!1;for(u=0;u<J;u++){M=B[u];var T=\"@\"+M,ea=f?y[T]||0:r;if(!(!ea&&!d||g&&A[T]||!f&&y[T]))if(ea===r){if(L){if(!C||--C<z)if(h[z++]=M,b&&z===b)return fa(c,z+(k||0),h)}else y[T]=\r\nr+1;aa=!0}else d&&(T=w[ea]||(w[ea]=[]),T[T.length]=M)}if(ha&&!aa&&!d)break}else if(ha&&!d)return fa(c,R,B)}if(S)if(r=S.length,g)for(u=k?parseInt(k,10):0;u<r;u++)a=S[u],A[\"@\"+a]||(h[z++]=a);else h=S;if(d)for(z=h.length,x?(r=parseInt(x[0],10)+1,u=parseInt(x[1],10)+1):(r=w.length,u=0);r--;)if(M=w[r]){for(J=M.length;u<J;u++)if(d=M[u],!g||!A[\"@\"+d])if(h[z++]=d,b&&z===b)return fa(c,r+\":\"+u,h);u=0}}else!t||e&&\"not\"===e[0]||(h=a[0],k&&(k=parseInt(k[0],10)));if(b){g=h.length;k&&k>g&&(k=0);k=k||0;var R=k+b;\r\nR<g?h=h.slice(k,R):(R=0,k&&(h=h.slice(k)))}return fa(c,R,h)}function X(a){return\"string\"===typeof a}function N(a){return a.constructor===Array}function da(a){return\"function\"===typeof a}function U(a){return\"object\"===typeof a}function Q(a){return\"undefined\"===typeof a}function va(a){for(var b=Array(a),c=0;c<a;c++)b[c]=G();return b}function G(){return Object.create(null)}function Ea(){var a,b;self.onmessage=function(c){if(c=c.data)if(c.search){var d=b.search(c.content,c.threshold?{limit:c.limit,threshold:c.threshold,\r\nwhere:c.where}:c.limit);self.postMessage({id:a,content:c.content,limit:c.limit,result:d})}else c.add?b.add(c.id,c.content):c.update?b.update(c.id,c.content):c.remove?b.remove(c.id):c.clear?b.clear():c.info?(c=b.info(),c.worker=a,console.log(c)):c.register&&(a=c.id,c.options.cache=!1,c.options.async=!1,c.options.worker=!1,b=(new Function(c.register.substring(c.register.indexOf(\"{\")+1,c.register.lastIndexOf(\"}\"))))(),b=new b(c.options))}}function Fa(a,b,c,d){a=n(\"flexsearch\",\"id\"+a,Ea,function(f){(f=\r\nf.data)&&f.result&&d(f.id,f.content,f.result,f.limit,f.where,f.cursor,f.suggest)},b);var e=Ca.toString();c.id=b;a.postMessage({register:e,options:c,id:b});return a}var O={encode:\"icase\",g:\"forward\",split:/\\W+/,cache:!1,async:!1,i:!1,G:!1,a:!1,c:9,threshold:0,depth:0},wa={memory:{encode:\"extra\",g:\"strict\",threshold:0,c:1},speed:{encode:\"icase\",g:\"strict\",threshold:1,c:3,depth:2},match:{encode:\"extra\",g:\"full\",threshold:1,c:3},score:{encode:\"extra\",g:\"strict\",threshold:1,c:9,depth:4},balance:{encode:\"balance\",\r\ng:\"strict\",threshold:0,c:3,depth:3},fast:{encode:\"icase\",g:\"strict\",threshold:8,c:9,depth:1}},la=[],Da=0,xa={},ya={};p.create=function(a,b){return new p(a,b)};p.registerMatcher=function(a){for(var b in a)a.hasOwnProperty(b)&&la.push(l(b),a[b]);return this};p.registerEncoder=function(a,b){ia[a]=b.bind(ia);return this};p.registerLanguage=function(a,b){xa[a]=b.filter;ya[a]=b.stemmer;return this};p.encode=function(a,b){return ia[a](b)};p.prototype.init=function(a,b){this.h=[];if(b){var c=b.preset;a=b}else a||\r\n(a=O),c=a.preset;b={};X(a)?((b=wa[a])||console.warn(\"Preset not found: \"+a),a={}):c&&((b=wa[c])||console.warn(\"Preset not found: \"+c));if(c=a.worker)if(\"undefined\"===typeof Worker)a.worker=!1,this.b=null;else{var d=parseInt(c,10)||4;this.w=-1;this.D=0;this.A=[];this.H=null;this.b=Array(d);for(var e=0;e<d;e++)this.b[e]=Fa(this.id,e,a,D.bind(this))}this.g=a.tokenize||b.g||this.g||O.g;this.split=a.split||this.split||O.split;this.G=a.rtl||this.G||O.G;this.async=\"undefined\"===typeof Promise||Q(c=a.async)?\r\nthis.async||O.async:c;this.i=Q(c=a.worker)?this.i||O.i:c;this.threshold=Q(c=a.threshold)?b.threshold||this.threshold||O.threshold:c;this.c=Q(c=a.resolution)?c=b.c||this.c||O.c:c;c<=this.threshold&&(this.c=this.threshold+1);this.depth=\"strict\"!==this.g||Q(c=a.depth)?b.depth||this.depth||O.depth:c;this.j=(c=Q(c=a.encode)?b.encode||O.encode:c)&&ia[c]&&ia[c].bind(ia)||(da(c)?c:this.j||!1);(c=a.matcher)&&this.addMatcher(c);if(c=(b=a.lang)||a.filter){X(c)&&(c=xa[c]);if(N(c)){d=this.j;e=G();for(var f=0;f<\r\nc.length;f++){var g=d?d(c[f]):c[f];e[g]=1}c=e}this.filter=c}if(c=b||a.stemmer){b=X(c)?ya[c]:c;d=this.j;e=[];for(var h in b)b.hasOwnProperty(h)&&(f=d?d(h):h,e.push(l(f+\"($|\\\\W)\"),d?d(b[h]):b[h]));this.stemmer=e}this.a=e=(c=a.doc)?I(c):this.a||O.a;this.u=va(this.c-(this.threshold||0));this.s=G();this.f=G();if(e){this.m=G();a.doc=null;h=e.index={};b=e.keys=[];d=e.field;f=e.tag;N(e.id)||(e.id=e.id.split(\":\"));if(f){this.B=G();g=G();if(d)if(X(d))g[d]=a;else if(N(d))for(var k=0;k<d.length;k++)g[d[k]]=a;\r\nelse U(d)&&(g=d);N(f)||(e.tag=f=[f]);for(d=0;d<f.length;d++)this.B[f[d]]=G();this.I=f;d=g}if(d){if(!N(d))if(U(d)){var t=d;e.field=d=Object.keys(d)}else e.field=d=[d];for(e=0;e<d.length;e++)f=d[e],N(f)||(t&&(a=t[f]),b[e]=f,d[e]=f.split(\":\")),h[f]=new p(a),h[f].m=this.m}}this.o=!0;this.v=(this.cache=c=Q(c=a.cache)?this.cache||O.cache:c)?new Ga(c):!1;return this};p.prototype.encode=function(a){a&&la.length&&(a=E(a,la));a&&this.h.length&&(a=E(a,this.h));a&&this.j&&(a=this.j(a));a&&this.stemmer&&(a=E(a,\r\nthis.stemmer));return a};p.prototype.addMatcher=function(a){var b=this.h,c;for(c in a)a.hasOwnProperty(c)&&b.push(l(c),a[c]);return this};p.prototype.add=function(a,b,c,d,e){if(this.a&&U(a))return this.l(\"add\",a,b);if(b&&X(b)&&(a||0===a)){var f=\"@\"+a;if(this.f[f]&&!d)return this.update(a,b);if(this.i)return++this.w>=this.b.length&&(this.w=0),this.b[this.w].postMessage({add:!0,id:a,content:b}),this.f[f]=\"\"+this.w,c&&c(),this;if(!e){if(this.async&&\"function\"!==typeof importScripts){var g=this;f=new Promise(function(Y){setTimeout(function(){g.add(a,\r\nb,null,d,!0);g=null;Y()})});if(c)f.then(c);else return f;return this}if(c)return this.add(a,b,null,d,!0),c(),this}b=this.encode(b);if(!b.length)return this;c=this.g;e=da(c)?c(b):b.split(this.split);this.filter&&(e=ba(e,this.filter));var h=G();h._ctx=G();for(var k=e.length,t=this.threshold,y=this.depth,w=this.c,A=this.u,r=this.G,u=0;u<k;u++){var F=e[u];if(F){var z=F.length,C=(r?u+1:k-u)/k,x=\"\";switch(c){case \"reverse\":case \"both\":for(var B=z;--B;)x=F[B]+x,H(A,h,x,a,r?1:(z-B)/z,C,t,w-1);x=\"\";case \"forward\":for(B=\r\n0;B<z;B++)x+=F[B],H(A,h,x,a,r?(B+1)/z:1,C,t,w-1);break;case \"full\":for(B=0;B<z;B++)for(var J=(r?B+1:z-B)/z,P=z;P>B;P--)x=F.substring(B,P),H(A,h,x,a,J,C,t,w-1);break;default:if(z=H(A,h,F,a,1,C,t,w-1),y&&1<k&&z>=t)for(z=h._ctx[F]||(h._ctx[F]=G()),F=this.s[F]||(this.s[F]=va(w-(t||0))),C=u-y,x=u+y+1,0>C&&(C=0),x>k&&(x=k);C<x;C++)C!==u&&H(F,z,e[C],a,0,w-(C<u?u-C:C-u),t,w-1)}}}this.f[f]=1;this.o=!1}return this};p.prototype.l=function(a,b,c){if(N(b))for(var d=0,e=b.length;d<e;d++){if(d===e-1)return this.l(a,\r\nb[d],c);this.l(a,b[d])}else{d=this.a.index;e=this.a.keys;for(var f=this.a.tag,g=this.a.id,h,k,t,y,w=0;w<g.length;w++)h=(h||b)[g[w]];if(f){for(g=0;g<f.length;g++){t=f[g];k=t.split(\":\");for(w=0;w<k.length;w++)y=(y||b)[k[w]];y=\"@\"+y}k=this.B[t];k=k[y]||(k[y]=[])}if(\"remove\"===a)for(delete this.m[h],g=0,f=e.length;g<f;g++){if(g===f-1)return d[e[g]].remove(h,c),this;d[e[g]].remove(h)}g=this.a.field;k&&(k[k.length]=b);this.m[h]=b;f=0;for(t=g.length;f<t;f++){k=g[f];y=void 0;for(w=0;w<k.length;w++)y=(y||\r\nb)[k[w]];k=d[e[f]];w=\"add\"===a?k.add:k.update;f===t-1?w.call(k,h,y,c):w.call(k,h,y)}}return this};p.prototype.update=function(a,b,c){if(this.a&&U(a))return this.l(\"update\",a,b);this.f[\"@\"+a]&&X(b)&&(this.remove(a),this.add(a,b,c,!0));return this};p.prototype.remove=function(a,b,c){if(this.a&&U(a))return this.l(\"remove\",a,b);var d=\"@\"+a;if(this.f[d]){if(this.i)return this.b[this.f[d]].postMessage({remove:!0,id:a}),delete this.f[d],b&&b(),this;if(!c){if(this.async&&\"function\"!==typeof importScripts){var e=\r\nthis;d=new Promise(function(f){setTimeout(function(){e.remove(a,null,!0);e=null;f()})});if(b)d.then(b);else return d;return this}if(b)return this.remove(a,null,!0),b(),this}for(b=0;b<this.c-(this.threshold||0);b++)ca(this.u[b],a);this.depth&&ca(this.s,a);delete this.f[d];this.o=!1}return this};var W;p.prototype.search=function(a,b,c,d){if(U(b)){if(N(b))for(var e=0;e<b.length;e++)b[e].query=a;else b.query=a;a=b;b=1E3}else b&&da(b)?(c=b,b=1E3):b||0===b||(b=1E3);var f=[],g=a;if(U(a)&&!N(a)){c||(c=a.callback)&&\r\n(g.callback=null);var h=a.sort;var k=a.page;b=a.limit;var t=a.threshold;var y=a.suggest;a=a.query}if(this.a){t=this.a.index;var w=g.where,A=g.bool||\"or\",r=g.field,u=A,F,z;if(r)N(r)||(r=[r]);else if(N(g)){var C=g;r=[];u=[];for(var x=0;x<g.length;x++)d=g[x],e=d.bool||A,r[x]=d.field,u[x]=e,\"not\"===e?F=!0:\"and\"===e&&(z=!0)}else r=this.a.keys;A=r.length;for(x=0;x<A;x++)C&&(g=C[x]),k&&!X(g)&&(g.page=null,g.limit=0),f[x]=t[r[x]].search(g,0);if(this.i){this.H=c;this.D=0;this.A=[];for(t=0;t<this.i;t++)this.b[t].postMessage({search:!0,\r\nlimit:b,content:g});return}if(c)return c(m.call(this,a,u,f,h,b,y,w,k,z,F));if(this.async){var B=this;return new Promise(function(oa){Promise.all(f).then(function(Ha){oa(m.call(B,a,u,Ha,h,b,y,w,k,z,F))})})}return m.call(this,a,u,f,h,b,y,w,k,z,F)}t||(t=this.threshold||0);if(!d){if(this.async&&\"function\"!==typeof importScripts){var J=this;t=new Promise(function(oa){setTimeout(function(){oa(J.search(g,b,null,!0));J=null})});if(c)t.then(c);else return t;return this}if(c)return c(this.search(g,b,null,!0)),\r\nthis}if(!a||!X(a))return f;g=a;if(this.cache)if(this.o){if(c=this.v.get(a))return c}else this.v.clear(),this.o=!0;g=this.encode(g);if(!g.length)return f;c=this.g;c=da(c)?c(g):g.split(this.split);this.filter&&(c=ba(c,this.filter));C=c.length;d=!0;e=[];var P=G(),Y=0;1<C&&(this.depth&&\"strict\"===this.g?A=!0:c.sort(V));if(!A||(x=this.s))for(var ha=this.c;Y<C;Y++){var L=c[Y];if(L){if(A){if(!r)if(x[L])r=L,P[L]=1;else if(!y)return f;if(y&&Y===C-1&&!e.length)A=!1,L=r||L,P[L]=0;else if(!r)continue}if(!P[L]){var M=\r\n[],aa=!1,S=0,T=A?x[r]:this.u;if(T)for(var ea=void 0,R=0;R<ha-t;R++)if(ea=T[R]&&T[R][L])M[S++]=ea,aa=!0;if(aa)r=L,e[e.length]=1<S?M.concat.apply([],M):M[0];else if(!y){d=!1;break}P[L]=1}}}else d=!1;d&&(f=ua(e,b,k,y));this.cache&&this.v.set(a,f);return f};p.prototype.find=function(a,b){return this.where(a,b,1)[0]||null};p.prototype.where=function(a,b,c,d){var e=this.m,f=[],g=0,h;if(U(a)){c||(c=b);var k=Object.keys(a);var t=k.length;var y=!1;if(1===t&&\"id\"===k[0])return[e[a.id]];if((h=this.I)&&!d)for(var w=\r\n0;w<h.length;w++){var A=h[w],r=a[A];if(!Q(r)){var u=this.B[A][\"@\"+r];if(0===--t)return u;k.splice(k.indexOf(A),1);delete a[A];break}}h=Array(t);for(w=0;w<t;w++)h[w]=k[w].split(\":\")}else{if(da(a)){b=d||Object.keys(e);c=b.length;for(k=0;k<c;k++)t=e[b[k]],a(t)&&(f[g++]=t);return f}if(Q(b))return[e[a]];if(\"id\"===a)return[e[b]];k=[a];t=1;h=[a.split(\":\")];y=!0}d=u||d||Object.keys(e);w=d.length;for(A=0;A<w;A++){r=u?d[A]:e[d[A]];for(var F=!0,z=0;z<t;z++){y||(b=a[k[z]]);var C=h[z],x=C.length,B=r;if(1<x)for(var J=\r\n0;J<x;J++)B=B[C[J]];else B=B[C[0]];if(B!==b){F=!1;break}}if(F&&(f[g++]=r,c&&g===c))break}return f};p.prototype.info=function(){if(this.i)for(var a=0;a<this.i;a++)this.b[a].postMessage({info:!0,id:this.id});else return{id:this.id,items:this.length,cache:this.cache&&this.cache.C?this.cache.C.length:!1,matcher:la.length+(this.h?this.h.length:0),worker:this.i,threshold:this.threshold,depth:this.depth,resolution:this.c,contextual:this.depth&&\"strict\"===this.g}};p.prototype.clear=function(){return this.destroy().init()};\r\np.prototype.destroy=function(){this.cache&&(this.v.clear(),this.v=null);this.u=this.s=this.f=null;if(this.a){for(var a=this.a.keys,b=0;b<a.length;b++)this.a.index[a[b]].destroy();this.a=this.m=null}return this};p.prototype.export=function(){if(this.a){var a=this.a.keys;var b=Array(a.length+1);for(var c=0;c<a.length;c++){var d=this.a.index[a[c]];b[c]=[d.u,d.s,Object.keys(d.f)]}b[c]=this.m}else b=[this.u,this.s,Object.keys(this.f)];return JSON.stringify(b)};p.prototype.import=function(a){a=JSON.parse(a);\r\nvar b=G();if(this.a){for(var c=this.a.keys,d=c.length,e=a[0][2],f=0;f<e.length;f++)b[e[f]]=1;for(e=0;e<d;e++)f=this.a.index[c[e]],f.u=a[e][0],f.s=a[e][1],f.f=b,f.m=a[d];this.m=a[d]}else{c=a[2];for(d=0;d<c.length;d++)b[c[d]]=1;this.u=a[0];this.s=a[1];this.f=b}};var ia={icase:function(a){return a.toLowerCase()},simple:function(){var a=[l(\"[\\u00e0\\u00e1\\u00e2\\u00e3\\u00e4\\u00e5]\"),\"a\",l(\"[\\u00e8\\u00e9\\u00ea\\u00eb]\"),\"e\",l(\"[\\u00ec\\u00ed\\u00ee\\u00ef]\"),\"i\",l(\"[\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u0151]\"),\"o\",\r\nl(\"[\\u00f9\\u00fa\\u00fb\\u00fc\\u0171]\"),\"u\",l(\"[\\u00fd\\u0177\\u00ff]\"),\"y\",l(\"\\u00f1\"),\"n\",l(\"[\\u00e7c]\"),\"k\",l(\"\\u00df\"),\"s\",l(\" & \"),\" and \",l(\"[-/]\"),\" \",l(\"[^a-z0-9 ]\"),\"\",l(\"\\\\s+\"),\" \"];return function(b){b=E(b.toLowerCase(),a);return\" \"===b?\"\":b}}(),advanced:function(){var a=[l(\"ae\"),\"a\",l(\"ai\"),\"ei\",l(\"ay\"),\"ei\",l(\"ey\"),\"ei\",l(\"oe\"),\"o\",l(\"ue\"),\"u\",l(\"ie\"),\"i\",l(\"sz\"),\"s\",l(\"zs\"),\"s\",l(\"sh\"),\"s\",l(\"ck\"),\"k\",l(\"cc\"),\"k\",l(\"th\"),\"t\",l(\"dt\"),\"t\",l(\"ph\"),\"f\",l(\"pf\"),\"f\",l(\"ou\"),\"o\",l(\"uo\"),\"u\"];return function(b,\r\nc){if(!b)return b;b=this.simple(b);2<b.length&&(b=E(b,a));c||1<b.length&&(b=K(b));return b}}(),extra:function(){var a=[l(\"p\"),\"b\",l(\"z\"),\"s\",l(\"[cgq]\"),\"k\",l(\"n\"),\"m\",l(\"d\"),\"t\",l(\"[vw]\"),\"f\",l(\"[aeiouy]\"),\"\"];return function(b){if(!b)return b;b=this.advanced(b,!0);if(1<b.length){b=b.split(\" \");for(var c=0;c<b.length;c++){var d=b[c];1<d.length&&(b[c]=d[0]+E(d.substring(1),a))}b=b.join(\" \");b=K(b)}return b}}(),balance:function(){var a=[l(\"[-/]\"),\" \",l(\"[^a-z0-9 ]\"),\"\",l(\"\\\\s+\"),\" \"];return function(b){return K(E(b.toLowerCase(),\r\na))}}()},Ga=function(){function a(b){this.clear();this.J=!0!==b&&b}a.prototype.clear=function(){this.cache=G();this.count=G();this.index=G();this.C=[]};a.prototype.set=function(b,c){if(this.J&&Q(this.cache[b])){var d=this.C.length;if(d===this.J){d--;var e=this.C[d];delete this.cache[e];delete this.count[e];delete this.index[e]}this.index[b]=d;this.C[d]=b;this.count[b]=-1;this.cache[b]=c;this.get(b)}else this.cache[b]=c};a.prototype.get=function(b){var c=this.cache[b];if(this.J&&c){var d=++this.count[b],\r\ne=this.index,f=e[b];if(0<f){for(var g=this.C,h=f;this.count[g[--f]]<=d&&-1!==f;);f++;if(f!==h){for(d=h;d>f;d--)h=g[d-1],g[d]=h,e[h]=d;g[f]=b;e[b]=f}}}return c};return a}();return p}(function(){var n={},q=\"undefined\"!==typeof Blob&&\"undefined\"!==typeof URL&&URL.createObjectURL;return function(p,D,I,ba,m){I=q?URL.createObjectURL(new Blob([\"(\"+I.toString()+\")()\"],{type:\"text/javascript\"})):p+\".es5.js\";p+=\"-\"+D;n[p]||(n[p]=[]);n[p][m]=new Worker(I);n[p][m].onmessage=ba;console.log(\"Register Worker: \"+\r\np+\"@\"+m);return n[p][m]}}()),this);\r\n","/*!***************************************************\n* mark.js v8.11.1\n* https://markjs.io/\n* Copyright (c) 2014–2018, Julian Kühnel\n* Released under the MIT license https://git.io/vwTVl\n*****************************************************/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Mark = factory());\n}(this, (function () { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar DOMIterator = function () {\n  function DOMIterator(ctx) {\n    var iframes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var iframesTimeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5000;\n    classCallCheck(this, DOMIterator);\n\n    this.ctx = ctx;\n    this.iframes = iframes;\n    this.exclude = exclude;\n    this.iframesTimeout = iframesTimeout;\n  }\n\n  createClass(DOMIterator, [{\n    key: 'getContexts',\n    value: function getContexts() {\n      var ctx = void 0,\n          filteredCtx = [];\n      if (typeof this.ctx === 'undefined' || !this.ctx) {\n        ctx = [];\n      } else if (NodeList.prototype.isPrototypeOf(this.ctx)) {\n        ctx = Array.prototype.slice.call(this.ctx);\n      } else if (Array.isArray(this.ctx)) {\n        ctx = this.ctx;\n      } else if (typeof this.ctx === 'string') {\n        ctx = Array.prototype.slice.call(document.querySelectorAll(this.ctx));\n      } else {\n        ctx = [this.ctx];\n      }\n      ctx.forEach(function (ctx) {\n        var isDescendant = filteredCtx.filter(function (contexts) {\n          return contexts.contains(ctx);\n        }).length > 0;\n        if (filteredCtx.indexOf(ctx) === -1 && !isDescendant) {\n          filteredCtx.push(ctx);\n        }\n      });\n      return filteredCtx;\n    }\n  }, {\n    key: 'getIframeContents',\n    value: function getIframeContents(ifr, successFn) {\n      var errorFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n\n      var doc = void 0;\n      try {\n        var ifrWin = ifr.contentWindow;\n        doc = ifrWin.document;\n        if (!ifrWin || !doc) {\n          throw new Error('iframe inaccessible');\n        }\n      } catch (e) {\n        errorFn();\n      }\n      if (doc) {\n        successFn(doc);\n      }\n    }\n  }, {\n    key: 'isIframeBlank',\n    value: function isIframeBlank(ifr) {\n      var bl = 'about:blank',\n          src = ifr.getAttribute('src').trim(),\n          href = ifr.contentWindow.location.href;\n      return href === bl && src !== bl && src;\n    }\n  }, {\n    key: 'observeIframeLoad',\n    value: function observeIframeLoad(ifr, successFn, errorFn) {\n      var _this = this;\n\n      var called = false,\n          tout = null;\n      var listener = function listener() {\n        if (called) {\n          return;\n        }\n        called = true;\n        clearTimeout(tout);\n        try {\n          if (!_this.isIframeBlank(ifr)) {\n            ifr.removeEventListener('load', listener);\n            _this.getIframeContents(ifr, successFn, errorFn);\n          }\n        } catch (e) {\n          errorFn();\n        }\n      };\n      ifr.addEventListener('load', listener);\n      tout = setTimeout(listener, this.iframesTimeout);\n    }\n  }, {\n    key: 'onIframeReady',\n    value: function onIframeReady(ifr, successFn, errorFn) {\n      try {\n        if (ifr.contentWindow.document.readyState === 'complete') {\n          if (this.isIframeBlank(ifr)) {\n            this.observeIframeLoad(ifr, successFn, errorFn);\n          } else {\n            this.getIframeContents(ifr, successFn, errorFn);\n          }\n        } else {\n          this.observeIframeLoad(ifr, successFn, errorFn);\n        }\n      } catch (e) {\n        errorFn();\n      }\n    }\n  }, {\n    key: 'waitForIframes',\n    value: function waitForIframes(ctx, done) {\n      var _this2 = this;\n\n      var eachCalled = 0;\n      this.forEachIframe(ctx, function () {\n        return true;\n      }, function (ifr) {\n        eachCalled++;\n        _this2.waitForIframes(ifr.querySelector('html'), function () {\n          if (! --eachCalled) {\n            done();\n          }\n        });\n      }, function (handled) {\n        if (!handled) {\n          done();\n        }\n      });\n    }\n  }, {\n    key: 'forEachIframe',\n    value: function forEachIframe(ctx, filter, each) {\n      var _this3 = this;\n\n      var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n      var ifr = ctx.querySelectorAll('iframe'),\n          open = ifr.length,\n          handled = 0;\n      ifr = Array.prototype.slice.call(ifr);\n      var checkEnd = function checkEnd() {\n        if (--open <= 0) {\n          end(handled);\n        }\n      };\n      if (!open) {\n        checkEnd();\n      }\n      ifr.forEach(function (ifr) {\n        if (DOMIterator.matches(ifr, _this3.exclude)) {\n          checkEnd();\n        } else {\n          _this3.onIframeReady(ifr, function (con) {\n            if (filter(ifr)) {\n              handled++;\n              each(con);\n            }\n            checkEnd();\n          }, checkEnd);\n        }\n      });\n    }\n  }, {\n    key: 'createIterator',\n    value: function createIterator(ctx, whatToShow, filter) {\n      return document.createNodeIterator(ctx, whatToShow, filter, false);\n    }\n  }, {\n    key: 'createInstanceOnIframe',\n    value: function createInstanceOnIframe(contents) {\n      return new DOMIterator(contents.querySelector('html'), this.iframes);\n    }\n  }, {\n    key: 'compareNodeIframe',\n    value: function compareNodeIframe(node, prevNode, ifr) {\n      var compCurr = node.compareDocumentPosition(ifr),\n          prev = Node.DOCUMENT_POSITION_PRECEDING;\n      if (compCurr & prev) {\n        if (prevNode !== null) {\n          var compPrev = prevNode.compareDocumentPosition(ifr),\n              after = Node.DOCUMENT_POSITION_FOLLOWING;\n          if (compPrev & after) {\n            return true;\n          }\n        } else {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'getIteratorNode',\n    value: function getIteratorNode(itr) {\n      var prevNode = itr.previousNode();\n      var node = void 0;\n      if (prevNode === null) {\n        node = itr.nextNode();\n      } else {\n        node = itr.nextNode() && itr.nextNode();\n      }\n      return {\n        prevNode: prevNode,\n        node: node\n      };\n    }\n  }, {\n    key: 'checkIframeFilter',\n    value: function checkIframeFilter(node, prevNode, currIfr, ifr) {\n      var key = false,\n          handled = false;\n      ifr.forEach(function (ifrDict, i) {\n        if (ifrDict.val === currIfr) {\n          key = i;\n          handled = ifrDict.handled;\n        }\n      });\n      if (this.compareNodeIframe(node, prevNode, currIfr)) {\n        if (key === false && !handled) {\n          ifr.push({\n            val: currIfr,\n            handled: true\n          });\n        } else if (key !== false && !handled) {\n          ifr[key].handled = true;\n        }\n        return true;\n      }\n      if (key === false) {\n        ifr.push({\n          val: currIfr,\n          handled: false\n        });\n      }\n      return false;\n    }\n  }, {\n    key: 'handleOpenIframes',\n    value: function handleOpenIframes(ifr, whatToShow, eCb, fCb) {\n      var _this4 = this;\n\n      ifr.forEach(function (ifrDict) {\n        if (!ifrDict.handled) {\n          _this4.getIframeContents(ifrDict.val, function (con) {\n            _this4.createInstanceOnIframe(con).forEachNode(whatToShow, eCb, fCb);\n          });\n        }\n      });\n    }\n  }, {\n    key: 'iterateThroughNodes',\n    value: function iterateThroughNodes(whatToShow, ctx, eachCb, filterCb, doneCb) {\n      var _this5 = this;\n\n      var itr = this.createIterator(ctx, whatToShow, filterCb);\n      var ifr = [],\n          elements = [],\n          node = void 0,\n          prevNode = void 0,\n          retrieveNodes = function retrieveNodes() {\n        var _getIteratorNode = _this5.getIteratorNode(itr);\n\n        prevNode = _getIteratorNode.prevNode;\n        node = _getIteratorNode.node;\n\n        return node;\n      };\n      while (retrieveNodes()) {\n        if (this.iframes) {\n          this.forEachIframe(ctx, function (currIfr) {\n            return _this5.checkIframeFilter(node, prevNode, currIfr, ifr);\n          }, function (con) {\n            _this5.createInstanceOnIframe(con).forEachNode(whatToShow, function (ifrNode) {\n              return elements.push(ifrNode);\n            }, filterCb);\n          });\n        }\n        elements.push(node);\n      }\n      elements.forEach(function (node) {\n        eachCb(node);\n      });\n      if (this.iframes) {\n        this.handleOpenIframes(ifr, whatToShow, eachCb, filterCb);\n      }\n      doneCb();\n    }\n  }, {\n    key: 'forEachNode',\n    value: function forEachNode(whatToShow, each, filter) {\n      var _this6 = this;\n\n      var done = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n      var contexts = this.getContexts();\n      var open = contexts.length;\n      if (!open) {\n        done();\n      }\n      contexts.forEach(function (ctx) {\n        var ready = function ready() {\n          _this6.iterateThroughNodes(whatToShow, ctx, each, filter, function () {\n            if (--open <= 0) {\n              done();\n            }\n          });\n        };\n        if (_this6.iframes) {\n          _this6.waitForIframes(ctx, ready);\n        } else {\n          ready();\n        }\n      });\n    }\n  }], [{\n    key: 'matches',\n    value: function matches(element, selector) {\n      var selectors = typeof selector === 'string' ? [selector] : selector,\n          fn = element.matches || element.matchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector || element.webkitMatchesSelector;\n      if (fn) {\n        var match = false;\n        selectors.every(function (sel) {\n          if (fn.call(element, sel)) {\n            match = true;\n            return false;\n          }\n          return true;\n        });\n        return match;\n      } else {\n        return false;\n      }\n    }\n  }]);\n  return DOMIterator;\n}();\n\nvar Mark$1 = function () {\n  function Mark(ctx) {\n    classCallCheck(this, Mark);\n\n    this.ctx = ctx;\n    this.ie = false;\n    var ua = window.navigator.userAgent;\n    if (ua.indexOf('MSIE') > -1 || ua.indexOf('Trident') > -1) {\n      this.ie = true;\n    }\n  }\n\n  createClass(Mark, [{\n    key: 'log',\n    value: function log(msg) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'debug';\n\n      var log = this.opt.log;\n      if (!this.opt.debug) {\n        return;\n      }\n      if ((typeof log === 'undefined' ? 'undefined' : _typeof(log)) === 'object' && typeof log[level] === 'function') {\n        log[level]('mark.js: ' + msg);\n      }\n    }\n  }, {\n    key: 'escapeStr',\n    value: function escapeStr(str) {\n      return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    }\n  }, {\n    key: 'createRegExp',\n    value: function createRegExp(str) {\n      if (this.opt.wildcards !== 'disabled') {\n        str = this.setupWildcardsRegExp(str);\n      }\n      str = this.escapeStr(str);\n      if (Object.keys(this.opt.synonyms).length) {\n        str = this.createSynonymsRegExp(str);\n      }\n      if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n        str = this.setupIgnoreJoinersRegExp(str);\n      }\n      if (this.opt.diacritics) {\n        str = this.createDiacriticsRegExp(str);\n      }\n      str = this.createMergedBlanksRegExp(str);\n      if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n        str = this.createJoinersRegExp(str);\n      }\n      if (this.opt.wildcards !== 'disabled') {\n        str = this.createWildcardsRegExp(str);\n      }\n      str = this.createAccuracyRegExp(str);\n      return str;\n    }\n  }, {\n    key: 'createSynonymsRegExp',\n    value: function createSynonymsRegExp(str) {\n      var syn = this.opt.synonyms,\n          sens = this.opt.caseSensitive ? '' : 'i',\n          joinerPlaceholder = this.opt.ignoreJoiners || this.opt.ignorePunctuation.length ? '\\0' : '';\n      for (var index in syn) {\n        if (syn.hasOwnProperty(index)) {\n          var value = syn[index],\n              k1 = this.opt.wildcards !== 'disabled' ? this.setupWildcardsRegExp(index) : this.escapeStr(index),\n              k2 = this.opt.wildcards !== 'disabled' ? this.setupWildcardsRegExp(value) : this.escapeStr(value);\n          if (k1 !== '' && k2 !== '') {\n            str = str.replace(new RegExp('(' + this.escapeStr(k1) + '|' + this.escapeStr(k2) + ')', 'gm' + sens), joinerPlaceholder + ('(' + this.processSynomyms(k1) + '|') + (this.processSynomyms(k2) + ')') + joinerPlaceholder);\n          }\n        }\n      }\n      return str;\n    }\n  }, {\n    key: 'processSynomyms',\n    value: function processSynomyms(str) {\n      if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n        str = this.setupIgnoreJoinersRegExp(str);\n      }\n      return str;\n    }\n  }, {\n    key: 'setupWildcardsRegExp',\n    value: function setupWildcardsRegExp(str) {\n      str = str.replace(/(?:\\\\)*\\?/g, function (val) {\n        return val.charAt(0) === '\\\\' ? '?' : '\\x01';\n      });\n      return str.replace(/(?:\\\\)*\\*/g, function (val) {\n        return val.charAt(0) === '\\\\' ? '*' : '\\x02';\n      });\n    }\n  }, {\n    key: 'createWildcardsRegExp',\n    value: function createWildcardsRegExp(str) {\n      var spaces = this.opt.wildcards === 'withSpaces';\n      return str.replace(/\\u0001/g, spaces ? '[\\\\S\\\\s]?' : '\\\\S?').replace(/\\u0002/g, spaces ? '[\\\\S\\\\s]*?' : '\\\\S*');\n    }\n  }, {\n    key: 'setupIgnoreJoinersRegExp',\n    value: function setupIgnoreJoinersRegExp(str) {\n      return str.replace(/[^(|)\\\\]/g, function (val, indx, original) {\n        var nextChar = original.charAt(indx + 1);\n        if (/[(|)\\\\]/.test(nextChar) || nextChar === '') {\n          return val;\n        } else {\n          return val + '\\0';\n        }\n      });\n    }\n  }, {\n    key: 'createJoinersRegExp',\n    value: function createJoinersRegExp(str) {\n      var joiner = [];\n      var ignorePunctuation = this.opt.ignorePunctuation;\n      if (Array.isArray(ignorePunctuation) && ignorePunctuation.length) {\n        joiner.push(this.escapeStr(ignorePunctuation.join('')));\n      }\n      if (this.opt.ignoreJoiners) {\n        joiner.push('\\\\u00ad\\\\u200b\\\\u200c\\\\u200d');\n      }\n      return joiner.length ? str.split(/\\u0000+/).join('[' + joiner.join('') + ']*') : str;\n    }\n  }, {\n    key: 'createDiacriticsRegExp',\n    value: function createDiacriticsRegExp(str) {\n      var sens = this.opt.caseSensitive ? '' : 'i',\n          dct = this.opt.caseSensitive ? ['aàáảãạăằắẳẵặâầấẩẫậäåāą', 'AÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ', 'cçćč', 'CÇĆČ', 'dđď', 'DĐĎ', 'eèéẻẽẹêềếểễệëěēę', 'EÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ', 'iìíỉĩịîïī', 'IÌÍỈĨỊÎÏĪ', 'lł', 'LŁ', 'nñňń', 'NÑŇŃ', 'oòóỏõọôồốổỗộơởỡớờợöøō', 'OÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ', 'rř', 'RŘ', 'sšśșş', 'SŠŚȘŞ', 'tťțţ', 'TŤȚŢ', 'uùúủũụưừứửữựûüůū', 'UÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ', 'yýỳỷỹỵÿ', 'YÝỲỶỸỴŸ', 'zžżź', 'ZŽŻŹ'] : ['aàáảãạăằắẳẵặâầấẩẫậäåāąAÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ', 'cçćčCÇĆČ', 'dđďDĐĎ', 'eèéẻẽẹêềếểễệëěēęEÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ', 'iìíỉĩịîïīIÌÍỈĨỊÎÏĪ', 'lłLŁ', 'nñňńNÑŇŃ', 'oòóỏõọôồốổỗộơởỡớờợöøōOÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ', 'rřRŘ', 'sšśșşSŠŚȘŞ', 'tťțţTŤȚŢ', 'uùúủũụưừứửữựûüůūUÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ', 'yýỳỷỹỵÿYÝỲỶỸỴŸ', 'zžżźZŽŻŹ'];\n      var handled = [];\n      str.split('').forEach(function (ch) {\n        dct.every(function (dct) {\n          if (dct.indexOf(ch) !== -1) {\n            if (handled.indexOf(dct) > -1) {\n              return false;\n            }\n            str = str.replace(new RegExp('[' + dct + ']', 'gm' + sens), '[' + dct + ']');\n            handled.push(dct);\n          }\n          return true;\n        });\n      });\n      return str;\n    }\n  }, {\n    key: 'createMergedBlanksRegExp',\n    value: function createMergedBlanksRegExp(str) {\n      return str.replace(/[\\s]+/gmi, '[\\\\s]+');\n    }\n  }, {\n    key: 'createAccuracyRegExp',\n    value: function createAccuracyRegExp(str) {\n      var _this = this;\n\n      var chars = '!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~¡¿';\n      var acc = this.opt.accuracy,\n          val = typeof acc === 'string' ? acc : acc.value,\n          ls = typeof acc === 'string' ? [] : acc.limiters,\n          lsJoin = '';\n      ls.forEach(function (limiter) {\n        lsJoin += '|' + _this.escapeStr(limiter);\n      });\n      switch (val) {\n        case 'partially':\n        default:\n          return '()(' + str + ')';\n        case 'complementary':\n          lsJoin = '\\\\s' + (lsJoin ? lsJoin : this.escapeStr(chars));\n          return '()([^' + lsJoin + ']*' + str + '[^' + lsJoin + ']*)';\n        case 'exactly':\n          return '(^|\\\\s' + lsJoin + ')(' + str + ')(?=$|\\\\s' + lsJoin + ')';\n      }\n    }\n  }, {\n    key: 'getSeparatedKeywords',\n    value: function getSeparatedKeywords(sv) {\n      var _this2 = this;\n\n      var stack = [];\n      sv.forEach(function (kw) {\n        if (!_this2.opt.separateWordSearch) {\n          if (kw.trim() && stack.indexOf(kw) === -1) {\n            stack.push(kw);\n          }\n        } else {\n          kw.split(' ').forEach(function (kwSplitted) {\n            if (kwSplitted.trim() && stack.indexOf(kwSplitted) === -1) {\n              stack.push(kwSplitted);\n            }\n          });\n        }\n      });\n      return {\n        'keywords': stack.sort(function (a, b) {\n          return b.length - a.length;\n        }),\n        'length': stack.length\n      };\n    }\n  }, {\n    key: 'isNumeric',\n    value: function isNumeric(value) {\n      return Number(parseFloat(value)) == value;\n    }\n  }, {\n    key: 'checkRanges',\n    value: function checkRanges(array) {\n      var _this3 = this;\n\n      if (!Array.isArray(array) || Object.prototype.toString.call(array[0]) !== '[object Object]') {\n        this.log('markRanges() will only accept an array of objects');\n        this.opt.noMatch(array);\n        return [];\n      }\n      var stack = [];\n      var last = 0;\n      array.sort(function (a, b) {\n        return a.start - b.start;\n      }).forEach(function (item) {\n        var _callNoMatchOnInvalid = _this3.callNoMatchOnInvalidRanges(item, last),\n            start = _callNoMatchOnInvalid.start,\n            end = _callNoMatchOnInvalid.end,\n            valid = _callNoMatchOnInvalid.valid;\n\n        if (valid) {\n          item.start = start;\n          item.length = end - start;\n          stack.push(item);\n          last = end;\n        }\n      });\n      return stack;\n    }\n  }, {\n    key: 'callNoMatchOnInvalidRanges',\n    value: function callNoMatchOnInvalidRanges(range, last) {\n      var start = void 0,\n          end = void 0,\n          valid = false;\n      if (range && typeof range.start !== 'undefined') {\n        start = parseInt(range.start, 10);\n        end = start + parseInt(range.length, 10);\n        if (this.isNumeric(range.start) && this.isNumeric(range.length) && end - last > 0 && end - start > 0) {\n          valid = true;\n        } else {\n          this.log('Ignoring invalid or overlapping range: ' + ('' + JSON.stringify(range)));\n          this.opt.noMatch(range);\n        }\n      } else {\n        this.log('Ignoring invalid range: ' + JSON.stringify(range));\n        this.opt.noMatch(range);\n      }\n      return {\n        start: start,\n        end: end,\n        valid: valid\n      };\n    }\n  }, {\n    key: 'checkWhitespaceRanges',\n    value: function checkWhitespaceRanges(range, originalLength, string) {\n      var end = void 0,\n          valid = true,\n          max = string.length,\n          offset = originalLength - max,\n          start = parseInt(range.start, 10) - offset;\n      start = start > max ? max : start;\n      end = start + parseInt(range.length, 10);\n      if (end > max) {\n        end = max;\n        this.log('End range automatically set to the max value of ' + max);\n      }\n      if (start < 0 || end - start < 0 || start > max || end > max) {\n        valid = false;\n        this.log('Invalid range: ' + JSON.stringify(range));\n        this.opt.noMatch(range);\n      } else if (string.substring(start, end).replace(/\\s+/g, '') === '') {\n        valid = false;\n        this.log('Skipping whitespace only range: ' + JSON.stringify(range));\n        this.opt.noMatch(range);\n      }\n      return {\n        start: start,\n        end: end,\n        valid: valid\n      };\n    }\n  }, {\n    key: 'getTextNodes',\n    value: function getTextNodes(cb) {\n      var _this4 = this;\n\n      var val = '',\n          nodes = [];\n      this.iterator.forEachNode(NodeFilter.SHOW_TEXT, function (node) {\n        nodes.push({\n          start: val.length,\n          end: (val += node.textContent).length,\n          node: node\n        });\n      }, function (node) {\n        if (_this4.matchesExclude(node.parentNode)) {\n          return NodeFilter.FILTER_REJECT;\n        } else {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n      }, function () {\n        cb({\n          value: val,\n          nodes: nodes\n        });\n      });\n    }\n  }, {\n    key: 'matchesExclude',\n    value: function matchesExclude(el) {\n      return DOMIterator.matches(el, this.opt.exclude.concat(['script', 'style', 'title', 'head', 'html']));\n    }\n  }, {\n    key: 'wrapRangeInTextNode',\n    value: function wrapRangeInTextNode(node, start, end) {\n      var hEl = !this.opt.element ? 'mark' : this.opt.element,\n          startNode = node.splitText(start),\n          ret = startNode.splitText(end - start);\n      var repl = document.createElement(hEl);\n      repl.setAttribute('data-markjs', 'true');\n      if (this.opt.className) {\n        repl.setAttribute('class', this.opt.className);\n      }\n      repl.textContent = startNode.textContent;\n      startNode.parentNode.replaceChild(repl, startNode);\n      return ret;\n    }\n  }, {\n    key: 'wrapRangeInMappedTextNode',\n    value: function wrapRangeInMappedTextNode(dict, start, end, filterCb, eachCb) {\n      var _this5 = this;\n\n      dict.nodes.every(function (n, i) {\n        var sibl = dict.nodes[i + 1];\n        if (typeof sibl === 'undefined' || sibl.start > start) {\n          if (!filterCb(n.node)) {\n            return false;\n          }\n          var s = start - n.start,\n              e = (end > n.end ? n.end : end) - n.start,\n              startStr = dict.value.substr(0, n.start),\n              endStr = dict.value.substr(e + n.start);\n          n.node = _this5.wrapRangeInTextNode(n.node, s, e);\n          dict.value = startStr + endStr;\n          dict.nodes.forEach(function (k, j) {\n            if (j >= i) {\n              if (dict.nodes[j].start > 0 && j !== i) {\n                dict.nodes[j].start -= e;\n              }\n              dict.nodes[j].end -= e;\n            }\n          });\n          end -= e;\n          eachCb(n.node.previousSibling, n.start);\n          if (end > n.end) {\n            start = n.end;\n          } else {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n  }, {\n    key: 'wrapMatches',\n    value: function wrapMatches(regex, ignoreGroups, filterCb, eachCb, endCb) {\n      var _this6 = this;\n\n      var matchIdx = ignoreGroups === 0 ? 0 : ignoreGroups + 1;\n      this.getTextNodes(function (dict) {\n        dict.nodes.forEach(function (node) {\n          node = node.node;\n          var match = void 0;\n          while ((match = regex.exec(node.textContent)) !== null && match[matchIdx] !== '') {\n            if (!filterCb(match[matchIdx], node)) {\n              continue;\n            }\n            var pos = match.index;\n            if (matchIdx !== 0) {\n              for (var i = 1; i < matchIdx; i++) {\n                pos += match[i].length;\n              }\n            }\n            node = _this6.wrapRangeInTextNode(node, pos, pos + match[matchIdx].length);\n            eachCb(node.previousSibling);\n            regex.lastIndex = 0;\n          }\n        });\n        endCb();\n      });\n    }\n  }, {\n    key: 'wrapMatchesAcrossElements',\n    value: function wrapMatchesAcrossElements(regex, ignoreGroups, filterCb, eachCb, endCb) {\n      var _this7 = this;\n\n      var matchIdx = ignoreGroups === 0 ? 0 : ignoreGroups + 1;\n      this.getTextNodes(function (dict) {\n        var match = void 0;\n        while ((match = regex.exec(dict.value)) !== null && match[matchIdx] !== '') {\n          var start = match.index;\n          if (matchIdx !== 0) {\n            for (var i = 1; i < matchIdx; i++) {\n              start += match[i].length;\n            }\n          }\n          var end = start + match[matchIdx].length;\n          _this7.wrapRangeInMappedTextNode(dict, start, end, function (node) {\n            return filterCb(match[matchIdx], node);\n          }, function (node, lastIndex) {\n            regex.lastIndex = lastIndex;\n            eachCb(node);\n          });\n        }\n        endCb();\n      });\n    }\n  }, {\n    key: 'wrapRangeFromIndex',\n    value: function wrapRangeFromIndex(ranges, filterCb, eachCb, endCb) {\n      var _this8 = this;\n\n      this.getTextNodes(function (dict) {\n        var originalLength = dict.value.length;\n        ranges.forEach(function (range, counter) {\n          var _checkWhitespaceRange = _this8.checkWhitespaceRanges(range, originalLength, dict.value),\n              start = _checkWhitespaceRange.start,\n              end = _checkWhitespaceRange.end,\n              valid = _checkWhitespaceRange.valid;\n\n          if (valid) {\n            _this8.wrapRangeInMappedTextNode(dict, start, end, function (node) {\n              return filterCb(node, range, dict.value.substring(start, end), counter);\n            }, function (node) {\n              eachCb(node, range);\n            });\n          }\n        });\n        endCb();\n      });\n    }\n  }, {\n    key: 'unwrapMatches',\n    value: function unwrapMatches(node) {\n      var parent = node.parentNode;\n      var docFrag = document.createDocumentFragment();\n      while (node.firstChild) {\n        docFrag.appendChild(node.removeChild(node.firstChild));\n      }\n      parent.replaceChild(docFrag, node);\n      if (!this.ie) {\n        parent.normalize();\n      } else {\n        this.normalizeTextNode(parent);\n      }\n    }\n  }, {\n    key: 'normalizeTextNode',\n    value: function normalizeTextNode(node) {\n      if (!node) {\n        return;\n      }\n      if (node.nodeType === 3) {\n        while (node.nextSibling && node.nextSibling.nodeType === 3) {\n          node.nodeValue += node.nextSibling.nodeValue;\n          node.parentNode.removeChild(node.nextSibling);\n        }\n      } else {\n        this.normalizeTextNode(node.firstChild);\n      }\n      this.normalizeTextNode(node.nextSibling);\n    }\n  }, {\n    key: 'markRegExp',\n    value: function markRegExp(regexp, opt) {\n      var _this9 = this;\n\n      this.opt = opt;\n      this.log('Searching with expression \"' + regexp + '\"');\n      var totalMatches = 0,\n          fn = 'wrapMatches';\n      var eachCb = function eachCb(element) {\n        totalMatches++;\n        _this9.opt.each(element);\n      };\n      if (this.opt.acrossElements) {\n        fn = 'wrapMatchesAcrossElements';\n      }\n      this[fn](regexp, this.opt.ignoreGroups, function (match, node) {\n        return _this9.opt.filter(node, match, totalMatches);\n      }, eachCb, function () {\n        if (totalMatches === 0) {\n          _this9.opt.noMatch(regexp);\n        }\n        _this9.opt.done(totalMatches);\n      });\n    }\n  }, {\n    key: 'mark',\n    value: function mark(sv, opt) {\n      var _this10 = this;\n\n      this.opt = opt;\n      var totalMatches = 0,\n          fn = 'wrapMatches';\n\n      var _getSeparatedKeywords = this.getSeparatedKeywords(typeof sv === 'string' ? [sv] : sv),\n          kwArr = _getSeparatedKeywords.keywords,\n          kwArrLen = _getSeparatedKeywords.length,\n          sens = this.opt.caseSensitive ? '' : 'i',\n          handler = function handler(kw) {\n        var regex = new RegExp(_this10.createRegExp(kw), 'gm' + sens),\n            matches = 0;\n        _this10.log('Searching with expression \"' + regex + '\"');\n        _this10[fn](regex, 1, function (term, node) {\n          return _this10.opt.filter(node, kw, totalMatches, matches);\n        }, function (element) {\n          matches++;\n          totalMatches++;\n          _this10.opt.each(element);\n        }, function () {\n          if (matches === 0) {\n            _this10.opt.noMatch(kw);\n          }\n          if (kwArr[kwArrLen - 1] === kw) {\n            _this10.opt.done(totalMatches);\n          } else {\n            handler(kwArr[kwArr.indexOf(kw) + 1]);\n          }\n        });\n      };\n\n      if (this.opt.acrossElements) {\n        fn = 'wrapMatchesAcrossElements';\n      }\n      if (kwArrLen === 0) {\n        this.opt.done(totalMatches);\n      } else {\n        handler(kwArr[0]);\n      }\n    }\n  }, {\n    key: 'markRanges',\n    value: function markRanges(rawRanges, opt) {\n      var _this11 = this;\n\n      this.opt = opt;\n      var totalMatches = 0,\n          ranges = this.checkRanges(rawRanges);\n      if (ranges && ranges.length) {\n        this.log('Starting to mark with the following ranges: ' + JSON.stringify(ranges));\n        this.wrapRangeFromIndex(ranges, function (node, range, match, counter) {\n          return _this11.opt.filter(node, range, match, counter);\n        }, function (element, range) {\n          totalMatches++;\n          _this11.opt.each(element, range);\n        }, function () {\n          _this11.opt.done(totalMatches);\n        });\n      } else {\n        this.opt.done(totalMatches);\n      }\n    }\n  }, {\n    key: 'unmark',\n    value: function unmark(opt) {\n      var _this12 = this;\n\n      this.opt = opt;\n      var sel = this.opt.element ? this.opt.element : '*';\n      sel += '[data-markjs]';\n      if (this.opt.className) {\n        sel += '.' + this.opt.className;\n      }\n      this.log('Removal selector \"' + sel + '\"');\n      this.iterator.forEachNode(NodeFilter.SHOW_ELEMENT, function (node) {\n        _this12.unwrapMatches(node);\n      }, function (node) {\n        var matchesSel = DOMIterator.matches(node, sel),\n            matchesExclude = _this12.matchesExclude(node);\n        if (!matchesSel || matchesExclude) {\n          return NodeFilter.FILTER_REJECT;\n        } else {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n      }, this.opt.done);\n    }\n  }, {\n    key: 'opt',\n    set: function set$$1(val) {\n      this._opt = _extends({}, {\n        'element': '',\n        'className': '',\n        'exclude': [],\n        'iframes': false,\n        'iframesTimeout': 5000,\n        'separateWordSearch': true,\n        'diacritics': true,\n        'synonyms': {},\n        'accuracy': 'partially',\n        'acrossElements': false,\n        'caseSensitive': false,\n        'ignoreJoiners': false,\n        'ignoreGroups': 0,\n        'ignorePunctuation': [],\n        'wildcards': 'disabled',\n        'each': function each() {},\n        'noMatch': function noMatch() {},\n        'filter': function filter() {\n          return true;\n        },\n        'done': function done() {},\n        'debug': false,\n        'log': window.console\n      }, val);\n    },\n    get: function get$$1() {\n      return this._opt;\n    }\n  }, {\n    key: 'iterator',\n    get: function get$$1() {\n      return new DOMIterator(this.ctx, this.opt.iframes, this.opt.exclude, this.opt.iframesTimeout);\n    }\n  }]);\n  return Mark;\n}();\n\nfunction Mark(ctx) {\n  var _this = this;\n\n  var instance = new Mark$1(ctx);\n  this.mark = function (sv, opt) {\n    instance.mark(sv, opt);\n    return _this;\n  };\n  this.markRegExp = function (sv, opt) {\n    instance.markRegExp(sv, opt);\n    return _this;\n  };\n  this.markRanges = function (sv, opt) {\n    instance.markRanges(sv, opt);\n    return _this;\n  };\n  this.unmark = function (opt) {\n    instance.unmark(opt);\n    return _this;\n  };\n  return this;\n}\n\nreturn Mark;\n\n})));\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLogs = getLogs;\nexports.getAudits = getAudits;\nexports.getConfig = getConfig;\nexports.getLdapGroups = getLdapGroups;\nexports.getLdapGroupsCount = getLdapGroupsCount;\nexports.getEnvironmentConfig = getEnvironmentConfig;\nexports.getComplianceReports = getComplianceReports;\nexports.getClusterInfo = getClusterInfo;\nexports.getUserAccessTokens = getUserAccessTokens;\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction getLogs(state) {\n  return state.entities.admin.logs;\n}\n\nfunction getAudits(state) {\n  return state.entities.admin.audits;\n}\n\nfunction getConfig(state) {\n  return state.entities.admin.config;\n}\n\nfunction getLdapGroups(state) {\n  return state.entities.admin.ldapGroups;\n}\n\nfunction getLdapGroupsCount(state) {\n  return state.entities.admin.ldapGroupsCount;\n}\n\nfunction getEnvironmentConfig(state) {\n  return state.entities.admin.environmentConfig;\n}\n\nfunction getComplianceReports(state) {\n  return state.entities.admin.complianceReports;\n}\n\nfunction getClusterInfo(state) {\n  return state.entities.admin.clusterInfo;\n}\n\nfunction getUserAccessTokens(state) {\n  return state.entities.admin.userAccessTokens;\n}"],"sourceRoot":""}