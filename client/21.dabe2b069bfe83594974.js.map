{"version":3,"sources":["webpack:///./node_modules/mattermost-redux/actions/timezone.js","webpack:///./node_modules/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.js","webpack:///./node_modules/mattermost-redux/utils/notify_props.js"],"names":["__webpack_require__","Object","defineProperty","exports","value","autoUpdateTimezone","deviceTimezone","async","dispatch","getState","currentUer","_users","getCurrentUser","currentTimezone","_timezone","getUserTimezone","id","newTimezoneExists","automaticTimezone","useAutomaticTimezone","timezone","manualTimezone","updatedUser","target","i","arguments","length","source","ownKeys","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","getOwnPropertyDescriptor","_objectSpread","_users2","updateMe","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","obj","configurable","writable","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","jq","$","Color","val","predefinedColors","fallbackColor","fallbackFormat","hexNumberSignPrefix","this","fallbackValue","h","s","b","a","origFormat","colors","extend","webColors","setColor","String","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","transparent","prototype","constructor","getValue","setValue","_sanitizeNumber","isNaN","toLowerCase","match","Math","ceil","parseFloat","isTransparent","strVal","trim","rgbaIsTransparent","rgba","r","g","parsedColor","parse","format","setHue","setSaturation","setBrightness","setAlpha","round","parseInt","toRGB","R","G","B","X","C","abs","toHex","ignoreFormat","prefix","rgb","hexStr","toString","slice","toHSL","H","L","S","l","toAlias","c","original","alias","RGBtoHSB","V","max","min","HueToRGB","p","q","HSLtoRGB","tr","tg","tb","values","that","result","isAlias","each","stringParsers","parser","re","exec","getValidFallbackFormat","formats","indexOf","forceRawValue","translateAlias","execResult","colorNameToHex","name","defaults","horizontal","inline","color","input","container","component","sliders","saturation","maxLeft","maxTop","callLeft","callTop","hue","alpha","slidersHorz","template","align","customClass","colorSelectors","Colorpicker","element","options","addClass","data","find","is","createColor","updateInput","updateData","disabled","$picker","picker","colorpicker","selectorsContainer","$btn","css","on","event","preventDefault","append","show","proxy","e","currentTarget","mousedown","appendTo","keyup.colorpicker","keyup","change.colorpicker","change","focus.colorpicker","focusout.colorpicker","hide","click.colorpicker","attr","update","trigger","destroy","remove","removeData","off","removeClass","type","reposition","window","document","body","offset","left","outerWidth","top","outerHeight","isDisabled","hasInput","stopPropagation","mousedown.colorpicker","parents","prop","updatePicker","sl","icns","eq","end","updateComponent","icn","backgroundColor","force","defaultValue","disable","enable","currentSlider","mousePointer","pageX","pageY","originalEvent","touches","zone","closest","guide","style","mousemove.colorpicker","mousemove","touchmove.colorpicker","mouseup.colorpicker","mouseup","touchend.colorpicker","call","keyCode","fn","option","apiArgs","Array","isSingleElement","returnValue","$jq","$this","inst","isFunction","module","getEmailInterval","enableEmailNotification","enableEmailBatching","emailIntervalPreference","INTERVAL_NEVER","INTERVAL_IMMEDIATE","INTERVAL_FIFTEEN_MINUTES","INTERVAL_HOUR","_constants","Preferences","validValuesWithEmailBatching","validValuesWithoutEmailBatching"],"mappings":"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","file":"21.dabe2b069bfe83594974.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.promise\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.autoUpdateTimezone = autoUpdateTimezone;\n\nvar _users = require(\"../selectors/entities/users\");\n\nvar _timezone = require(\"../selectors/entities/timezone\");\n\nvar _users2 = require(\"./users\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction autoUpdateTimezone(deviceTimezone\n/*: string*/\n) {\n  return async (dispatch\n  /*: DispatchFunc*/\n  , getState\n  /*: GetStateFunc*/\n  ) => {\n    const currentUer = (0, _users.getCurrentUser)(getState());\n    const currentTimezone = (0, _timezone.getUserTimezone)(getState(), currentUer.id);\n    const newTimezoneExists = currentTimezone.automaticTimezone !== deviceTimezone;\n\n    if (currentTimezone.useAutomaticTimezone && newTimezoneExists) {\n      const timezone = {\n        useAutomaticTimezone: 'true',\n        automaticTimezone: deviceTimezone,\n        manualTimezone: currentTimezone.manualTimezone\n      };\n\n      const updatedUser = _objectSpread({}, currentUer, {\n        timezone\n      });\n\n      (0, _users2.updateMe)(updatedUser)(dispatch, getState);\n    }\n  };\n}","/*!\n * Bootstrap Colorpicker v2.5.2\n * https://itsjavi.com/bootstrap-colorpicker/\n *\n * Originally written by (c) 2012 Stefan Petre\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0.txt\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([\"jquery\"], function(jq) {\n      return (factory(jq));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"));\n  } else if (jQuery && !jQuery.fn.colorpicker) {\n    factory(jQuery);\n  }\n}(this, function($) {\n  'use strict';\n  /**\n   * Color manipulation helper class\n   *\n   * @param {Object|String} [val]\n   * @param {Object} [predefinedColors]\n   * @param {String|null} [fallbackColor]\n   * @param {String|null} [fallbackFormat]\n   * @param {Boolean} [hexNumberSignPrefix]\n   * @constructor\n   */\n  var Color = function(\n    val, predefinedColors, fallbackColor, fallbackFormat, hexNumberSignPrefix) {\n    this.fallbackValue = fallbackColor ?\n      (\n        fallbackColor && (typeof fallbackColor.h !== 'undefined') ?\n        fallbackColor :\n        this.value = {\n          h: 0,\n          s: 0,\n          b: 0,\n          a: 1\n        }\n      ) :\n      null;\n\n    this.fallbackFormat = fallbackFormat ? fallbackFormat : 'rgba';\n\n    this.hexNumberSignPrefix = hexNumberSignPrefix === true;\n\n    this.value = this.fallbackValue;\n\n    this.origFormat = null; // original string format\n\n    this.predefinedColors = predefinedColors ? predefinedColors : {};\n\n    // We don't want to share aliases across instances so we extend new object\n    this.colors = $.extend({}, Color.webColors, this.predefinedColors);\n\n    if (val) {\n      if (typeof val.h !== 'undefined') {\n        this.value = val;\n      } else {\n        this.setColor(String(val));\n      }\n    }\n\n    if (!this.value) {\n      // Initial value is always black if no arguments are passed or val is empty\n      this.value = {\n        h: 0,\n        s: 0,\n        b: 0,\n        a: 1\n      };\n    }\n  };\n\n  Color.webColors = { // 140 predefined colors from the HTML Colors spec\n    \"aliceblue\": \"f0f8ff\",\n    \"antiquewhite\": \"faebd7\",\n    \"aqua\": \"00ffff\",\n    \"aquamarine\": \"7fffd4\",\n    \"azure\": \"f0ffff\",\n    \"beige\": \"f5f5dc\",\n    \"bisque\": \"ffe4c4\",\n    \"black\": \"000000\",\n    \"blanchedalmond\": \"ffebcd\",\n    \"blue\": \"0000ff\",\n    \"blueviolet\": \"8a2be2\",\n    \"brown\": \"a52a2a\",\n    \"burlywood\": \"deb887\",\n    \"cadetblue\": \"5f9ea0\",\n    \"chartreuse\": \"7fff00\",\n    \"chocolate\": \"d2691e\",\n    \"coral\": \"ff7f50\",\n    \"cornflowerblue\": \"6495ed\",\n    \"cornsilk\": \"fff8dc\",\n    \"crimson\": \"dc143c\",\n    \"cyan\": \"00ffff\",\n    \"darkblue\": \"00008b\",\n    \"darkcyan\": \"008b8b\",\n    \"darkgoldenrod\": \"b8860b\",\n    \"darkgray\": \"a9a9a9\",\n    \"darkgreen\": \"006400\",\n    \"darkkhaki\": \"bdb76b\",\n    \"darkmagenta\": \"8b008b\",\n    \"darkolivegreen\": \"556b2f\",\n    \"darkorange\": \"ff8c00\",\n    \"darkorchid\": \"9932cc\",\n    \"darkred\": \"8b0000\",\n    \"darksalmon\": \"e9967a\",\n    \"darkseagreen\": \"8fbc8f\",\n    \"darkslateblue\": \"483d8b\",\n    \"darkslategray\": \"2f4f4f\",\n    \"darkturquoise\": \"00ced1\",\n    \"darkviolet\": \"9400d3\",\n    \"deeppink\": \"ff1493\",\n    \"deepskyblue\": \"00bfff\",\n    \"dimgray\": \"696969\",\n    \"dodgerblue\": \"1e90ff\",\n    \"firebrick\": \"b22222\",\n    \"floralwhite\": \"fffaf0\",\n    \"forestgreen\": \"228b22\",\n    \"fuchsia\": \"ff00ff\",\n    \"gainsboro\": \"dcdcdc\",\n    \"ghostwhite\": \"f8f8ff\",\n    \"gold\": \"ffd700\",\n    \"goldenrod\": \"daa520\",\n    \"gray\": \"808080\",\n    \"green\": \"008000\",\n    \"greenyellow\": \"adff2f\",\n    \"honeydew\": \"f0fff0\",\n    \"hotpink\": \"ff69b4\",\n    \"indianred\": \"cd5c5c\",\n    \"indigo\": \"4b0082\",\n    \"ivory\": \"fffff0\",\n    \"khaki\": \"f0e68c\",\n    \"lavender\": \"e6e6fa\",\n    \"lavenderblush\": \"fff0f5\",\n    \"lawngreen\": \"7cfc00\",\n    \"lemonchiffon\": \"fffacd\",\n    \"lightblue\": \"add8e6\",\n    \"lightcoral\": \"f08080\",\n    \"lightcyan\": \"e0ffff\",\n    \"lightgoldenrodyellow\": \"fafad2\",\n    \"lightgrey\": \"d3d3d3\",\n    \"lightgreen\": \"90ee90\",\n    \"lightpink\": \"ffb6c1\",\n    \"lightsalmon\": \"ffa07a\",\n    \"lightseagreen\": \"20b2aa\",\n    \"lightskyblue\": \"87cefa\",\n    \"lightslategray\": \"778899\",\n    \"lightsteelblue\": \"b0c4de\",\n    \"lightyellow\": \"ffffe0\",\n    \"lime\": \"00ff00\",\n    \"limegreen\": \"32cd32\",\n    \"linen\": \"faf0e6\",\n    \"magenta\": \"ff00ff\",\n    \"maroon\": \"800000\",\n    \"mediumaquamarine\": \"66cdaa\",\n    \"mediumblue\": \"0000cd\",\n    \"mediumorchid\": \"ba55d3\",\n    \"mediumpurple\": \"9370d8\",\n    \"mediumseagreen\": \"3cb371\",\n    \"mediumslateblue\": \"7b68ee\",\n    \"mediumspringgreen\": \"00fa9a\",\n    \"mediumturquoise\": \"48d1cc\",\n    \"mediumvioletred\": \"c71585\",\n    \"midnightblue\": \"191970\",\n    \"mintcream\": \"f5fffa\",\n    \"mistyrose\": \"ffe4e1\",\n    \"moccasin\": \"ffe4b5\",\n    \"navajowhite\": \"ffdead\",\n    \"navy\": \"000080\",\n    \"oldlace\": \"fdf5e6\",\n    \"olive\": \"808000\",\n    \"olivedrab\": \"6b8e23\",\n    \"orange\": \"ffa500\",\n    \"orangered\": \"ff4500\",\n    \"orchid\": \"da70d6\",\n    \"palegoldenrod\": \"eee8aa\",\n    \"palegreen\": \"98fb98\",\n    \"paleturquoise\": \"afeeee\",\n    \"palevioletred\": \"d87093\",\n    \"papayawhip\": \"ffefd5\",\n    \"peachpuff\": \"ffdab9\",\n    \"peru\": \"cd853f\",\n    \"pink\": \"ffc0cb\",\n    \"plum\": \"dda0dd\",\n    \"powderblue\": \"b0e0e6\",\n    \"purple\": \"800080\",\n    \"red\": \"ff0000\",\n    \"rosybrown\": \"bc8f8f\",\n    \"royalblue\": \"4169e1\",\n    \"saddlebrown\": \"8b4513\",\n    \"salmon\": \"fa8072\",\n    \"sandybrown\": \"f4a460\",\n    \"seagreen\": \"2e8b57\",\n    \"seashell\": \"fff5ee\",\n    \"sienna\": \"a0522d\",\n    \"silver\": \"c0c0c0\",\n    \"skyblue\": \"87ceeb\",\n    \"slateblue\": \"6a5acd\",\n    \"slategray\": \"708090\",\n    \"snow\": \"fffafa\",\n    \"springgreen\": \"00ff7f\",\n    \"steelblue\": \"4682b4\",\n    \"tan\": \"d2b48c\",\n    \"teal\": \"008080\",\n    \"thistle\": \"d8bfd8\",\n    \"tomato\": \"ff6347\",\n    \"turquoise\": \"40e0d0\",\n    \"violet\": \"ee82ee\",\n    \"wheat\": \"f5deb3\",\n    \"white\": \"ffffff\",\n    \"whitesmoke\": \"f5f5f5\",\n    \"yellow\": \"ffff00\",\n    \"yellowgreen\": \"9acd32\",\n    \"transparent\": \"transparent\"\n  };\n\n  Color.prototype = {\n    constructor: Color,\n    colors: {}, // merged web and predefined colors\n    predefinedColors: {},\n    /**\n     * @return {Object}\n     */\n    getValue: function() {\n      return this.value;\n    },\n    /**\n     * @param {Object} val\n     */\n    setValue: function(val) {\n      this.value = val;\n    },\n    _sanitizeNumber: function(val) {\n      if (typeof val === 'number') {\n        return val;\n      }\n      if (isNaN(val) || (val === null) || (val === '') || (val === undefined)) {\n        return 1;\n      }\n      if (val === '') {\n        return 0;\n      }\n      if (typeof val.toLowerCase !== 'undefined') {\n        if (val.match(/^\\./)) {\n          val = \"0\" + val;\n        }\n        return Math.ceil(parseFloat(val) * 100) / 100;\n      }\n      return 1;\n    },\n    isTransparent: function(strVal) {\n      if (!strVal || !(typeof strVal === 'string' || strVal instanceof String)) {\n        return false;\n      }\n      strVal = strVal.toLowerCase().trim();\n      return (strVal === 'transparent') || (strVal.match(/#?00000000/)) || (strVal.match(/(rgba|hsla)\\(0,0,0,0?\\.?0\\)/));\n    },\n    rgbaIsTransparent: function(rgba) {\n      return ((rgba.r === 0) && (rgba.g === 0) && (rgba.b === 0) && (rgba.a === 0));\n    },\n    // parse a string to HSB\n    /**\n     * @protected\n     * @param {String} strVal\n     * @returns {boolean} Returns true if it could be parsed, false otherwise\n     */\n    setColor: function(strVal) {\n      strVal = strVal.toLowerCase().trim();\n      if (strVal) {\n        if (this.isTransparent(strVal)) {\n          this.value = {\n            h: 0,\n            s: 0,\n            b: 0,\n            a: 0\n          };\n          return true;\n        } else {\n          var parsedColor = this.parse(strVal);\n          if (parsedColor) {\n            this.value = this.value = {\n              h: parsedColor.h,\n              s: parsedColor.s,\n              b: parsedColor.b,\n              a: parsedColor.a\n            };\n            if (!this.origFormat) {\n              this.origFormat = parsedColor.format;\n            }\n          } else if (this.fallbackValue) {\n            // if parser fails, defaults to fallbackValue if defined, otherwise the value won't be changed\n            this.value = this.fallbackValue;\n          }\n        }\n      }\n      return false;\n    },\n    setHue: function(h) {\n      this.value.h = 1 - h;\n    },\n    setSaturation: function(s) {\n      this.value.s = s;\n    },\n    setBrightness: function(b) {\n      this.value.b = 1 - b;\n    },\n    setAlpha: function(a) {\n      this.value.a = Math.round((parseInt((1 - a) * 100, 10) / 100) * 100) / 100;\n    },\n    toRGB: function(h, s, b, a) {\n      if (arguments.length === 0) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      h *= 360;\n      var R, G, B, X, C;\n      h = (h % 360) / 60;\n      C = b * s;\n      X = C * (1 - Math.abs(h % 2 - 1));\n      R = G = B = b - C;\n\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n\n      return {\n        r: Math.round(R * 255),\n        g: Math.round(G * 255),\n        b: Math.round(B * 255),\n        a: a\n      };\n    },\n    toHex: function(ignoreFormat, h, s, b, a) {\n      if (arguments.length <= 1) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      var prefix = '#';\n      var rgb = this.toRGB(h, s, b, a);\n\n      if (this.rgbaIsTransparent(rgb)) {\n        return 'transparent';\n      }\n\n      if (!ignoreFormat) {\n        prefix = (this.hexNumberSignPrefix ? '#' : '');\n      }\n\n      var hexStr = prefix + (\n          (1 << 24) +\n          (parseInt(rgb.r) << 16) +\n          (parseInt(rgb.g) << 8) +\n          parseInt(rgb.b))\n        .toString(16)\n        .slice(1);\n\n      return hexStr;\n    },\n    toHSL: function(h, s, b, a) {\n      if (arguments.length === 0) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      var H = h,\n        L = (2 - s) * b,\n        S = s * b;\n      if (L > 0 && L <= 1) {\n        S /= L;\n      } else {\n        S /= 2 - L;\n      }\n      L /= 2;\n      if (S > 1) {\n        S = 1;\n      }\n      return {\n        h: isNaN(H) ? 0 : H,\n        s: isNaN(S) ? 0 : S,\n        l: isNaN(L) ? 0 : L,\n        a: isNaN(a) ? 0 : a\n      };\n    },\n    toAlias: function(r, g, b, a) {\n      var c, rgb = (arguments.length === 0) ? this.toHex(true) : this.toHex(true, r, g, b, a);\n\n      // support predef. colors in non-hex format too, as defined in the alias itself\n      var original = this.origFormat === 'alias' ? rgb : this.toString(false, this.origFormat);\n\n      for (var alias in this.colors) {\n        c = this.colors[alias].toLowerCase().trim();\n        if ((c === rgb) || (c === original)) {\n          return alias;\n        }\n      }\n      return false;\n    },\n    RGBtoHSB: function(r, g, b, a) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n\n      var H, S, V, C;\n      V = Math.max(r, g, b);\n      C = V - Math.min(r, g, b);\n      H = (C === 0 ? null :\n        V === r ? (g - b) / C :\n        V === g ? (b - r) / C + 2 :\n        (r - g) / C + 4\n      );\n      H = ((H + 360) % 6) * 60 / 360;\n      S = C === 0 ? 0 : C / V;\n      return {\n        h: this._sanitizeNumber(H),\n        s: S,\n        b: V,\n        a: this._sanitizeNumber(a)\n      };\n    },\n    HueToRGB: function(p, q, h) {\n      if (h < 0) {\n        h += 1;\n      } else if (h > 1) {\n        h -= 1;\n      }\n      if ((h * 6) < 1) {\n        return p + (q - p) * h * 6;\n      } else if ((h * 2) < 1) {\n        return q;\n      } else if ((h * 3) < 2) {\n        return p + (q - p) * ((2 / 3) - h) * 6;\n      } else {\n        return p;\n      }\n    },\n    HSLtoRGB: function(h, s, l, a) {\n      if (s < 0) {\n        s = 0;\n      }\n      var q;\n      if (l <= 0.5) {\n        q = l * (1 + s);\n      } else {\n        q = l + s - (l * s);\n      }\n\n      var p = 2 * l - q;\n\n      var tr = h + (1 / 3);\n      var tg = h;\n      var tb = h - (1 / 3);\n\n      var r = Math.round(this.HueToRGB(p, q, tr) * 255);\n      var g = Math.round(this.HueToRGB(p, q, tg) * 255);\n      var b = Math.round(this.HueToRGB(p, q, tb) * 255);\n      return [r, g, b, this._sanitizeNumber(a)];\n    },\n    /**\n     * @param {String} strVal\n     * @returns {Object} Object containing h,s,b,a,format properties or FALSE if failed to parse\n     */\n    parse: function(strVal) {\n      if (arguments.length === 0) {\n        return false;\n      }\n\n      var that = this,\n        result = false,\n        isAlias = (typeof this.colors[strVal] !== 'undefined'),\n        values, format;\n\n      if (isAlias) {\n        strVal = this.colors[strVal].toLowerCase().trim();\n      }\n\n      $.each(this.stringParsers, function(i, parser) {\n        var match = parser.re.exec(strVal);\n        values = match && parser.parse.apply(that, [match]);\n        if (values) {\n          result = {};\n          format = (isAlias ? 'alias' : (parser.format ? parser.format : that.getValidFallbackFormat()));\n          if (format.match(/hsla?/)) {\n            result = that.RGBtoHSB.apply(that, that.HSLtoRGB.apply(that, values));\n          } else {\n            result = that.RGBtoHSB.apply(that, values);\n          }\n          if (result instanceof Object) {\n            result.format = format;\n          }\n          return false; // stop iterating\n        }\n        return true;\n      });\n      return result;\n    },\n    getValidFallbackFormat: function() {\n      var formats = [\n        'rgba', 'rgb', 'hex', 'hsla', 'hsl'\n      ];\n      if (this.origFormat && (formats.indexOf(this.origFormat) !== -1)) {\n        return this.origFormat;\n      }\n      if (this.fallbackFormat && (formats.indexOf(this.fallbackFormat) !== -1)) {\n        return this.fallbackFormat;\n      }\n\n      return 'rgba'; // By default, return a format that will not lose the alpha info\n    },\n    /**\n     *\n     * @param {string} [format] (default: rgba)\n     * @param {boolean} [translateAlias] Return real color for pre-defined (non-standard) aliases (default: false)\n     * @param {boolean} [forceRawValue] Forces hashtag prefix when getting hex color (default: false)\n     * @returns {String}\n     */\n    toString: function(forceRawValue, format, translateAlias) {\n      format = format || this.origFormat || this.fallbackFormat;\n      translateAlias = translateAlias || false;\n\n      var c = false;\n\n      switch (format) {\n        case 'rgb':\n          {\n            c = this.toRGB();\n            if (this.rgbaIsTransparent(c)) {\n              return 'transparent';\n            }\n            return 'rgb(' + c.r + ',' + c.g + ',' + c.b + ')';\n          }\n          break;\n        case 'rgba':\n          {\n            c = this.toRGB();\n            return 'rgba(' + c.r + ',' + c.g + ',' + c.b + ',' + c.a + ')';\n          }\n          break;\n        case 'hsl':\n          {\n            c = this.toHSL();\n            return 'hsl(' + Math.round(c.h * 360) + ',' + Math.round(c.s * 100) + '%,' + Math.round(c.l * 100) + '%)';\n          }\n          break;\n        case 'hsla':\n          {\n            c = this.toHSL();\n            return 'hsla(' + Math.round(c.h * 360) + ',' + Math.round(c.s * 100) + '%,' + Math.round(c.l * 100) + '%,' + c.a + ')';\n          }\n          break;\n        case 'hex':\n          {\n            return this.toHex(forceRawValue);\n          }\n          break;\n        case 'alias':\n          {\n            c = this.toAlias();\n\n            if (c === false) {\n              return this.toString(forceRawValue, this.getValidFallbackFormat());\n            }\n\n            if (translateAlias && !(c in Color.webColors) && (c in this.predefinedColors)) {\n              return this.predefinedColors[c];\n            }\n\n            return c;\n          }\n        default:\n          {\n            return c;\n          }\n          break;\n      }\n    },\n    // a set of RE's that can match strings and generate color tuples.\n    // from John Resig color plugin\n    // https://github.com/jquery/jquery-color/\n    stringParsers: [{\n      re: /rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*?\\)/,\n      format: 'rgb',\n      parse: function(execResult) {\n        return [\n          execResult[1],\n          execResult[2],\n          execResult[3],\n          1\n        ];\n      }\n    }, {\n      re: /rgb\\(\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*?\\)/,\n      format: 'rgb',\n      parse: function(execResult) {\n        return [\n          2.55 * execResult[1],\n          2.55 * execResult[2],\n          2.55 * execResult[3],\n          1\n        ];\n      }\n    }, {\n      re: /rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: 'rgba',\n      parse: function(execResult) {\n        return [\n          execResult[1],\n          execResult[2],\n          execResult[3],\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /rgba\\(\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: 'rgba',\n      parse: function(execResult) {\n        return [\n          2.55 * execResult[1],\n          2.55 * execResult[2],\n          2.55 * execResult[3],\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /hsl\\(\\s*(\\d*(?:\\.\\d+)?)\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*?\\)/,\n      format: 'hsl',\n      parse: function(execResult) {\n        return [\n          execResult[1] / 360,\n          execResult[2] / 100,\n          execResult[3] / 100,\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /hsla\\(\\s*(\\d*(?:\\.\\d+)?)\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: 'hsla',\n      parse: function(execResult) {\n        return [\n          execResult[1] / 360,\n          execResult[2] / 100,\n          execResult[3] / 100,\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /#?([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,\n      format: 'hex',\n      parse: function(execResult) {\n        return [\n          parseInt(execResult[1], 16),\n          parseInt(execResult[2], 16),\n          parseInt(execResult[3], 16),\n          1\n        ];\n      }\n    }, {\n      re: /#?([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/,\n      format: 'hex',\n      parse: function(execResult) {\n        return [\n          parseInt(execResult[1] + execResult[1], 16),\n          parseInt(execResult[2] + execResult[2], 16),\n          parseInt(execResult[3] + execResult[3], 16),\n          1\n        ];\n      }\n    }],\n    colorNameToHex: function(name) {\n      if (typeof this.colors[name.toLowerCase()] !== 'undefined') {\n        return this.colors[name.toLowerCase()];\n      }\n      return false;\n    }\n  };\n\n  /*\n   * Default plugin options\n   */\n  var defaults = {\n    horizontal: false, // horizontal mode layout ?\n    inline: false, //forces to show the colorpicker as an inline element\n    color: false, //forces a color\n    format: false, //forces a format\n    input: 'input', // children input selector\n    container: false, // container selector\n    component: '.add-on, .input-group-addon', // children component selector\n    fallbackColor: false, // fallback color value. null = keeps current color.\n    fallbackFormat: 'hex', // fallback color format\n    hexNumberSignPrefix: true, // put a '#' (number sign) before hex strings\n    sliders: {\n      saturation: {\n        maxLeft: 100,\n        maxTop: 100,\n        callLeft: 'setSaturation',\n        callTop: 'setBrightness'\n      },\n      hue: {\n        maxLeft: 0,\n        maxTop: 100,\n        callLeft: false,\n        callTop: 'setHue'\n      },\n      alpha: {\n        maxLeft: 0,\n        maxTop: 100,\n        callLeft: false,\n        callTop: 'setAlpha'\n      }\n    },\n    slidersHorz: {\n      saturation: {\n        maxLeft: 100,\n        maxTop: 100,\n        callLeft: 'setSaturation',\n        callTop: 'setBrightness'\n      },\n      hue: {\n        maxLeft: 100,\n        maxTop: 0,\n        callLeft: 'setHue',\n        callTop: false\n      },\n      alpha: {\n        maxLeft: 100,\n        maxTop: 0,\n        callLeft: 'setAlpha',\n        callTop: false\n      }\n    },\n    template: '<div class=\"colorpicker dropdown-menu\">' +\n      '<div class=\"colorpicker-saturation\"><i><b></b></i></div>' +\n      '<div class=\"colorpicker-hue\"><i></i></div>' +\n      '<div class=\"colorpicker-alpha\"><i></i></div>' +\n      '<div class=\"colorpicker-color\"><div /></div>' +\n      '<div class=\"colorpicker-selectors\"></div>' +\n      '</div>',\n    align: 'right',\n    customClass: null, // custom class added to the colorpicker element\n    colorSelectors: null // custom color aliases\n  };\n\n  /**\n   * Colorpicker component class\n   *\n   * @param {Object|String} element\n   * @param {Object} options\n   * @constructor\n   */\n  var Colorpicker = function(element, options) {\n    this.element = $(element).addClass('colorpicker-element');\n    this.options = $.extend(true, {}, defaults, this.element.data(), options);\n    this.component = this.options.component;\n    this.component = (this.component !== false) ? this.element.find(this.component) : false;\n    if (this.component && (this.component.length === 0)) {\n      this.component = false;\n    }\n    this.container = (this.options.container === true) ? this.element : this.options.container;\n    this.container = (this.container !== false) ? $(this.container) : false;\n\n    // Is the element an input? Should we search inside for any input?\n    this.input = this.element.is('input') ? this.element : (this.options.input ?\n      this.element.find(this.options.input) : false);\n    if (this.input && (this.input.length === 0)) {\n      this.input = false;\n    }\n    // Set HSB color\n    this.color = this.createColor(this.options.color !== false ? this.options.color : this.getValue());\n\n    this.format = this.options.format !== false ? this.options.format : this.color.origFormat;\n\n    if (this.options.color !== false) {\n      this.updateInput(this.color);\n      this.updateData(this.color);\n    }\n\n    this.disabled = false;\n\n    // Setup picker\n    var $picker = this.picker = $(this.options.template);\n    if (this.options.customClass) {\n      $picker.addClass(this.options.customClass);\n    }\n    if (this.options.inline) {\n      $picker.addClass('colorpicker-inline colorpicker-visible');\n    } else {\n      $picker.addClass('colorpicker-hidden');\n    }\n    if (this.options.horizontal) {\n      $picker.addClass('colorpicker-horizontal');\n    }\n    if (\n      (['rgba', 'hsla', 'alias'].indexOf(this.format) !== -1) ||\n      this.options.format === false ||\n      this.getValue() === 'transparent'\n    ) {\n      $picker.addClass('colorpicker-with-alpha');\n    }\n    if (this.options.align === 'right') {\n      $picker.addClass('colorpicker-right');\n    }\n    if (this.options.inline === true) {\n      $picker.addClass('colorpicker-no-arrow');\n    }\n    if (this.options.colorSelectors) {\n      var colorpicker = this,\n        selectorsContainer = colorpicker.picker.find('.colorpicker-selectors');\n\n      if (selectorsContainer.length > 0) {\n        $.each(this.options.colorSelectors, function(name, color) {\n          var $btn = $('<i />')\n            .addClass('colorpicker-selectors-color')\n            .css('background-color', color)\n            .data('class', name).data('alias', name);\n\n          $btn.on('mousedown.colorpicker touchstart.colorpicker', function(event) {\n            event.preventDefault();\n            colorpicker.setValue(\n              colorpicker.format === 'alias' ? $(this).data('alias') : $(this).css('background-color')\n            );\n          });\n          selectorsContainer.append($btn);\n        });\n        selectorsContainer.show().addClass('colorpicker-visible');\n      }\n    }\n\n    // Prevent closing the colorpicker when clicking on itself\n    $picker.on('mousedown.colorpicker touchstart.colorpicker', $.proxy(function(e) {\n      if (e.target === e.currentTarget) {\n        e.preventDefault();\n      }\n    }, this));\n\n    // Bind click/tap events on the sliders\n    $picker.find('.colorpicker-saturation, .colorpicker-hue, .colorpicker-alpha')\n      .on('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.mousedown, this));\n\n    $picker.appendTo(this.container ? this.container : $('body'));\n\n    // Bind other events\n    if (this.input !== false) {\n      this.input.on({\n        'keyup.colorpicker': $.proxy(this.keyup, this)\n      });\n      this.input.on({\n        'change.colorpicker': $.proxy(this.change, this)\n      });\n      if (this.component === false) {\n        this.element.on({\n          'focus.colorpicker': $.proxy(this.show, this)\n        });\n      }\n      if (this.options.inline === false) {\n        this.element.on({\n          'focusout.colorpicker': $.proxy(this.hide, this)\n        });\n      }\n    }\n\n    if (this.component !== false) {\n      this.component.on({\n        'click.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    if ((this.input === false) && (this.component === false)) {\n      this.element.on({\n        'click.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    // for HTML5 input[type='color']\n    if ((this.input !== false) && (this.component !== false) && (this.input.attr('type') === 'color')) {\n\n      this.input.on({\n        'click.colorpicker': $.proxy(this.show, this),\n        'focus.colorpicker': $.proxy(this.show, this)\n      });\n    }\n    this.update();\n\n    $($.proxy(function() {\n      this.element.trigger('create');\n    }, this));\n  };\n\n  Colorpicker.Color = Color;\n\n  Colorpicker.prototype = {\n    constructor: Colorpicker,\n    destroy: function() {\n      this.picker.remove();\n      this.element.removeData('colorpicker', 'color').off('.colorpicker');\n      if (this.input !== false) {\n        this.input.off('.colorpicker');\n      }\n      if (this.component !== false) {\n        this.component.off('.colorpicker');\n      }\n      this.element.removeClass('colorpicker-element');\n      this.element.trigger({\n        type: 'destroy'\n      });\n    },\n    reposition: function() {\n      if (this.options.inline !== false || this.options.container) {\n        return false;\n      }\n      var type = this.container && this.container[0] !== window.document.body ? 'position' : 'offset';\n      var element = this.component || this.element;\n      var offset = element[type]();\n      if (this.options.align === 'right') {\n        offset.left -= this.picker.outerWidth() - element.outerWidth();\n      }\n      this.picker.css({\n        top: offset.top + element.outerHeight(),\n        left: offset.left\n      });\n    },\n    show: function(e) {\n      if (this.isDisabled()) {\n        // Don't show the widget if it's disabled (the input)\n        return;\n      }\n      this.picker.addClass('colorpicker-visible').removeClass('colorpicker-hidden');\n      this.reposition();\n      $(window).on('resize.colorpicker', $.proxy(this.reposition, this));\n      if (e && (!this.hasInput() || this.input.attr('type') === 'color')) {\n        if (e.stopPropagation && e.preventDefault) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n      if ((this.component || !this.input) && (this.options.inline === false)) {\n        $(window.document).on({\n          'mousedown.colorpicker': $.proxy(this.hide, this)\n        });\n      }\n      this.element.trigger({\n        type: 'showPicker',\n        color: this.color\n      });\n    },\n    hide: function(e) {\n      if ((typeof e !== 'undefined') && e.target) {\n        // Prevent hide if triggered by an event and an element inside the colorpicker has been clicked/touched\n        if (\n          $(e.currentTarget).parents('.colorpicker').length > 0 ||\n          $(e.target).parents('.colorpicker').length > 0\n        ) {\n          return false;\n        }\n      }\n      this.picker.addClass('colorpicker-hidden').removeClass('colorpicker-visible');\n      $(window).off('resize.colorpicker', this.reposition);\n      $(window.document).off({\n        'mousedown.colorpicker': this.hide\n      });\n      this.update();\n      this.element.trigger({\n        type: 'hidePicker',\n        color: this.color\n      });\n    },\n    updateData: function(val) {\n      val = val || this.color.toString(false, this.format);\n      this.element.data('color', val);\n      return val;\n    },\n    updateInput: function(val) {\n      val = val || this.color.toString(false, this.format);\n      if (this.input !== false) {\n        this.input.prop('value', val);\n        this.input.trigger('change');\n      }\n      return val;\n    },\n    updatePicker: function(val) {\n      if (typeof val !== 'undefined') {\n        this.color = this.createColor(val);\n      }\n      var sl = (this.options.horizontal === false) ? this.options.sliders : this.options.slidersHorz;\n      var icns = this.picker.find('i');\n      if (icns.length === 0) {\n        return;\n      }\n      if (this.options.horizontal === false) {\n        sl = this.options.sliders;\n        icns.eq(1).css('top', sl.hue.maxTop * (1 - this.color.value.h)).end()\n          .eq(2).css('top', sl.alpha.maxTop * (1 - this.color.value.a));\n      } else {\n        sl = this.options.slidersHorz;\n        icns.eq(1).css('left', sl.hue.maxLeft * (1 - this.color.value.h)).end()\n          .eq(2).css('left', sl.alpha.maxLeft * (1 - this.color.value.a));\n      }\n      icns.eq(0).css({\n        'top': sl.saturation.maxTop - this.color.value.b * sl.saturation.maxTop,\n        'left': this.color.value.s * sl.saturation.maxLeft\n      });\n\n      this.picker.find('.colorpicker-saturation')\n        .css('backgroundColor', this.color.toHex(true, this.color.value.h, 1, 1, 1));\n\n      this.picker.find('.colorpicker-alpha')\n        .css('backgroundColor', this.color.toHex(true));\n\n      this.picker.find('.colorpicker-color, .colorpicker-color div')\n        .css('backgroundColor', this.color.toString(true, this.format));\n\n      return val;\n    },\n    updateComponent: function(val) {\n      var color;\n\n      if (typeof val !== 'undefined') {\n        color = this.createColor(val);\n      } else {\n        color = this.color;\n      }\n\n      if (this.component !== false) {\n        var icn = this.component.find('i').eq(0);\n        if (icn.length > 0) {\n          icn.css({\n            'backgroundColor': color.toString(true, this.format)\n          });\n        } else {\n          this.component.css({\n            'backgroundColor': color.toString(true, this.format)\n          });\n        }\n      }\n\n      return color.toString(false, this.format);\n    },\n    update: function(force) {\n      var val;\n      if ((this.getValue(false) !== false) || (force === true)) {\n        // Update input/data only if the current value is not empty\n        val = this.updateComponent();\n        this.updateInput(val);\n        this.updateData(val);\n        this.updatePicker(); // only update picker if value is not empty\n      }\n      return val;\n\n    },\n    setValue: function(val) { // set color manually\n      this.color = this.createColor(val);\n      this.update(true);\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color,\n        value: val\n      });\n    },\n    /**\n     * Creates a new color using the instance options\n     * @protected\n     * @param {String} val\n     * @returns {Color}\n     */\n    createColor: function(val) {\n      return new Color(\n        val ? val : null,\n        this.options.colorSelectors,\n        this.options.fallbackColor ? this.options.fallbackColor : this.color,\n        this.options.fallbackFormat,\n        this.options.hexNumberSignPrefix\n      );\n    },\n    getValue: function(defaultValue) {\n      defaultValue = (typeof defaultValue === 'undefined') ? this.options.fallbackColor : defaultValue;\n      var val;\n      if (this.hasInput()) {\n        val = this.input.val();\n      } else {\n        val = this.element.data('color');\n      }\n      if ((val === undefined) || (val === '') || (val === null)) {\n        // if not defined or empty, return default\n        val = defaultValue;\n      }\n      return val;\n    },\n    hasInput: function() {\n      return (this.input !== false);\n    },\n    isDisabled: function() {\n      return this.disabled;\n    },\n    disable: function() {\n      if (this.hasInput()) {\n        this.input.prop('disabled', true);\n      }\n      this.disabled = true;\n      this.element.trigger({\n        type: 'disable',\n        color: this.color,\n        value: this.getValue()\n      });\n      return true;\n    },\n    enable: function() {\n      if (this.hasInput()) {\n        this.input.prop('disabled', false);\n      }\n      this.disabled = false;\n      this.element.trigger({\n        type: 'enable',\n        color: this.color,\n        value: this.getValue()\n      });\n      return true;\n    },\n    currentSlider: null,\n    mousePointer: {\n      left: 0,\n      top: 0\n    },\n    mousedown: function(e) {\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n\n      var target = $(e.target);\n\n      //detect the slider and set the limits and callbacks\n      var zone = target.closest('div');\n      var sl = this.options.horizontal ? this.options.slidersHorz : this.options.sliders;\n      if (!zone.is('.colorpicker')) {\n        if (zone.is('.colorpicker-saturation')) {\n          this.currentSlider = $.extend({}, sl.saturation);\n        } else if (zone.is('.colorpicker-hue')) {\n          this.currentSlider = $.extend({}, sl.hue);\n        } else if (zone.is('.colorpicker-alpha')) {\n          this.currentSlider = $.extend({}, sl.alpha);\n        } else {\n          return false;\n        }\n        var offset = zone.offset();\n        //reference to guide's style\n        this.currentSlider.guide = zone.find('i')[0].style;\n        this.currentSlider.left = e.pageX - offset.left;\n        this.currentSlider.top = e.pageY - offset.top;\n        this.mousePointer = {\n          left: e.pageX,\n          top: e.pageY\n        };\n        //trigger mousemove to move the guide to the current position\n        $(window.document).on({\n          'mousemove.colorpicker': $.proxy(this.mousemove, this),\n          'touchmove.colorpicker': $.proxy(this.mousemove, this),\n          'mouseup.colorpicker': $.proxy(this.mouseup, this),\n          'touchend.colorpicker': $.proxy(this.mouseup, this)\n        }).trigger('mousemove');\n      }\n      return false;\n    },\n    mousemove: function(e) {\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n      var left = Math.max(\n        0,\n        Math.min(\n          this.currentSlider.maxLeft,\n          this.currentSlider.left + ((e.pageX || this.mousePointer.left) - this.mousePointer.left)\n        )\n      );\n      var top = Math.max(\n        0,\n        Math.min(\n          this.currentSlider.maxTop,\n          this.currentSlider.top + ((e.pageY || this.mousePointer.top) - this.mousePointer.top)\n        )\n      );\n      this.currentSlider.guide.left = left + 'px';\n      this.currentSlider.guide.top = top + 'px';\n      if (this.currentSlider.callLeft) {\n        this.color[this.currentSlider.callLeft].call(this.color, left / this.currentSlider.maxLeft);\n      }\n      if (this.currentSlider.callTop) {\n        this.color[this.currentSlider.callTop].call(this.color, top / this.currentSlider.maxTop);\n      }\n      // Change format dynamically\n      // Only occurs if user choose the dynamic format by\n      // setting option format to false\n      if (\n        this.options.format === false &&\n        (this.currentSlider.callTop === 'setAlpha' ||\n          this.currentSlider.callLeft === 'setAlpha')\n      ) {\n\n        // Converting from hex / rgb to rgba\n        if (this.color.value.a !== 1) {\n          this.format = 'rgba';\n          this.color.origFormat = 'rgba';\n        }\n\n        // Converting from rgba to hex\n        else {\n          this.format = 'hex';\n          this.color.origFormat = 'hex';\n        }\n      }\n      this.update(true);\n\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color\n      });\n      return false;\n    },\n    mouseup: function(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      $(window.document).off({\n        'mousemove.colorpicker': this.mousemove,\n        'touchmove.colorpicker': this.mousemove,\n        'mouseup.colorpicker': this.mouseup,\n        'touchend.colorpicker': this.mouseup\n      });\n      return false;\n    },\n    change: function(e) {\n      this.keyup(e);\n    },\n    keyup: function(e) {\n      if ((e.keyCode === 38)) {\n        if (this.color.value.a < 1) {\n          this.color.value.a = Math.round((this.color.value.a + 0.01) * 100) / 100;\n        }\n        this.update(true);\n      } else if ((e.keyCode === 40)) {\n        if (this.color.value.a > 0) {\n          this.color.value.a = Math.round((this.color.value.a - 0.01) * 100) / 100;\n        }\n        this.update(true);\n      } else {\n        this.color = this.createColor(this.input.val());\n        // Change format dynamically\n        // Only occurs if user choose the dynamic format by\n        // setting option format to false\n        if (this.color.origFormat && this.options.format === false) {\n          this.format = this.color.origFormat;\n        }\n        if (this.getValue(false) !== false) {\n          this.updateData();\n          this.updateComponent();\n          this.updatePicker();\n        }\n      }\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color,\n        value: this.input.val()\n      });\n    }\n  };\n\n  $.colorpicker = Colorpicker;\n\n  $.fn.colorpicker = function(option) {\n    var apiArgs = Array.prototype.slice.call(arguments, 1),\n      isSingleElement = (this.length === 1),\n      returnValue = null;\n\n    var $jq = this.each(function() {\n      var $this = $(this),\n        inst = $this.data('colorpicker'),\n        options = ((typeof option === 'object') ? option : {});\n\n      if (!inst) {\n        inst = new Colorpicker(this, options);\n        $this.data('colorpicker', inst);\n      }\n\n      if (typeof option === 'string') {\n        if ($.isFunction(inst[option])) {\n          returnValue = inst[option].apply(inst, apiArgs);\n        } else { // its a property ?\n          if (apiArgs.length) {\n            // set property\n            inst[option] = apiArgs[0];\n          }\n          returnValue = inst[option];\n        }\n      } else {\n        returnValue = $this;\n      }\n    });\n    return isSingleElement ? returnValue : $jq;\n  };\n\n  $.fn.colorpicker.constructor = Colorpicker;\n\n}));\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEmailInterval = getEmailInterval;\n\nvar _constants = require(\"../constants\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction getEmailInterval(enableEmailNotification\n/*: boolean*/\n, enableEmailBatching\n/*: number*/\n, emailIntervalPreference\n/*: number*/\n)\n/*: number*/\n{\n  const {\n    INTERVAL_NEVER,\n    INTERVAL_IMMEDIATE,\n    INTERVAL_FIFTEEN_MINUTES,\n    INTERVAL_HOUR\n  } = _constants.Preferences;\n  const validValuesWithEmailBatching = [INTERVAL_IMMEDIATE, INTERVAL_NEVER, INTERVAL_FIFTEEN_MINUTES, INTERVAL_HOUR];\n  const validValuesWithoutEmailBatching = [INTERVAL_IMMEDIATE, INTERVAL_NEVER];\n\n  if (!enableEmailNotification) {\n    return INTERVAL_NEVER;\n  } else if (enableEmailBatching && validValuesWithEmailBatching.indexOf(emailIntervalPreference) === -1) {\n    // When email batching is enabled, the default interval is 15 minutes\n    return INTERVAL_FIFTEEN_MINUTES;\n  } else if (!enableEmailBatching && validValuesWithoutEmailBatching.indexOf(emailIntervalPreference) === -1) {\n    // When email batching is not enabled, the default interval is immediately\n    return INTERVAL_IMMEDIATE;\n  }\n\n  return emailIntervalPreference;\n}"],"sourceRoot":""}