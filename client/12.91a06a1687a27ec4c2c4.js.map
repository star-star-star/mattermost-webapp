{"version":3,"sources":["webpack:///./components/create_team/components/display_name.jsx","webpack:///./components/create_team/components/team_url/team_url.jsx","webpack:///./components/create_team/components/team_url/index.js","webpack:///./components/create_team/create_team.jsx","webpack:///./components/create_team/index.js","webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/widgets/icons/fa_next_icon.jsx","webpack:///./components/common/site_name_and_description.jsx"],"names":["TeamSignupDisplayNamePage","React","PureComponent","constructor","props","super","_defineProperty","this","e","preventDefault","displayName","ReactDOM","findDOMNode","refs","name","value","trim","setState","nameError","react_default","a","createElement","index_es","id","defaultMessage","length","Constants","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","values","min","max","newState","state","wizard","team","display_name","cleanUpUrlable","updateParent","currentTarget","select","componentDidMount","trackEvent","render","nameDivClass","className","alt","src","logoImage","type","ref","placeholder","maxLength","defaultValue","autoFocus","onFocus","handleFocus","spellCheck","onClick","submitNext","fa_next_icon","PropTypes","object","func","TeamUrl","team_url_defineProperty","async","cleanedName","URL","actions","checkIfTeamExists","createTeam","test","index","RESERVED_TEAM_NAMES","indexOf","formatted_markdown_message","isLoading","teamSignup","JSON","parse","stringify","exists","data","error","history","push","DEFAULT_CHANNEL","message","title","concat","urlTooltip","Tooltip","finishMessage","OverlayTrigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","Button","bsStyle","disabled","href","submitBack","shape","isRequired","connect","dispatch","bindActionCreators","CreateTeam","create_team_defineProperty","currentChannel","currentTeam","customDescriptionText","match","siteName","url","announcement_bar","back_button","site_name_and_description","react_router","path","display_name_TeamSignupDisplayNamePage","Object","assign","team_url","to","string","config","getConfig","getCurrentChannel","getCurrentTeam","CustomDescriptionText","SiteName","BackButton","react__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","react_intl__WEBPACK_IMPORTED_MODULE_2__","module","exports","__webpack_require__","p","NextIcon","additionalClassName","SiteNameAndDescription","description","Fragment"],"mappings":"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","file":"12.91a06a1687a27ec4c2c4.js","sourcesContent":["// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {cleanUpUrlable} from 'utils/url.jsx';\nimport logoImage from 'images/logo.png';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\n\nexport default class TeamSignupDisplayNamePage extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_01_name');\n    }\n\n    submitNext = (e) => {\n        e.preventDefault();\n\n        var displayName = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        if (!displayName) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        const newState = this.props.state;\n        newState.wizard = 'team_url';\n        newState.team.display_name = displayName;\n        newState.team.name = cleanUpUrlable(displayName);\n        this.props.updateParent(newState);\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        var nameError = null;\n        var nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.display_name.teamName'\n                            defaultMessage='Team Name'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-9'>\n                                <input\n                                    id='teamNameInput'\n                                    type='text'\n                                    ref='name'\n                                    className='form-control'\n                                    placeholder=''\n                                    maxLength='128'\n                                    defaultValue={this.props.state.team.display_name}\n                                    autoFocus={true}\n                                    onFocus={this.handleFocus}\n                                    spellCheck='false'\n                                />\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <div>\n                        <FormattedMessage\n                            id='create_team.display_name.nameHelp'\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\n                        />\n                    </div>\n                    <button\n                        id='teamNameNextButton'\n                        type='submit'\n                        className='btn btn-primary margin--extra'\n                        onClick={this.submitNext}\n                    >\n                        <FormattedMessage\n                            id='create_team.display_name.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon/>\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as URL from 'utils/url.jsx';\nimport logoImage from 'images/logo.png';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class TeamUrl extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to check if a team already exists\n             */\n            checkIfTeamExists: PropTypes.func.isRequired,\n\n            /*\n             * Action creator to create a new team\n             */\n            createTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nameError: '',\n            isLoading: false,\n        };\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n    }\n\n    submitBack = (e) => {\n        e.preventDefault();\n        const newState = this.props.state;\n        newState.wizard = 'display_name';\n        this.props.updateParent(newState);\n    }\n\n    submitNext = async (e) => {\n        e.preventDefault();\n\n        const name = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />),\n            });\n            return;\n        }\n\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n                this.setState({nameError: (\n                    <FormattedMarkdownMessage\n                        id='create_team.team_url.taken'\n                        defaultMessage='This URL [starts with a reserved word](!https://docs.vueteams.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\n                    />),\n                });\n                return;\n            }\n        }\n\n        this.setState({isLoading: true});\n        var teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = name;\n\n        const {exists} = await checkIfTeamExists(name);\n\n        if (exists) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.unavailable'\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\n                />),\n            });\n            this.setState({isLoading: false});\n            return;\n        }\n\n        const {data, error} = await createTeam(teamSignup.team);\n\n        if (data) {\n            this.props.history.push('/' + data.name + '/channels/' + Constants.DEFAULT_CHANNEL);\n            trackEvent('signup', 'signup_team_03_complete');\n        } else if (error) {\n            this.setState({nameError: error.message});\n            this.setState({isLoading: false});\n        }\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup team logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            defaultMessage='Team URL'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    <OverlayTrigger\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title}\n                                        </span>\n                                    </OverlayTrigger>\n                                    <input\n                                        id='teamURLInput'\n                                        type='text'\n                                        ref='name'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength='128'\n                                        defaultValue={this.props.state.team.name}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        spellCheck='false'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint1'\n                                defaultMessage='Short and memorable is best'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint2'\n                                defaultMessage='Use lowercase letters, numbers and dashes'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint3'\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\n                            />\n                        </li>\n                    </ul>\n                    <div className='margin--extra'>\n                        <Button\n                            id='teamURLFinishButton'\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={this.submitNext}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='margin--extra'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {checkIfTeamExists, createTeam} from 'mattermost-redux/actions/teams';\n\nimport TeamUrl from './team_url';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            checkIfTeamExists,\n            createTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TeamUrl);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport DisplayName from 'components/create_team/components/display_name';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport TeamUrl from 'components/create_team/components/team_url';\n\nexport default class CreateTeam extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing information on the current team, used to define BackButton's url\n         */\n        currentTeam: PropTypes.object,\n\n        /*\n         * Object containing information on the current selected channel, used to define BackButton's url\n         */\n        currentChannel: PropTypes.object,\n\n        /*\n         * String containing the custom branding's text\n         */\n        customDescriptionText: PropTypes.string,\n\n        /*\n         * String containing the custom branding's Site Name\n         */\n        siteName: PropTypes.string,\n\n        /*\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        const state = {};\n        state.team = {};\n        state.wizard = 'display_name';\n        this.state = state;\n    }\n\n    updateParent = (state) => {\n        this.setState(state);\n        this.props.history.push('/create_team/' + state.wizard);\n    }\n\n    render() {\n        const {\n            currentChannel,\n            currentTeam,\n            customDescriptionText,\n            match,\n            siteName,\n        } = this.props;\n\n        let url = '/select_team';\n        if (currentTeam) {\n            url = `/${currentTeam.name}`;\n            if (currentChannel) {\n                url += `/channels/${currentChannel.name}`;\n            }\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton url={url}/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <div className='signup__content'>\n                            <Switch>\n                                <Route\n                                    path={`${this.props.match.url}/display_name`}\n                                    render={(props) => (\n                                        <DisplayName\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path={`${this.props.match.url}/team_url`}\n                                    render={(props) => (\n                                        <TeamUrl\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Redirect to={`${match.url}/display_name`}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport CreateTeam from './create_team';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const customDescriptionText = config.CustomDescriptionText;\n    const siteName = config.SiteName;\n\n    return {\n        currentChannel,\n        currentTeam,\n        customDescriptionText,\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(CreateTeam);\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/a03442cd2c7f4902febc7202b961fad9.png\";","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class NextIcon extends React.PureComponent {\n    static propTypes = {\n        additionalClassName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        additionalClassName: null,\n    };\n\n    render() {\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <FormattedMessage\n                id='generic_icons.next'\n                defaultMessage='Next Icon'\n            >\n                {(title) => (\n                    <i\n                        className={className}\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","// Copyright (c) 2019-present Vue Technology LLC All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SiteNameAndDescription extends React.PureComponent {\n    static propTypes = {\n        customDescriptionText: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        siteName: 'Vue',\n    };\n\n    render() {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h4\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n"],"sourceRoot":""}